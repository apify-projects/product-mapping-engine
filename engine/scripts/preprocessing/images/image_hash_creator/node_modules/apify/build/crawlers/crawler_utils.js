"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.throwOnBlockedRequest = exports.handleRequestTimeout = void 0;
/* eslint-enable no-unused-vars,import/named,import/no-duplicates,import/order */
/**
 * Handles timeout request
 * @param {Session} session
 * @param {string} errorMessage
 * @private
 */
function handleRequestTimeout(session, errorMessage) {
    if (session)
        session.markBad();
    const timeoutMillis = errorMessage.match(/(\d+)\s?ms/)[1]; // first capturing group
    const timeoutSecs = Number(timeoutMillis) / 1000;
    throw new Error(`Navigation timed out after ${timeoutSecs} seconds.`);
}
exports.handleRequestTimeout = handleRequestTimeout;
/**
 * Handles blocked request
 * @param {Session} session
 * @param {number} statusCode
 * @private
 */
function throwOnBlockedRequest(session, statusCode) {
    const isBlocked = session.retireOnBlockedStatusCodes(statusCode);
    if (isBlocked) {
        throw new Error(`Request blocked - received ${statusCode} status code.`);
    }
}
exports.throwOnBlockedRequest = throwOnBlockedRequest;
