(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["ApifyClient"] = factory();
	else
		root["ApifyClient"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@apify/consts/consts.js":
/*!**********************************************!*\
  !*** ./node_modules/@apify/consts/consts.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROJECT_STATUSES = exports.SOURCE_FILE_FORMATS = exports.MAX_MULTIFILE_BYTES = exports.APIFY_UI_CLIENT_KEY = exports.WEBHOOK_ALLOWED_PAYLOAD_VARIABLES = exports.WEBHOOK_DEFAULT_PAYLOAD_TEMPLATE = exports.WEBHOOK_EVENT_TYPE_GROUPS = exports.WEBHOOK_EVENT_TYPES = exports.USER_BASIC_TEXT_XSS_OPTIONS = exports.VERSION_INT_MINOR_BASE = exports.VERSION_INT_MAJOR_BASE = exports.ALL_ACTOR_CATEGORIES = exports.LEGACY_ACTOR_CATEGORIES = exports.ACTOR_CATEGORIES = exports.MAX_PAYLOAD_SIZE_BYTES = exports.CUSTOMER_REQUEST_TYPES = exports.ACTOR_LOG_MAX_CHARS = exports.KEY_VALUE_STORE_KEYS = exports.LOCAL_ENV_VARS = exports.LOCAL_STORAGE_SUBDIRS = exports.DEFAULT_CONTAINER_PORT = exports.INTEGER_ENV_VARS = exports.ENV_VARS = exports.MONGO_INC_THROTTLED_INTERVAL_MILLIS = exports.REQUEST_QUEUE_HEAD_MAX_LIMIT = exports.ME_USER_NAME_PLACEHOLDER = exports.DEFAULT_PLATFORM_LIMITS = exports.ACTOR_LIMITS = exports.COMPUTE_UNIT_MILLIS = exports.COMPUTE_UNIT_MB = exports.ACT_RESTART_ON_ERROR = exports.ACTOR_RESTART_ON_ERROR = exports.BUILD_TAG_LATEST = exports.SHORT_CRAWLER_ID_LENGTH = exports.ACTOR_NAME = exports.DNS_SAFE_NAME_MAX_LENGTH = exports.USERNAME = exports.ANONYMOUS_USERNAME = exports.ACT_TYPES = exports.DOCKER_LABELS = exports.ACTOR_BASE_DOCKER_IMAGE_DEFAULT = exports.ACTOR_BASE_DOCKER_IMAGES = exports.META_ORIGINS = exports.WORKER_SERVICE_TYPES = exports.ACT_JOB_TERMINAL_STATUSES = exports.ACT_JOB_STATUSES = exports.ACTOR_EVENT_NAMES = exports.ACT_SOURCE_TYPES = exports.ACT_JOB_TYPES = exports.FREE_SUBSCRIPTION_PLAN_CODE = void 0;\nexports.GIT_MAIN_BRANCH = exports.MARKETPLACE_USER_ROLES = exports.FINISHED_PROJECT_STATUSES = void 0;\nconst regexs_1 = __webpack_require__(/*! ./regexs */ \"./node_modules/@apify/consts/regexs.js\");\nexports.FREE_SUBSCRIPTION_PLAN_CODE = 'DEV';\nexports.ACT_JOB_TYPES = {\n    BUILD: 'BUILD',\n    RUN: 'RUN',\n};\nexports.ACT_SOURCE_TYPES = {\n    SOURCE_CODE: 'SOURCE_CODE',\n    SOURCE_FILES: 'SOURCE_FILES',\n    GIT_REPO: 'GIT_REPO',\n    TARBALL: 'TARBALL',\n    GITHUB_GIST: 'GITHUB_GIST',\n};\nexports.ACTOR_EVENT_NAMES = {\n    CPU_INFO: 'cpuInfo',\n    SYSTEM_INFO: 'systemInfo',\n    MIGRATING: 'migrating',\n    PERSIST_STATE: 'persistState',\n    ABORTING: 'aborting',\n};\n/**\n * Dictionary of possible values for 'status' field of act2Builds or act2Runs collections.\n */\nexports.ACT_JOB_STATUSES = {\n    READY: 'READY',\n    RUNNING: 'RUNNING',\n    SUCCEEDED: 'SUCCEEDED',\n    FAILED: 'FAILED',\n    TIMING_OUT: 'TIMING-OUT',\n    TIMED_OUT: 'TIMED-OUT',\n    ABORTING: 'ABORTING',\n    ABORTED: 'ABORTED', // aborted by user\n};\n/**\n * An array of act jobs statuses that are final for the jobs.\n */\nexports.ACT_JOB_TERMINAL_STATUSES = [\n    exports.ACT_JOB_STATUSES.SUCCEEDED,\n    exports.ACT_JOB_STATUSES.FAILED,\n    exports.ACT_JOB_STATUSES.TIMED_OUT,\n    exports.ACT_JOB_STATUSES.ABORTED,\n];\n// NOTE: for legacy reasons these are lower-case, maybe we should migrate to upper case later.\n// these strings are also referenced from upstart-worker.conf !\nexports.WORKER_SERVICE_TYPES = {\n    CRAWLING: 'crawling',\n    ACTOR: 'actor',\n};\nexports.META_ORIGINS = {\n    DEVELOPMENT: 'DEVELOPMENT',\n    WEB: 'WEB',\n    API: 'API',\n    SCHEDULER: 'SCHEDULER',\n    TEST: 'TEST', // Job started through test actor page\n};\n/**\n * Base Docker images for acts, in order in which they are displayed in UI.\n * See https://www.apify.com/docs/actor#base-images\n */\nexports.ACTOR_BASE_DOCKER_IMAGES = [\n    // Latest:\n    {\n        name: 'apify/actor-node',\n        displayName: 'Node.js 14 on Alpine Linux',\n        prePull: true,\n    },\n    {\n        name: 'apify/actor-node-puppeteer-chrome',\n        displayName: 'Node.js 14 + Puppeteer + Chrome on Debian',\n        copyChown: 'myuser:myuser',\n        prePull: true,\n    },\n    {\n        name: 'apify/actor-node-playwright-chrome',\n        displayName: 'Node.js 14 + Playwright + Chrome on Debian',\n        copyChown: 'myuser:myuser',\n        prePull: true,\n    },\n    {\n        name: 'apify/actor-node-playwright-firefox',\n        displayName: 'Node.js 14 + Playwright + Firefox on Debian',\n        copyChown: 'myuser:myuser',\n        prePull: true,\n    },\n    {\n        name: 'apify/actor-node-playwright-webkit',\n        displayName: 'Node.js 14 + Playwright + WebKit on Debian',\n        copyChown: 'myuser:myuser',\n        prePull: true,\n    },\n    {\n        name: 'apify/actor-node-playwright',\n        displayName: 'Node.js 14 + Playwright + All Browsers on Ubuntu',\n        copyChown: 'myuser:myuser',\n        prePull: true,\n    },\n    // Beta:\n    {\n        name: 'apify/actor-node',\n        displayName: 'BETA: Node.js 14 on Alpine Linux:beta',\n    },\n    {\n        name: 'apify/actor-node-puppeteer-chrome:beta',\n        displayName: 'BETA: Node.js 14 + Puppeteer + Chrome on Debian',\n        copyChown: 'myuser:myuser',\n    },\n    {\n        name: 'apify/actor-node-playwright-chrome:beta',\n        displayName: 'BETA: Node.js 14 + Playwright + Chrome on Debian',\n        copyChown: 'myuser:myuser',\n    },\n    {\n        name: 'apify/actor-node-playwright-firefox:beta',\n        displayName: 'BETA: Node.js 14 + Playwright + Firefox on Debian',\n        copyChown: 'myuser:myuser',\n    },\n    {\n        name: 'apify/actor-node-playwright-webkit:beta',\n        displayName: 'BETA: Node.js 14 + Playwright + WebKit on Debian',\n        copyChown: 'myuser:myuser',\n    },\n    {\n        name: 'apify/actor-node-playwright:beta',\n        displayName: 'Node.js 14 + Playwright + All Browsers on Ubuntu',\n        copyChown: 'myuser:myuser',\n    },\n    // Deprecated:\n    // These are here because we made breaking changes in the client that could break existing single file actors.\n    // We will get a rid of this along with the whole single file logic.\n    {\n        name: 'apify/actor-node-basic',\n        displayName: '[DEPRECATED]: Node.js 12 on Alpine Linux',\n    },\n    {\n        name: 'apify/actor-node-chrome',\n        displayName: '[DEPRECATED]: Node.js 12 + Chrome on Debian',\n        copyChown: 'myuser:myuser',\n    },\n    {\n        name: 'apify/actor-node-chrome-xvfb',\n        displayName: '[DEPRECATED]: Node.js 12 + Chrome + Xvfb on Debian',\n        copyChown: 'myuser:myuser',\n    },\n    {\n        name: 'apify/actor-node-basic:beta',\n        displayName: '[DEPRECATED] BETA: Node.js 12 on Alpine Linux',\n    },\n    {\n        name: 'apify/actor-node-chrome:beta',\n        displayName: '[DEPRECATED] BETA: Node.js 12 + Chrome on Debian',\n        copyChown: 'myuser:myuser',\n    },\n    {\n        name: 'apify/actor-node-chrome-xvfb:beta',\n        displayName: '[DEPRECATED] BETA: Node.js 12 + Chrome + Xvfb on Debian',\n        copyChown: 'myuser:myuser',\n    },\n    {\n        name: 'apify/actor-node-basic:v0.21.10',\n        displayName: '[DEPRECATED]: Node.js 12 on Alpine Linux (Apify SDK v0.21.10)',\n    },\n    {\n        name: 'apify/actor-node-chrome:v0.21.10',\n        displayName: '[DEPRECATED]: Node.js 12 + Chrome on Debian (Apify SDK v0.21.10)',\n        copyChown: 'myuser:myuser',\n    },\n    {\n        name: 'apify/actor-node-chrome-xvfb:v0.21.10',\n        displayName: '[DEPRECATED]: Node.js 12 + Chrome + Xvfb on Debian (Apify SDK v0.21.10)',\n        copyChown: 'myuser:myuser',\n    },\n];\n/**\n * Default image from ACTOR_BASE_DOCKER_IMAGES.\n */\nexports.ACTOR_BASE_DOCKER_IMAGE_DEFAULT = exports.ACTOR_BASE_DOCKER_IMAGES[0].name;\n/**\n * Keys of labels applied to act Docker images and containers.\n */\nexports.DOCKER_LABELS = {\n    ACTOR_BUILD_ID: 'com.apify.actBuildId',\n    ACTOR_RUN_ID: 'com.apify.actRunId',\n    // Kept for backwards compatibility, will be removed soon\n    ACT_BUILD_ID: 'com.apify.actBuildId',\n    ACT_RUN_ID: 'com.apify.actRunId',\n};\n/**\n * Acts types\n */\nexports.ACT_TYPES = {\n    ACT: 'acts',\n    CRAWLER: 'crawlers',\n};\n/**\n * Username used when user is anonymous.\n */\nexports.ANONYMOUS_USERNAME = 'anonymous';\n/**\n * Username constraints.\n */\nexports.USERNAME = {\n    MIN_LENGTH: 3,\n    MAX_LENGTH: 30,\n    // Regex matching a potentially allowed username. The numbers must match MIN and MAX!\n    // Note that username must also pass isForbiddenUser() test to be allowed!\n    REGEX: /^[a-zA-Z0-9_.-]{3,30}$/,\n};\n/**\n * Max length for DNS safe string\n */\nexports.DNS_SAFE_NAME_MAX_LENGTH = 63;\n/**\n * Actor name constraints.\n */\nexports.ACTOR_NAME = {\n    MIN_LENGTH: 3,\n    MAX_LENGTH: exports.DNS_SAFE_NAME_MAX_LENGTH,\n    REGEX: regexs_1.DNS_SAFE_NAME_REGEX,\n};\n/**\n * Length of short crawler ID for nice public crawlers path.\n */\nexports.SHORT_CRAWLER_ID_LENGTH = 5;\n/**\n * Default build tag used for latest act version.\n */\nexports.BUILD_TAG_LATEST = 'latest';\n/**\n * Behaviour of act restart on error.\n * Act gets restarted when there are less than MAX_RESTARTS in the last INTERVAL_MILLIS.\n */\nexports.ACTOR_RESTART_ON_ERROR = {\n    MAX_RESTARTS: 3,\n    // This needs to be low enough so that it only covers restart loops, rather than e.g.\n    // errors during crawling of large lists of URLs\n    INTERVAL_MILLIS: 1 * 60 * 1000,\n};\n/**\n * Kept for backwards compatibility, will be removed soon.\n * TODO: Remove this once it's no longer used anywhere.\n */\nexports.ACT_RESTART_ON_ERROR = exports.ACTOR_RESTART_ON_ERROR;\n/**\n * 1 compute unit = 1GB * 1Hour.\n */\nexports.COMPUTE_UNIT_MB = 1024;\nexports.COMPUTE_UNIT_MILLIS = 60 * 60 * 1000;\n/**\n * Contains various Actor platform limits that are shared between the projects.\n * IMPORTANT: If you update any of them, update also https://github.com/apifytech/apify-docs/edit/master/docs/actor/limits.md !!!\n */\nexports.ACTOR_LIMITS = {\n    // Total amount of memory for the build container. Must be less than or equal to the maximum of the free plan!\n    BUILD_DEFAULT_MEMORY_MBYTES: 1024,\n    // Maximum duration of build in seconds.\n    BUILD_TIMEOUT_SECS: 600,\n    // For each build or run container, set disk quota based on memory size\n    RUN_DISK_TO_MEMORY_SIZE_COEFF: 2,\n    // For each build or run container, set CPU cores based on memory size\n    RUN_MEMORY_MBYTES_PER_CPU_CORE: 4096,\n    // The default limit of memory for all running Actor jobs for free accounts.\n    FREE_ACCOUNT_MAX_MEMORY_MBYTES: 8192,\n    // The default limit of memory for all running Actor jobs for paid accounts.\n    PAID_ACCOUNT_MAX_MEMORY_MBYTES: 65536,\n    // Minimum and maximum memory for a single act run.\n    MIN_RUN_MEMORY_MBYTES: 128,\n    MAX_RUN_MEMORY_MBYTES: 32768,\n    // Maximum size of actor input schema.\n    INPUT_SCHEMA_MAX_BYTES: 100 * 1024,\n    // Max length of run/build log in number of characters\n    LOG_MAX_CHARS: 5000000,\n};\n/**\n * Contains various limits of the Apify platform.\n */\nexports.DEFAULT_PLATFORM_LIMITS = {\n    // Maximum number of actors per user\n    MAX_ACTORS_PER_USER: 100,\n    // Maximum number of tasks per user\n    MAX_TASKS_PER_USER: 1000,\n    // Maximum number of schedules per user\n    MAX_SCHEDULES_PER_USER: 100,\n    // Maximum number of webhooks per user\n    MAX_WEBHOOKS_PER_USER: 100,\n    // Maximum number of actors per scheduler\n    MAX_ACTORS_PER_SCHEDULER: 10,\n    // Maximum number of tasks per scheduler\n    MAX_TASKS_PER_SCHEDULER: 10,\n};\n/**\n * Use as username for returning user own info from API v2/users/username\n */\nexports.ME_USER_NAME_PLACEHOLDER = 'me';\n/**\n * Max length of the queue head that server will return in Request Queue API.\n */\nexports.REQUEST_QUEUE_HEAD_MAX_LIMIT = 1000;\n/**\n * Throttling period for mongo increment updates\n */\nexports.MONGO_INC_THROTTLED_INTERVAL_MILLIS = 5000;\n/**\n * Dictionary of APIFY_XXX environment variable names.\n */\nexports.ENV_VARS = {\n    IS_AT_HOME: 'APIFY_IS_AT_HOME',\n    ACTOR_ID: 'APIFY_ACTOR_ID',\n    ACTOR_RUN_ID: 'APIFY_ACTOR_RUN_ID',\n    ACTOR_TASK_ID: 'APIFY_ACTOR_TASK_ID',\n    INPUT_KEY: 'APIFY_INPUT_KEY',\n    USER_ID: 'APIFY_USER_ID',\n    TOKEN: 'APIFY_TOKEN',\n    PROXY_PASSWORD: 'APIFY_PROXY_PASSWORD',\n    PROXY_HOSTNAME: 'APIFY_PROXY_HOSTNAME',\n    PROXY_PORT: 'APIFY_PROXY_PORT',\n    PROXY_STATUS_URL: 'APIFY_PROXY_STATUS_URL',\n    STARTED_AT: 'APIFY_STARTED_AT',\n    TIMEOUT_AT: 'APIFY_TIMEOUT_AT',\n    DEFAULT_KEY_VALUE_STORE_ID: 'APIFY_DEFAULT_KEY_VALUE_STORE_ID',\n    DEFAULT_DATASET_ID: 'APIFY_DEFAULT_DATASET_ID',\n    DEFAULT_REQUEST_QUEUE_ID: 'APIFY_DEFAULT_REQUEST_QUEUE_ID',\n    LOCAL_STORAGE_DIR: 'APIFY_LOCAL_STORAGE_DIR',\n    API_BASE_URL: 'APIFY_API_BASE_URL',\n    API_PUBLIC_BASE_URL: 'APIFY_API_PUBLIC_BASE_URL',\n    HEADLESS: 'APIFY_HEADLESS',\n    XVFB: 'APIFY_XVFB',\n    MEMORY_MBYTES: 'APIFY_MEMORY_MBYTES',\n    LOG_LEVEL: 'APIFY_LOG_LEVEL',\n    ACTOR_EVENTS_WS_URL: 'APIFY_ACTOR_EVENTS_WS_URL',\n    CHROME_EXECUTABLE_PATH: 'APIFY_CHROME_EXECUTABLE_PATH',\n    CONTAINER_PORT: 'APIFY_CONTAINER_PORT',\n    CONTAINER_URL: 'APIFY_CONTAINER_URL',\n    META_ORIGIN: 'APIFY_META_ORIGIN',\n    FACT: 'APIFY_FACT',\n    DEDICATED_CPUS: 'APIFY_DEDICATED_CPUS',\n    SDK_LATEST_VERSION: 'APIFY_SDK_LATEST_VERSION',\n    // Deprecated, keep them for backward compatibility:\n    ACT_ID: 'APIFY_ACT_ID',\n    ACT_RUN_ID: 'APIFY_ACT_RUN_ID',\n};\nexports.INTEGER_ENV_VARS = [\n    exports.ENV_VARS.PROXY_PORT,\n    exports.ENV_VARS.MEMORY_MBYTES,\n    exports.ENV_VARS.CONTAINER_PORT,\n];\n/**\n * Default value for APIFY_CONTAINER_PORT used both locally and at Apify platform.\n */\nexports.DEFAULT_CONTAINER_PORT = 4321;\n/**\n * Local emulation sub directories for local stores\n */\nexports.LOCAL_STORAGE_SUBDIRS = {\n    datasets: 'datasets',\n    keyValueStores: 'key_value_stores',\n    requestQueues: 'request_queues',\n};\n/**\n * Local defaults for of some of the environment variables.\n * These are being preset in Apify SDK when it's running out of the Apify platform.\n */\nexports.LOCAL_ENV_VARS = {\n    [exports.ENV_VARS.DEFAULT_KEY_VALUE_STORE_ID]: 'default',\n    [exports.ENV_VARS.DEFAULT_DATASET_ID]: 'default',\n    [exports.ENV_VARS.DEFAULT_REQUEST_QUEUE_ID]: 'default',\n    [exports.ENV_VARS.PROXY_HOSTNAME]: 'proxy.apify.com',\n    [exports.ENV_VARS.PROXY_PORT]: (8000).toString(),\n    [exports.ENV_VARS.CONTAINER_PORT]: (exports.DEFAULT_CONTAINER_PORT).toString(),\n    [exports.ENV_VARS.CONTAINER_URL]: `http://localhost:${exports.DEFAULT_CONTAINER_PORT}`, // Must match port line above!\n};\n/**\n * Defaults input and output key-value stores keys\n */\nexports.KEY_VALUE_STORE_KEYS = {\n    INPUT: 'INPUT',\n    OUTPUT: 'OUTPUT',\n};\n/**\n * Max length of Actor log in number of characters.\n * TODO: Remove this once it's no longer used anywhere.\n */\nexports.ACTOR_LOG_MAX_CHARS = exports.ACTOR_LIMITS.LOG_MAX_CHARS;\n/**\n * Types of customer request.\n */\nexports.CUSTOMER_REQUEST_TYPES = {\n    EXTRACT_DATA: 'EXTRACT_DATA',\n    AUTOMATION: 'AUTOMATION',\n    OTHER: 'OTHER',\n};\n/**\n * Represents the maximum size in bytes of a request body (decompressed)\n * that will be accepted by the App and API servers.\n */\nexports.MAX_PAYLOAD_SIZE_BYTES = 9437184; // 9MB\n/**\n * Categories for crawlers and actors\n */\nexports.ACTOR_CATEGORIES = {\n    AUTOMATION: 'Automation',\n    BUSINESS: 'Business',\n    COVID_19: 'Covid-19',\n    DEVELOPER_EXAMPLES: 'Developer examples',\n    DEVELOPER_TOOLS: 'Developer tools',\n    ECOMMERCE: 'E-commerce',\n    GAMES: 'Games',\n    JOBS: 'Jobs',\n    MARKETING: 'Marketing',\n    NEWS: 'News',\n    SEO_TOOLS: 'SEO tools',\n    SOCIAL_MEDIA: 'Social media',\n    TRAVEL: 'Travel',\n    VIDEOS: 'Videos',\n    OTHER: 'Other',\n};\n/**\n * TODO: This will be used during the category migration and can be removed after that.\n */\nexports.LEGACY_ACTOR_CATEGORIES = {\n    TRAVEL: 'Travel',\n    ECOMMERCE: 'E-commerce',\n    ENTERTAINMENT: 'Entertainment',\n    SOCIAL: 'Social',\n    MARKETING: 'Marketing',\n    NEWS: 'News',\n    FINANCE: 'Finance',\n    LIFESTYLE: 'Lifestyle',\n    SEARCH_ENGINES: 'Search engines',\n    DATA: 'Data processing',\n    EGOVERNMENT: 'E-government',\n    TOOLS: 'Tools',\n    EXAMPLES: 'Examples',\n    OTHER: 'Other',\n};\nexports.ALL_ACTOR_CATEGORIES = Object.assign(Object.assign({}, exports.ACTOR_CATEGORIES), exports.LEGACY_ACTOR_CATEGORIES);\n/**\n * Bases for converting version/build number to/from string/integer\n */\nexports.VERSION_INT_MAJOR_BASE = 1e7;\nexports.VERSION_INT_MINOR_BASE = 1e5;\n/**\n * Basic options for XSS sanitization\n */\nexports.USER_BASIC_TEXT_XSS_OPTIONS = {\n    whiteList: {\n        a: ['href', 'title', 'target'],\n        code: [],\n        strong: [],\n        b: [],\n        br: [],\n        ul: [],\n        li: [],\n        ol: [],\n        i: [],\n        u: [],\n        p: [],\n    },\n};\nexports.WEBHOOK_EVENT_TYPES = {\n    ACTOR_RUN_CREATED: 'ACTOR.RUN.CREATED',\n    ACTOR_RUN_SUCCEEDED: 'ACTOR.RUN.SUCCEEDED',\n    ACTOR_RUN_FAILED: 'ACTOR.RUN.FAILED',\n    ACTOR_RUN_TIMED_OUT: 'ACTOR.RUN.TIMED_OUT',\n    ACTOR_RUN_ABORTED: 'ACTOR.RUN.ABORTED',\n    ACTOR_RUN_RESURRECTED: 'ACTOR.RUN.RESURRECTED',\n    TEST: 'TEST',\n};\nexports.WEBHOOK_EVENT_TYPE_GROUPS = {\n    ACTOR_RUN: [\n        exports.WEBHOOK_EVENT_TYPES.ACTOR_RUN_CREATED,\n        exports.WEBHOOK_EVENT_TYPES.ACTOR_RUN_SUCCEEDED,\n        exports.WEBHOOK_EVENT_TYPES.ACTOR_RUN_FAILED,\n        exports.WEBHOOK_EVENT_TYPES.ACTOR_RUN_TIMED_OUT,\n        exports.WEBHOOK_EVENT_TYPES.ACTOR_RUN_ABORTED,\n        exports.WEBHOOK_EVENT_TYPES.ACTOR_RUN_RESURRECTED,\n    ],\n    // If one of these occurs then we can be sure that none other can occur for the same triggerer.\n    ACTOR_RUN_TERMINAL: [\n        exports.WEBHOOK_EVENT_TYPES.ACTOR_RUN_SUCCEEDED,\n        exports.WEBHOOK_EVENT_TYPES.ACTOR_RUN_FAILED,\n        exports.WEBHOOK_EVENT_TYPES.ACTOR_RUN_TIMED_OUT,\n        exports.WEBHOOK_EVENT_TYPES.ACTOR_RUN_ABORTED,\n    ],\n};\nexports.WEBHOOK_DEFAULT_PAYLOAD_TEMPLATE = `{\n    \"userId\": {{userId}},\n    \"createdAt\": {{createdAt}},\n    \"eventType\": {{eventType}},\n    \"eventData\": {{eventData}},\n    \"resource\": {{resource}}\n}`;\nexports.WEBHOOK_ALLOWED_PAYLOAD_VARIABLES = new Set([\n    'userId',\n    'createdAt',\n    'eventType',\n    'eventData',\n    'resource',\n]);\n// This client key is used in request queue to indentify requests from Apify app UI.\nexports.APIFY_UI_CLIENT_KEY = 'apify-app-ui';\n// Max allowed size of files in multi-file editor\nexports.MAX_MULTIFILE_BYTES = 3 * (1024 ** 2); // 3MB\n// Formats for multi-file editor files\nexports.SOURCE_FILE_FORMATS = {\n    TEXT: 'TEXT',\n    BASE64: 'BASE64',\n};\n// Marketplace project statuses\nexports.PROJECT_STATUSES = {\n    REQUEST: 'REQUEST',\n    SPECIFICATION: 'SPECIFICATION',\n    OFFERS: 'OFFERS',\n    DEPOSIT: 'DEPOSIT',\n    DEPOSIT_PAID: 'DEPOSIT_PAID',\n    NEW: 'NEW',\n    IN_PROGRESS: 'IN_PROGRESS',\n    QA: 'QA',\n    CUSTOMER_QA: 'CUSTOMER_QA',\n    READY_FOR_INVOICE: 'READY_FOR_INVOICE',\n    INVOICED: 'INVOICED',\n    PAID: 'PAID',\n    DELIVERED: 'DELIVERED',\n    CLOSED: 'CLOSED',\n    FINISHED: 'FINISHED',\n};\n// Marketplace projects with status from this array is considered as successfully finished\nexports.FINISHED_PROJECT_STATUSES = [\n    exports.PROJECT_STATUSES.READY_FOR_INVOICE,\n    exports.PROJECT_STATUSES.INVOICED,\n    exports.PROJECT_STATUSES.PAID,\n    exports.PROJECT_STATUSES.DELIVERED,\n    exports.PROJECT_STATUSES.FINISHED,\n];\nexports.MARKETPLACE_USER_ROLES = {\n    DEVELOPER: 'DEVELOPER',\n    DATA_EXPERT: 'DATA_EXPERT',\n    CUSTOMER: 'CUSTOMER',\n};\nexports.GIT_MAIN_BRANCH = 'main';\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/@apify/consts/consts.js?");

/***/ }),

/***/ "./node_modules/@apify/consts/index.js":
/*!*********************************************!*\
  !*** ./node_modules/@apify/consts/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(__webpack_require__(/*! ./consts */ \"./node_modules/@apify/consts/consts.js\"), exports);\n__exportStar(__webpack_require__(/*! ./regexs */ \"./node_modules/@apify/consts/regexs.js\"), exports);\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/@apify/consts/index.js?");

/***/ }),

/***/ "./node_modules/@apify/consts/regexs.js":
/*!**********************************************!*\
  !*** ./node_modules/@apify/consts/regexs.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONTACT_LINK_REGEX = exports.RELATIVE_URL_REGEX = exports.SPLIT_PATH_REGEX = exports.GITHUB_GIST_URL_REGEX = exports.HTTP_URL_REGEX = exports.URL_REGEX = exports.GITHUB_REGEX = exports.TWITTER_REGEX = exports.KEY_VALUE_STORE_KEY_REGEX = exports.PROXY_URL_REGEX = exports.APIFY_PROXY_VALUE_REGEX = exports.DNS_SAFE_NAME_REGEX = exports.GIT_REPO_REGEX = exports.EMAIL_REGEX = exports.EMAIL_REGEX_STR = void 0;\n/**\n * Email validation regexp adapted from https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address\n * with our restriction that hostname must be a TLD! (will not match example@localhost)\n */\nexports.EMAIL_REGEX_STR = '[a-zA-Z0-9.!#$%&\\'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+'; // eslint-disable-line max-len\n/**\n * Matches a string containing valid email\n * Hostname must be a TLD! (will not match example@localhost)\n */\nexports.EMAIL_REGEX = new RegExp(`^${exports.EMAIL_REGEX_STR}$`);\n/**\n * Comes from https://github.com/jonschlinkert/is-git-url/ but we have:\n * - added support for ...:/dir/subdir syntax\n */\nexports.GIT_REPO_REGEX = /^(?:git|ssh|https?|git@[-\\w.]+):(\\/\\/)?(.*?)(\\/?|#[-\\d\\w._:/]+?)$/;\n/**\n * Matches a string that might be used in a hostname (e.g. \"my-host-name\")\n */\nexports.DNS_SAFE_NAME_REGEX = /^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])$/;\n/**\n * Regular expression to validate Apify Proxy group name and session ID.\n * This must correspond to REGEX_STR_USERNAME_VALUE in apify-system!\n */\nexports.APIFY_PROXY_VALUE_REGEX = /^[\\w._~]+$/;\n// Regular expression to validate proxy urls, matches\n// http://asd:qweqwe@proxy.apify.com:8000\n// http://asd:qweqwe@proxy.apify.com:8000/\n// http://123123:qweqwe:asdasd@proxy.com:55555\n// http://proxy.apify.com:5000\n// http://root@proxy.apify.com:5000\nexports.PROXY_URL_REGEX = /^http:\\/\\/(([^:]+:)?[^@]*@)?[^.:@]+\\.[^:]+:[\\d]+?$/;\n/**\n * AWS S3 docs say:\n * \"The following character sets are generally safe for use in key names:\n * - Alphanumeric characters [0-9a-zA-Z]\n * - Special characters !, -, _, ., *, ', (, and )\"\n * However, some of those characters are not valid across Win/Unix OS.\n * Therefore we allow only a subset and limit the length to 256 characters (TODO: document this)\n */\nexports.KEY_VALUE_STORE_KEY_REGEX = /^([a-zA-Z0-9!\\-_.'()]{1,256})$/;\n// taken from https://github.com/shinnn/github-username-regex\nconst GITHUB_REGEX_STR = '[a-z\\\\d](?:[a-z\\\\d]|-(?=[a-z\\\\d])){0,38}';\nexports.TWITTER_REGEX = /^@[a-z0-9_]{1,15}$/i;\nexports.GITHUB_REGEX = new RegExp(`^${GITHUB_REGEX_STR}$`, 'i');\n// @TODO: Discontinue usage of this regexps, in favor of HTTP_URL_REGEX\nexports.URL_REGEX = /^https?:\\/\\//i;\n// Inspired by https://gist.github.com/dperini/729294, but doesn't match FTP URLs\n/* eslint-disable */\nexports.HTTP_URL_REGEX = new RegExp('^' +\n    // protocol identifier (optional)\n    // short syntax // still required\n    // NOTE: We removed \"|ftp\"\n    '(?:(?:(?:https?):)?\\\\/\\\\/)' +\n    // user:pass BasicAuth (optional)\n    '(?:\\\\S+(?::\\\\S*)?@)?' +\n    '(?:' +\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broadcast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n    '|' +\n    // host & domain names, may end with dot\n    // can be replaced by a shortest alternative\n    // (?![-_])(?:[-\\\\w\\\\u00a1-\\\\uffff]{0,63}[^-_]\\\\.)+\n    '(?:' +\n    '(?:' +\n    '[a-z0-9\\\\u00a1-\\\\uffff]' +\n    '[a-z0-9\\\\u00a1-\\\\uffff_-]{0,62}' +\n    ')?' +\n    '[a-z0-9\\\\u00a1-\\\\uffff]\\\\.' +\n    ')+' +\n    // TLD identifier name, may end with dot\n    // NOTE: \"|xn--[a-z0-9]+\" is our addition to support IDNs like \"http://xn--80aaxitdbjk.xn--p1ai\",\n    // they can be used in a browser, so we consider them valid\n    '(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?|xn--[a-z0-9]+)' +\n    ')' +\n    // port number (optional)\n    '(?::\\\\d{2,5})?' +\n    // resource path (optional)\n    '(?:[/?#]\\\\S*)?' +\n    '$', 'i');\n/* eslint-enable */\n// E.g. https://gist.github.com/jancurn/2dbe83fea77c439b1119fb3f118513e7\nexports.GITHUB_GIST_URL_REGEX = new RegExp(`^https:\\\\/\\\\/gist\\\\.github\\\\.com\\\\/${GITHUB_REGEX_STR}\\\\/[0-9a-f]{32}$`, 'i');\n// Split's path /aaa/bbb/ccc into an array ['aaa', 'bbb', 'ccc].\nexports.SPLIT_PATH_REGEX = /[^/]+/g;\n// Check if a URL is relative, i.e. does not start with a protocol\nexports.RELATIVE_URL_REGEX = new RegExp('^(?!www.|(?:http|ftp)s?://|[A-Za-z]:\\\\|//).*', 'i');\n// Check if a link is a mailto/tel/sms type\nexports.CONTACT_LINK_REGEX = new RegExp('^(mailto|tel|sms):.*$', 'i');\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/@apify/consts/regexs.js?");

/***/ }),

/***/ "./node_modules/@apify/log/index.js":
/*!******************************************!*\
  !*** ./node_modules/@apify/log/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst log_1 = __webpack_require__(/*! ./log */ \"./node_modules/@apify/log/log.js\");\n__exportStar(__webpack_require__(/*! ./log */ \"./node_modules/@apify/log/log.js\"), exports);\n__exportStar(__webpack_require__(/*! ./log_consts */ \"./node_modules/@apify/log/log_consts.js\"), exports);\n__exportStar(__webpack_require__(/*! ./log_helpers */ \"./node_modules/@apify/log/log_helpers.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logger */ \"./node_modules/@apify/log/logger.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logger_json */ \"./node_modules/@apify/log/logger_json.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logger_text */ \"./node_modules/@apify/log/logger_text.js\"), exports);\n// Default export is an initialized instance of logger.\nconst log = new log_1.Log();\nexports.default = log;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/@apify/log/index.js?");

/***/ }),

/***/ "./node_modules/@apify/log/log.js":
/*!****************************************!*\
  !*** ./node_modules/@apify/log/log.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Log = void 0;\nconst logger_text_1 = __webpack_require__(/*! ./logger_text */ \"./node_modules/@apify/log/logger_text.js\");\nconst log_consts_1 = __webpack_require__(/*! ./log_consts */ \"./node_modules/@apify/log/log_consts.js\");\nconst log_helpers_1 = __webpack_require__(/*! ./log_helpers */ \"./node_modules/@apify/log/log_helpers.js\");\nconst getDefaultOptions = () => ({\n    level: log_helpers_1.getLevelFromEnv(),\n    maxDepth: 4,\n    maxStringLength: 2000,\n    prefix: null,\n    suffix: null,\n    logger: new logger_text_1.LoggerText(),\n    data: {},\n});\n/**\n * The log instance enables level aware logging of messages and we advise\n * to use it instead of `console.log()` and its aliases in most development\n * scenarios.\n *\n * A very useful use case for `log` is using `log.debug` liberally throughout\n * the codebase to get useful logging messages only when appropriate log level is set\n * and keeping the console tidy in production environments.\n *\n * The available logging levels are, in this order: `DEBUG`, `INFO`, `WARNING`, `ERROR`, `OFF`\n * and can be referenced from the `log.LEVELS` constant, such as `log.LEVELS.ERROR`.\n *\n * To log messages to the system console, use the `log.level(message)` invocation,\n * such as `log.debug('this is a debug message')`.\n *\n * To prevent writing of messages above a certain log level to the console, simply\n * set the appropriate level. The default log level is `INFO`, which means that\n * `DEBUG` messages will not be printed, unless enabled.\n *\n * **Example:**\n * ```js\n * const Apify = require('apify');\n * const { log } = Apify.utils;\n *\n * log.info('Information message', { someData: 123 }); // prints message\n * log.debug('Debug message', { debugData: 'hello' }); // doesn't print anything\n *\n * log.setLevel(log.LEVELS.DEBUG);\n * log.debug('Debug message'); // prints message\n *\n * log.setLevel(log.LEVELS.ERROR);\n * log.debug('Debug message'); // doesn't print anything\n * log.info('Info message'); // doesn't print anything\n *\n * log.error('Error message', { errorDetails: 'This is bad!' }); // prints message\n * try {\n *   throw new Error('Not good!');\n * } catch (e) {\n *   log.exception(e, 'Exception occurred', { errorDetails: 'This is really bad!' }); // prints message\n * }\n *\n * log.setOptions({ prefix: 'My actor' });\n * log.info('I am running!'); // prints \"My actor: I am running\"\n *\n * const childLog = log.child({ prefix: 'Crawler' });\n * log.info('I am crawling!'); // prints \"My actor:Crawler: I am crawling\"\n * ```\n *\n * Another very useful way of setting the log level is by setting the `APIFY_LOG_LEVEL`\n * environment variable, such as `APIFY_LOG_LEVEL=DEBUG`. This way, no code changes\n * are necessary to turn on your debug messages and start debugging right away.\n *\n * To add timestamps to your logs, you can override the default logger settings:\n * ```js\n * log.setOptions({\n *     logger: new log.LoggerText({ skipTime: false }),\n * });\n * ```\n * You can customize your logging further by extending or replacing the default\n * logger instances with your own implementations.\n */\nclass Log {\n    constructor(options = {}) {\n        /**\n         * Map of available log levels that's useful for easy setting of appropriate log levels.\n         * Each log level is represented internally by a number. Eg. `log.LEVELS.DEBUG === 5`.\n         */\n        this.LEVELS = log_consts_1.LogLevel; // for BC\n        this.deprecationsReported = {};\n        this.options = Object.assign(Object.assign({}, getDefaultOptions()), options);\n        if (!log_consts_1.LogLevel[this.options.level])\n            throw new Error('Options \"level\" must be one of log.LEVELS enum!');\n        if (typeof this.options.maxDepth !== 'number')\n            throw new Error('Options \"maxDepth\" must be a number!');\n        if (typeof this.options.maxStringLength !== 'number')\n            throw new Error('Options \"maxStringLength\" must be a number!');\n        if (this.options.prefix && typeof this.options.prefix !== 'string')\n            throw new Error('Options \"prefix\" must be a string!');\n        if (this.options.suffix && typeof this.options.suffix !== 'string')\n            throw new Error('Options \"suffix\" must be a string!');\n        if (typeof this.options.logger !== 'object')\n            throw new Error('Options \"logger\" must be an object!');\n        if (typeof this.options.data !== 'object')\n            throw new Error('Options \"data\" must be an object!');\n    }\n    _limitDepth(obj) {\n        return log_helpers_1.limitDepth(obj, this.options.maxDepth);\n    }\n    /**\n     * Returns the currently selected logging level. This is useful for checking whether a message\n     * will actually be printed to the console before one actually performs a resource intensive operation\n     * to construct the message, such as querying a DB for some metadata that need to be added. If the log\n     * level is not high enough at the moment, it doesn't make sense to execute the query.\n     */\n    getLevel() {\n        return this.options.level;\n    }\n    /**\n     * Sets the log level to the given value, preventing messages from less important log levels\n     * from being printed to the console. Use in conjunction with the `log.LEVELS` constants such as\n     *\n     * ```\n     * log.setLevel(log.LEVELS.DEBUG);\n     * ```\n     *\n     * Default log level is INFO.\n     */\n    setLevel(level) {\n        if (!log_consts_1.LogLevel[level])\n            throw new Error('Options \"level\" must be one of log.LEVELS enum!');\n        this.options.level = level;\n    }\n    internal(level, message, data, exception) {\n        if (level > this.options.level)\n            return;\n        data = Object.assign(Object.assign({}, this.options.data), data);\n        data = Object.keys(data).length > 0 ? this._limitDepth(data) : undefined;\n        exception = this._limitDepth(exception);\n        this.options.logger.log(level, message, data, exception, {\n            prefix: this.options.prefix,\n            suffix: this.options.suffix,\n        });\n    }\n    /**\n     * Configures logger.\n     */\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n    /**\n     * Returns the logger configuration.\n     */\n    getOptions() {\n        return Object.assign({}, this.options);\n    }\n    /**\n     * Creates a new instance of logger that inherits settings from a parent logger.\n     */\n    child(options) {\n        let { prefix } = this.options;\n        if (options.prefix) {\n            prefix = prefix\n                ? `${prefix}${log_consts_1.PREFIX_DELIMITER}${options.prefix}`\n                : options.prefix;\n        }\n        const data = options.data\n            ? Object.assign(Object.assign({}, this.options.data), options.data) : this.options.data;\n        const newOptions = Object.assign(Object.assign(Object.assign({}, this.options), options), { prefix,\n            data });\n        return new Log(newOptions);\n    }\n    /**\n     * Logs an `ERROR` message. Use this method to log error messages that are not directly connected\n     * to an exception. For logging exceptions, use the `log.exception` method.\n     */\n    error(message, data) {\n        this.internal(log_consts_1.LogLevel.ERROR, message, data);\n    }\n    /**\n     * Logs an `ERROR` level message with a nicely formatted exception. Note that the exception is the first parameter\n     * here and an additional message is only optional.\n     */\n    exception(exception, message, data) {\n        this.internal(log_consts_1.LogLevel.ERROR, message, data, exception);\n    }\n    softFail(message, data) {\n        this.internal(log_consts_1.LogLevel.SOFT_FAIL, message, data);\n    }\n    /**\n     * Logs a `WARNING` level message. Data are stringified and appended to the message.\n     */\n    warning(message, data) {\n        this.internal(log_consts_1.LogLevel.WARNING, message, data);\n    }\n    /**\n     * Logs an `INFO` message. `INFO` is the default log level so info messages will be always logged,\n     * unless the log level is changed. Data are stringified and appended to the message.\n     */\n    info(message, data) {\n        this.internal(log_consts_1.LogLevel.INFO, message, data);\n    }\n    /**\n     * Logs a `DEBUG` message. By default, it will not be written to the console. To see `DEBUG`\n     * messages in the console, set the log level to `DEBUG` either using the `log.setLevel(log.LEVELS.DEBUG)`\n     * method or using the environment variable `APIFY_LOG_LEVEL=DEBUG`. Data are stringified and appended\n     * to the message.\n     */\n    debug(message, data) {\n        this.internal(log_consts_1.LogLevel.DEBUG, message, data);\n    }\n    perf(message, data) {\n        this.internal(log_consts_1.LogLevel.PERF, message, data);\n    }\n    /**\n     * Logs given message only once as WARNING. It's used to warn user that some feature he is using has been deprecated.\n     */\n    deprecated(message) {\n        if (this.deprecationsReported[message])\n            return;\n        this.deprecationsReported[message] = true;\n        this.warning(message);\n    }\n}\nexports.Log = Log;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/@apify/log/log.js?");

/***/ }),

/***/ "./node_modules/@apify/log/log_consts.js":
/*!***********************************************!*\
  !*** ./node_modules/@apify/log/log_consts.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LEVEL_TO_STRING = exports.LEVELS = exports.PREFIX_DELIMITER = exports.LogLevel = void 0;\nvar LogLevel;\n(function (LogLevel) {\n    // Turns off logging completely\n    LogLevel[LogLevel[\"OFF\"] = 0] = \"OFF\";\n    // For unexpected errors in Apify system\n    LogLevel[LogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    // For situations where error is caused by user (e.g. Meteor.Error), i.e. when the error is not\n    // caused by Apify system, avoid the word \"ERROR\" to simplify searching in log\n    LogLevel[LogLevel[\"SOFT_FAIL\"] = 2] = \"SOFT_FAIL\";\n    LogLevel[LogLevel[\"WARNING\"] = 3] = \"WARNING\";\n    LogLevel[LogLevel[\"INFO\"] = 4] = \"INFO\";\n    LogLevel[LogLevel[\"DEBUG\"] = 5] = \"DEBUG\";\n    // for performance stats\n    LogLevel[LogLevel[\"PERF\"] = 6] = \"PERF\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nexports.PREFIX_DELIMITER = ':';\nexports.LEVELS = LogLevel;\n// Inverse of LOG_LEVELS = maps log level to string.\nexports.LEVEL_TO_STRING = Object.keys(LogLevel).filter((x) => Number.isNaN(+x));\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/@apify/log/log_consts.js?");

/***/ }),

/***/ "./node_modules/@apify/log/log_helpers.js":
/*!************************************************!*\
  !*** ./node_modules/@apify/log/log_helpers.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.limitDepth = exports.getLevelFromEnv = exports.truncate = void 0;\nconst consts_1 = __webpack_require__(/*! @apify/consts */ \"./node_modules/@apify/consts/index.js\");\nconst log_consts_1 = __webpack_require__(/*! ./log_consts */ \"./node_modules/@apify/log/log_consts.js\");\n/**\n * Ensures a string is shorter than a specified number of character, and truncates it if not, appending a specific suffix to it.\n * (copied from utilities package so logger do not have to depend on all of its dependencies)\n */\nfunction truncate(str, maxLength, suffix = '...[truncated]') {\n    maxLength = Math.floor(maxLength);\n    // TODO: we should just ignore rest of the suffix...\n    if (suffix.length > maxLength) {\n        throw new Error('suffix string cannot be longer than maxLength');\n    }\n    if (typeof str === 'string' && str.length > maxLength) {\n        str = str.substr(0, maxLength - suffix.length) + suffix;\n    }\n    return str;\n}\nexports.truncate = truncate;\n/**\n * Gets log level from env variable. Both integers and strings (WARNING) are supported.\n */\nfunction getLevelFromEnv() {\n    const envVar = process.env[consts_1.ENV_VARS.LOG_LEVEL];\n    if (!envVar)\n        return log_consts_1.LogLevel.INFO;\n    if (Number.isFinite(+envVar))\n        return +envVar;\n    if (log_consts_1.LogLevel[envVar])\n        return log_consts_1.LogLevel[envVar];\n    return +envVar;\n}\nexports.getLevelFromEnv = getLevelFromEnv;\n/**\n * Limits given object to given depth and escapes function with [function] string.\n *\n * ie. Replaces object's content by '[object]' and array's content\n * by '[array]' when the value is nested more than given limit.\n */\nfunction limitDepth(record, depth, maxStringLength) {\n    // handle common cases quickly\n    if (typeof record === 'string') {\n        return maxStringLength && record.length > maxStringLength ? truncate(record, maxStringLength) : record;\n    }\n    if (['number', 'boolean'].includes(typeof record) || record == null || record instanceof Date) {\n        return record;\n    }\n    // WORKAROUND: Error's properties are not iterable, convert it to a simple object and preserve custom properties\n    // NOTE: _.isError() doesn't work on Match.Error\n    if (record instanceof Error) {\n        const { name, message, stack } = record, rest = __rest(record, [\"name\", \"message\", \"stack\"]);\n        record = Object.assign({ name, message, stack }, rest);\n    }\n    const nextCall = (rec) => limitDepth(rec, depth - 1, maxStringLength);\n    if (Array.isArray(record)) {\n        return (depth ? record.map(nextCall) : '[array]');\n    }\n    if (typeof record === 'object' && record !== null) {\n        const mapObject = (obj) => {\n            const res = {};\n            Object.keys(obj).forEach((key) => {\n                res[key] = nextCall(obj[key]);\n            });\n            return res;\n        };\n        return depth ? mapObject(record) : '[object]';\n    }\n    // Replaces all function with [function] string\n    if (typeof record === 'function') {\n        return '[function]';\n    }\n    // this shouldn't happen\n    console.log(`WARNING: Object cannot be logged: ${record}`);\n    return undefined;\n}\nexports.limitDepth = limitDepth;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/mock/process.js */ \"./node_modules/node-libs-browser/mock/process.js\")))\n\n//# sourceURL=webpack://ApifyClient/./node_modules/@apify/log/log_helpers.js?");

/***/ }),

/***/ "./node_modules/@apify/log/logger.js":
/*!*******************************************!*\
  !*** ./node_modules/@apify/log/logger.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nconst events_1 = __importDefault(__webpack_require__(/*! events */ \"./node_modules/events/events.js\"));\nconst log_consts_1 = __webpack_require__(/*! ./log_consts */ \"./node_modules/@apify/log/log_consts.js\");\n/**\n * This is an abstract class that should\n * be extended by custom logger classes.\n *\n * this._log() method must be implemented by them.\n */\nclass Logger extends events_1.default {\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n    getOptions() {\n        return this.options;\n    }\n    _outputWithConsole(level, line) {\n        switch (level) {\n            case log_consts_1.LogLevel.ERROR:\n                console.error(line);\n                break;\n            case log_consts_1.LogLevel.WARNING:\n                console.warn(line);\n                break;\n            case log_consts_1.LogLevel.DEBUG:\n                console.debug(line);\n                break;\n            default:\n                console.log(line);\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _log(level, message, data, exception, opts = {}) {\n        throw new Error('log() method must be implemented!');\n    }\n    log(level, message, ...args) {\n        const line = this._log(level, message, ...args);\n        this.emit('line', line);\n    }\n}\nexports.Logger = Logger;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/@apify/log/logger.js?");

/***/ }),

/***/ "./node_modules/@apify/log/logger_json.js":
/*!************************************************!*\
  !*** ./node_modules/@apify/log/logger_json.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggerJson = void 0;\nconst log_consts_1 = __webpack_require__(/*! ./log_consts */ \"./node_modules/@apify/log/log_consts.js\");\nconst logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/@apify/log/logger.js\");\nconst DEFAULT_OPTIONS = {\n    skipLevelInfo: false,\n    skipTime: false,\n};\nclass LoggerJson extends logger_1.Logger {\n    constructor(options = {}) {\n        super(Object.assign(Object.assign({}, DEFAULT_OPTIONS), options));\n    }\n    _log(level, message, data, exception, opts = {}) {\n        const { prefix, suffix } = opts;\n        if (exception)\n            data = Object.assign(Object.assign({}, data), { exception });\n        if (prefix)\n            message = `${prefix}${log_consts_1.PREFIX_DELIMITER} ${message}`;\n        if (suffix)\n            message = `${message} ${suffix}`;\n        // Use short names to save log space.\n        // In development mode show more concise log otherwise it's impossible to see anything in it.\n        // Message must be shown early for people to see!\n        // NOTE: not adding time and host on production, because LogDNA adds it by default and log space is expensive\n        const rec = Object.assign({ time: !this.options.skipTime ? new Date() : undefined, level: this.options.skipLevelInfo && level === log_consts_1.LogLevel.INFO ? undefined : log_consts_1.LogLevel[level], msg: message }, data);\n        const line = JSON.stringify(rec);\n        this._outputWithConsole(level, line);\n        return line;\n    }\n}\nexports.LoggerJson = LoggerJson;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/@apify/log/logger_json.js?");

/***/ }),

/***/ "./node_modules/@apify/log/logger_text.js":
/*!************************************************!*\
  !*** ./node_modules/@apify/log/logger_text.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggerText = void 0;\nconst ansi_colors_1 = __importDefault(__webpack_require__(/*! ansi-colors */ \"./node_modules/ansi-colors/index.js\"));\nconst logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/@apify/log/logger.js\");\nconst log_consts_1 = __webpack_require__(/*! ./log_consts */ \"./node_modules/@apify/log/log_consts.js\");\nconst SHORTEN_LEVELS = {\n    SOFT_FAIL: 'SFAIL',\n    WARNING: 'WARN',\n};\nconst LEVEL_TO_COLOR = {\n    [log_consts_1.LogLevel.ERROR]: 'red',\n    [log_consts_1.LogLevel.SOFT_FAIL]: 'red',\n    [log_consts_1.LogLevel.WARNING]: 'yellow',\n    [log_consts_1.LogLevel.INFO]: 'green',\n    [log_consts_1.LogLevel.DEBUG]: 'blue',\n    [log_consts_1.LogLevel.PERF]: 'magenta',\n};\nconst SHORTENED_LOG_LEVELS = log_consts_1.LEVEL_TO_STRING.map((level) => SHORTEN_LEVELS[level] || level);\nconst MAX_LEVEL_LENGTH_SPACES = Math.max(...SHORTENED_LOG_LEVELS.map((l) => l.length));\nconst getLevelIndent = (level) => {\n    let spaces = '';\n    for (let i = 0; i < MAX_LEVEL_LENGTH_SPACES - level.length; i++)\n        spaces += ' ';\n    return spaces;\n};\nconst DEFAULT_OPTIONS = {\n    skipTime: true,\n};\nclass LoggerText extends logger_1.Logger {\n    constructor(options = {}) {\n        super(Object.assign(Object.assign({}, DEFAULT_OPTIONS), options));\n    }\n    _log(level, message, data, exception, opts = {}) {\n        let { prefix, suffix } = opts;\n        let maybeDate = '';\n        if (!this.options.skipTime) {\n            maybeDate = `${(new Date()).toISOString().replace('Z', '').replace('T', ' ')} `;\n        }\n        const errStack = exception ? this._parseException(exception) : '';\n        const color = LEVEL_TO_COLOR[level];\n        const levelStr = SHORTENED_LOG_LEVELS[level];\n        const levelIndent = getLevelIndent(levelStr);\n        const dataStr = !data ? '' : ` ${JSON.stringify(data)}`;\n        prefix = prefix ? ` ${prefix}${log_consts_1.PREFIX_DELIMITER}` : '';\n        suffix = suffix ? ` ${suffix}` : '';\n        const line = `${ansi_colors_1.default.gray(maybeDate)}${ansi_colors_1.default[color](levelStr)}${levelIndent}${ansi_colors_1.default.yellow(prefix)} ${message || ''}${ansi_colors_1.default.gray(dataStr)}${ansi_colors_1.default.yellow(suffix)}${errStack}`; // eslint-disable-line\n        this._outputWithConsole(level, line);\n        return line;\n    }\n    _parseException(exception) {\n        let errStack = '';\n        // Parse error.type and error.details from ApifyClientError.\n        const errDetails = [];\n        if (exception.type)\n            errDetails.push(`type=${exception.type}`);\n        if (exception.details) {\n            Object.entries(exception.details).map(([key, val]) => errDetails.push(`${key}=${val}`));\n        }\n        // Parse error stack lines.\n        // NOTE: Reason is here to support Meteor.js like errors.\n        const errorString = exception.stack || exception.reason || exception.toString();\n        const errorLines = errorString.split('\\n');\n        // Add details to a first line.\n        if (errDetails.length)\n            errorLines[0] += ansi_colors_1.default.gray(`(details: ${errDetails.join(', ')})`);\n        // Compose it back.\n        errStack = errorLines.map((line) => `  ${line}`).join('\\n');\n        errStack = `\\n${errStack}`;\n        return errStack;\n    }\n}\nexports.LoggerText = LoggerText;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/@apify/log/logger_text.js?");

/***/ }),

/***/ "./node_modules/@sindresorhus/is/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sindresorhus/is/dist/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/// <reference lib=\"es2018\"/>\n/// <reference lib=\"dom\"/>\n/// <reference types=\"node\"/>\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst typedArrayTypeNames = [\n    'Int8Array',\n    'Uint8Array',\n    'Uint8ClampedArray',\n    'Int16Array',\n    'Uint16Array',\n    'Int32Array',\n    'Uint32Array',\n    'Float32Array',\n    'Float64Array',\n    'BigInt64Array',\n    'BigUint64Array'\n];\nfunction isTypedArrayName(name) {\n    return typedArrayTypeNames.includes(name);\n}\nconst objectTypeNames = [\n    'Function',\n    'Generator',\n    'AsyncGenerator',\n    'GeneratorFunction',\n    'AsyncGeneratorFunction',\n    'AsyncFunction',\n    'Observable',\n    'Array',\n    'Buffer',\n    'Object',\n    'RegExp',\n    'Date',\n    'Error',\n    'Map',\n    'Set',\n    'WeakMap',\n    'WeakSet',\n    'ArrayBuffer',\n    'SharedArrayBuffer',\n    'DataView',\n    'Promise',\n    'URL',\n    'HTMLElement',\n    ...typedArrayTypeNames\n];\nfunction isObjectTypeName(name) {\n    return objectTypeNames.includes(name);\n}\nconst primitiveTypeNames = [\n    'null',\n    'undefined',\n    'string',\n    'number',\n    'bigint',\n    'boolean',\n    'symbol'\n];\nfunction isPrimitiveTypeName(name) {\n    return primitiveTypeNames.includes(name);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isOfType(type) {\n    return (value) => typeof value === type;\n}\nconst { toString } = Object.prototype;\nconst getObjectType = (value) => {\n    const objectTypeName = toString.call(value).slice(8, -1);\n    if (/HTML\\w+Element/.test(objectTypeName) && is.domElement(value)) {\n        return 'HTMLElement';\n    }\n    if (isObjectTypeName(objectTypeName)) {\n        return objectTypeName;\n    }\n    return undefined;\n};\nconst isObjectOfType = (type) => (value) => getObjectType(value) === type;\nfunction is(value) {\n    if (value === null) {\n        return 'null';\n    }\n    switch (typeof value) {\n        case 'undefined':\n            return 'undefined';\n        case 'string':\n            return 'string';\n        case 'number':\n            return 'number';\n        case 'boolean':\n            return 'boolean';\n        case 'function':\n            return 'Function';\n        case 'bigint':\n            return 'bigint';\n        case 'symbol':\n            return 'symbol';\n        default:\n    }\n    if (is.observable(value)) {\n        return 'Observable';\n    }\n    if (is.array(value)) {\n        return 'Array';\n    }\n    if (is.buffer(value)) {\n        return 'Buffer';\n    }\n    const tagType = getObjectType(value);\n    if (tagType) {\n        return tagType;\n    }\n    if (value instanceof String || value instanceof Boolean || value instanceof Number) {\n        throw new TypeError('Please don\\'t use object wrappers for primitive types');\n    }\n    return 'Object';\n}\nis.undefined = isOfType('undefined');\nis.string = isOfType('string');\nconst isNumberType = isOfType('number');\nis.number = (value) => isNumberType(value) && !is.nan(value);\nis.bigint = isOfType('bigint');\n// eslint-disable-next-line @typescript-eslint/ban-types\nis.function_ = isOfType('function');\nis.null_ = (value) => value === null;\nis.class_ = (value) => is.function_(value) && value.toString().startsWith('class ');\nis.boolean = (value) => value === true || value === false;\nis.symbol = isOfType('symbol');\nis.numericString = (value) => is.string(value) && !is.emptyStringOrWhitespace(value) && !Number.isNaN(Number(value));\nis.array = (value, assertion) => {\n    if (!Array.isArray(value)) {\n        return false;\n    }\n    if (!is.function_(assertion)) {\n        return true;\n    }\n    return value.every(assertion);\n};\nis.buffer = (value) => { var _a, _b, _c, _d; return (_d = (_c = (_b = (_a = value) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.isBuffer) === null || _c === void 0 ? void 0 : _c.call(_b, value)) !== null && _d !== void 0 ? _d : false; };\nis.nullOrUndefined = (value) => is.null_(value) || is.undefined(value);\nis.object = (value) => !is.null_(value) && (typeof value === 'object' || is.function_(value));\nis.iterable = (value) => { var _a; return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a[Symbol.iterator]); };\nis.asyncIterable = (value) => { var _a; return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a[Symbol.asyncIterator]); };\nis.generator = (value) => is.iterable(value) && is.function_(value.next) && is.function_(value.throw);\nis.asyncGenerator = (value) => is.asyncIterable(value) && is.function_(value.next) && is.function_(value.throw);\nis.nativePromise = (value) => isObjectOfType('Promise')(value);\nconst hasPromiseAPI = (value) => {\n    var _a, _b;\n    return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a.then) &&\n        is.function_((_b = value) === null || _b === void 0 ? void 0 : _b.catch);\n};\nis.promise = (value) => is.nativePromise(value) || hasPromiseAPI(value);\nis.generatorFunction = isObjectOfType('GeneratorFunction');\nis.asyncGeneratorFunction = (value) => getObjectType(value) === 'AsyncGeneratorFunction';\nis.asyncFunction = (value) => getObjectType(value) === 'AsyncFunction';\n// eslint-disable-next-line no-prototype-builtins, @typescript-eslint/ban-types\nis.boundFunction = (value) => is.function_(value) && !value.hasOwnProperty('prototype');\nis.regExp = isObjectOfType('RegExp');\nis.date = isObjectOfType('Date');\nis.error = isObjectOfType('Error');\nis.map = (value) => isObjectOfType('Map')(value);\nis.set = (value) => isObjectOfType('Set')(value);\nis.weakMap = (value) => isObjectOfType('WeakMap')(value);\nis.weakSet = (value) => isObjectOfType('WeakSet')(value);\nis.int8Array = isObjectOfType('Int8Array');\nis.uint8Array = isObjectOfType('Uint8Array');\nis.uint8ClampedArray = isObjectOfType('Uint8ClampedArray');\nis.int16Array = isObjectOfType('Int16Array');\nis.uint16Array = isObjectOfType('Uint16Array');\nis.int32Array = isObjectOfType('Int32Array');\nis.uint32Array = isObjectOfType('Uint32Array');\nis.float32Array = isObjectOfType('Float32Array');\nis.float64Array = isObjectOfType('Float64Array');\nis.bigInt64Array = isObjectOfType('BigInt64Array');\nis.bigUint64Array = isObjectOfType('BigUint64Array');\nis.arrayBuffer = isObjectOfType('ArrayBuffer');\nis.sharedArrayBuffer = isObjectOfType('SharedArrayBuffer');\nis.dataView = isObjectOfType('DataView');\nis.directInstanceOf = (instance, class_) => Object.getPrototypeOf(instance) === class_.prototype;\nis.urlInstance = (value) => isObjectOfType('URL')(value);\nis.urlString = (value) => {\n    if (!is.string(value)) {\n        return false;\n    }\n    try {\n        new URL(value); // eslint-disable-line no-new\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n};\n// TODO: Use the `not` operator with a type guard here when it's available.\n// Example: `is.truthy = (value: unknown): value is (not false | not 0 | not '' | not undefined | not null) => Boolean(value);`\nis.truthy = (value) => Boolean(value);\n// Example: `is.falsy = (value: unknown): value is (not true | 0 | '' | undefined | null) => Boolean(value);`\nis.falsy = (value) => !value;\nis.nan = (value) => Number.isNaN(value);\nis.primitive = (value) => is.null_(value) || isPrimitiveTypeName(typeof value);\nis.integer = (value) => Number.isInteger(value);\nis.safeInteger = (value) => Number.isSafeInteger(value);\nis.plainObject = (value) => {\n    // From: https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\n    if (toString.call(value) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.getPrototypeOf({});\n};\nis.typedArray = (value) => isTypedArrayName(getObjectType(value));\nconst isValidLength = (value) => is.safeInteger(value) && value >= 0;\nis.arrayLike = (value) => !is.nullOrUndefined(value) && !is.function_(value) && isValidLength(value.length);\nis.inRange = (value, range) => {\n    if (is.number(range)) {\n        return value >= Math.min(0, range) && value <= Math.max(range, 0);\n    }\n    if (is.array(range) && range.length === 2) {\n        return value >= Math.min(...range) && value <= Math.max(...range);\n    }\n    throw new TypeError(`Invalid range: ${JSON.stringify(range)}`);\n};\nconst NODE_TYPE_ELEMENT = 1;\nconst DOM_PROPERTIES_TO_CHECK = [\n    'innerHTML',\n    'ownerDocument',\n    'style',\n    'attributes',\n    'nodeValue'\n];\nis.domElement = (value) => {\n    return is.object(value) &&\n        value.nodeType === NODE_TYPE_ELEMENT &&\n        is.string(value.nodeName) &&\n        !is.plainObject(value) &&\n        DOM_PROPERTIES_TO_CHECK.every(property => property in value);\n};\nis.observable = (value) => {\n    var _a, _b, _c, _d;\n    if (!value) {\n        return false;\n    }\n    // eslint-disable-next-line no-use-extend-native/no-use-extend-native\n    if (value === ((_b = (_a = value)[Symbol.observable]) === null || _b === void 0 ? void 0 : _b.call(_a))) {\n        return true;\n    }\n    if (value === ((_d = (_c = value)['@@observable']) === null || _d === void 0 ? void 0 : _d.call(_c))) {\n        return true;\n    }\n    return false;\n};\nis.nodeStream = (value) => is.object(value) && is.function_(value.pipe) && !is.observable(value);\nis.infinite = (value) => value === Infinity || value === -Infinity;\nconst isAbsoluteMod2 = (remainder) => (value) => is.integer(value) && Math.abs(value % 2) === remainder;\nis.evenInteger = isAbsoluteMod2(0);\nis.oddInteger = isAbsoluteMod2(1);\nis.emptyArray = (value) => is.array(value) && value.length === 0;\nis.nonEmptyArray = (value) => is.array(value) && value.length > 0;\nis.emptyString = (value) => is.string(value) && value.length === 0;\n// TODO: Use `not ''` when the `not` operator is available.\nis.nonEmptyString = (value) => is.string(value) && value.length > 0;\nconst isWhiteSpaceString = (value) => is.string(value) && !/\\S/.test(value);\nis.emptyStringOrWhitespace = (value) => is.emptyString(value) || isWhiteSpaceString(value);\nis.emptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0;\n// TODO: Use `not` operator here to remove `Map` and `Set` from type guard:\n// - https://github.com/Microsoft/TypeScript/pull/29317\nis.nonEmptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length > 0;\nis.emptySet = (value) => is.set(value) && value.size === 0;\nis.nonEmptySet = (value) => is.set(value) && value.size > 0;\nis.emptyMap = (value) => is.map(value) && value.size === 0;\nis.nonEmptyMap = (value) => is.map(value) && value.size > 0;\nconst predicateOnArray = (method, predicate, values) => {\n    if (!is.function_(predicate)) {\n        throw new TypeError(`Invalid predicate: ${JSON.stringify(predicate)}`);\n    }\n    if (values.length === 0) {\n        throw new TypeError('Invalid number of values');\n    }\n    return method.call(values, predicate);\n};\nis.any = (predicate, ...values) => {\n    const predicates = is.array(predicate) ? predicate : [predicate];\n    return predicates.some(singlePredicate => predicateOnArray(Array.prototype.some, singlePredicate, values));\n};\nis.all = (predicate, ...values) => predicateOnArray(Array.prototype.every, predicate, values);\nconst assertType = (condition, description, value, options = {}) => {\n    if (!condition) {\n        const { multipleValues } = options;\n        const valuesMessage = multipleValues ?\n            `received values of types ${[\n                ...new Set(value.map(singleValue => `\\`${is(singleValue)}\\``))\n            ].join(', ')}` :\n            `received value of type \\`${is(value)}\\``;\n        throw new TypeError(`Expected value which is \\`${description}\\`, ${valuesMessage}.`);\n    }\n};\nexports.assert = {\n    // Unknowns.\n    undefined: (value) => assertType(is.undefined(value), 'undefined', value),\n    string: (value) => assertType(is.string(value), 'string', value),\n    number: (value) => assertType(is.number(value), 'number', value),\n    bigint: (value) => assertType(is.bigint(value), 'bigint', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    function_: (value) => assertType(is.function_(value), 'Function', value),\n    null_: (value) => assertType(is.null_(value), 'null', value),\n    class_: (value) => assertType(is.class_(value), \"Class\" /* class_ */, value),\n    boolean: (value) => assertType(is.boolean(value), 'boolean', value),\n    symbol: (value) => assertType(is.symbol(value), 'symbol', value),\n    numericString: (value) => assertType(is.numericString(value), \"string with a number\" /* numericString */, value),\n    array: (value, assertion) => {\n        const assert = assertType;\n        assert(is.array(value), 'Array', value);\n        if (assertion) {\n            value.forEach(assertion);\n        }\n    },\n    buffer: (value) => assertType(is.buffer(value), 'Buffer', value),\n    nullOrUndefined: (value) => assertType(is.nullOrUndefined(value), \"null or undefined\" /* nullOrUndefined */, value),\n    object: (value) => assertType(is.object(value), 'Object', value),\n    iterable: (value) => assertType(is.iterable(value), \"Iterable\" /* iterable */, value),\n    asyncIterable: (value) => assertType(is.asyncIterable(value), \"AsyncIterable\" /* asyncIterable */, value),\n    generator: (value) => assertType(is.generator(value), 'Generator', value),\n    asyncGenerator: (value) => assertType(is.asyncGenerator(value), 'AsyncGenerator', value),\n    nativePromise: (value) => assertType(is.nativePromise(value), \"native Promise\" /* nativePromise */, value),\n    promise: (value) => assertType(is.promise(value), 'Promise', value),\n    generatorFunction: (value) => assertType(is.generatorFunction(value), 'GeneratorFunction', value),\n    asyncGeneratorFunction: (value) => assertType(is.asyncGeneratorFunction(value), 'AsyncGeneratorFunction', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    asyncFunction: (value) => assertType(is.asyncFunction(value), 'AsyncFunction', value),\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    boundFunction: (value) => assertType(is.boundFunction(value), 'Function', value),\n    regExp: (value) => assertType(is.regExp(value), 'RegExp', value),\n    date: (value) => assertType(is.date(value), 'Date', value),\n    error: (value) => assertType(is.error(value), 'Error', value),\n    map: (value) => assertType(is.map(value), 'Map', value),\n    set: (value) => assertType(is.set(value), 'Set', value),\n    weakMap: (value) => assertType(is.weakMap(value), 'WeakMap', value),\n    weakSet: (value) => assertType(is.weakSet(value), 'WeakSet', value),\n    int8Array: (value) => assertType(is.int8Array(value), 'Int8Array', value),\n    uint8Array: (value) => assertType(is.uint8Array(value), 'Uint8Array', value),\n    uint8ClampedArray: (value) => assertType(is.uint8ClampedArray(value), 'Uint8ClampedArray', value),\n    int16Array: (value) => assertType(is.int16Array(value), 'Int16Array', value),\n    uint16Array: (value) => assertType(is.uint16Array(value), 'Uint16Array', value),\n    int32Array: (value) => assertType(is.int32Array(value), 'Int32Array', value),\n    uint32Array: (value) => assertType(is.uint32Array(value), 'Uint32Array', value),\n    float32Array: (value) => assertType(is.float32Array(value), 'Float32Array', value),\n    float64Array: (value) => assertType(is.float64Array(value), 'Float64Array', value),\n    bigInt64Array: (value) => assertType(is.bigInt64Array(value), 'BigInt64Array', value),\n    bigUint64Array: (value) => assertType(is.bigUint64Array(value), 'BigUint64Array', value),\n    arrayBuffer: (value) => assertType(is.arrayBuffer(value), 'ArrayBuffer', value),\n    sharedArrayBuffer: (value) => assertType(is.sharedArrayBuffer(value), 'SharedArrayBuffer', value),\n    dataView: (value) => assertType(is.dataView(value), 'DataView', value),\n    urlInstance: (value) => assertType(is.urlInstance(value), 'URL', value),\n    urlString: (value) => assertType(is.urlString(value), \"string with a URL\" /* urlString */, value),\n    truthy: (value) => assertType(is.truthy(value), \"truthy\" /* truthy */, value),\n    falsy: (value) => assertType(is.falsy(value), \"falsy\" /* falsy */, value),\n    nan: (value) => assertType(is.nan(value), \"NaN\" /* nan */, value),\n    primitive: (value) => assertType(is.primitive(value), \"primitive\" /* primitive */, value),\n    integer: (value) => assertType(is.integer(value), \"integer\" /* integer */, value),\n    safeInteger: (value) => assertType(is.safeInteger(value), \"integer\" /* safeInteger */, value),\n    plainObject: (value) => assertType(is.plainObject(value), \"plain object\" /* plainObject */, value),\n    typedArray: (value) => assertType(is.typedArray(value), \"TypedArray\" /* typedArray */, value),\n    arrayLike: (value) => assertType(is.arrayLike(value), \"array-like\" /* arrayLike */, value),\n    domElement: (value) => assertType(is.domElement(value), \"HTMLElement\" /* domElement */, value),\n    observable: (value) => assertType(is.observable(value), 'Observable', value),\n    nodeStream: (value) => assertType(is.nodeStream(value), \"Node.js Stream\" /* nodeStream */, value),\n    infinite: (value) => assertType(is.infinite(value), \"infinite number\" /* infinite */, value),\n    emptyArray: (value) => assertType(is.emptyArray(value), \"empty array\" /* emptyArray */, value),\n    nonEmptyArray: (value) => assertType(is.nonEmptyArray(value), \"non-empty array\" /* nonEmptyArray */, value),\n    emptyString: (value) => assertType(is.emptyString(value), \"empty string\" /* emptyString */, value),\n    nonEmptyString: (value) => assertType(is.nonEmptyString(value), \"non-empty string\" /* nonEmptyString */, value),\n    emptyStringOrWhitespace: (value) => assertType(is.emptyStringOrWhitespace(value), \"empty string or whitespace\" /* emptyStringOrWhitespace */, value),\n    emptyObject: (value) => assertType(is.emptyObject(value), \"empty object\" /* emptyObject */, value),\n    nonEmptyObject: (value) => assertType(is.nonEmptyObject(value), \"non-empty object\" /* nonEmptyObject */, value),\n    emptySet: (value) => assertType(is.emptySet(value), \"empty set\" /* emptySet */, value),\n    nonEmptySet: (value) => assertType(is.nonEmptySet(value), \"non-empty set\" /* nonEmptySet */, value),\n    emptyMap: (value) => assertType(is.emptyMap(value), \"empty map\" /* emptyMap */, value),\n    nonEmptyMap: (value) => assertType(is.nonEmptyMap(value), \"non-empty map\" /* nonEmptyMap */, value),\n    // Numbers.\n    evenInteger: (value) => assertType(is.evenInteger(value), \"even integer\" /* evenInteger */, value),\n    oddInteger: (value) => assertType(is.oddInteger(value), \"odd integer\" /* oddInteger */, value),\n    // Two arguments.\n    directInstanceOf: (instance, class_) => assertType(is.directInstanceOf(instance, class_), \"T\" /* directInstanceOf */, instance),\n    inRange: (value, range) => assertType(is.inRange(value, range), \"in range\" /* inRange */, value),\n    // Variadic functions.\n    any: (predicate, ...values) => {\n        return assertType(is.any(predicate, ...values), \"predicate returns truthy for any value\" /* any */, values, { multipleValues: true });\n    },\n    all: (predicate, ...values) => assertType(is.all(predicate, ...values), \"predicate returns truthy for all values\" /* all */, values, { multipleValues: true })\n};\n// Some few keywords are reserved, but we'll populate them for Node.js users\n// See https://github.com/Microsoft/TypeScript/issues/2536\nObject.defineProperties(is, {\n    class: {\n        value: is.class_\n    },\n    function: {\n        value: is.function_\n    },\n    null: {\n        value: is.null_\n    }\n});\nObject.defineProperties(exports.assert, {\n    class: {\n        value: exports.assert.class_\n    },\n    function: {\n        value: exports.assert.function_\n    },\n    null: {\n        value: exports.assert.null_\n    }\n});\nexports.default = is;\n// For CommonJS default export support\nmodule.exports = is;\nmodule.exports.default = is;\nmodule.exports.assert = exports.assert;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/@sindresorhus/is/dist/index.js?");

/***/ }),

/***/ "./node_modules/ansi-colors/index.js":
/*!*******************************************!*\
  !*** ./node_modules/ansi-colors/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nconst identity = val => val;\n\n/* eslint-disable no-control-regex */\n// this is a modified version of https://github.com/chalk/ansi-regex (MIT License)\nconst ANSI_REGEX = /[\\u001b\\u009b][[\\]#;?()]*(?:(?:(?:[^\\W_]*;?[^\\W_]*)\\u0007)|(?:(?:[0-9]{1,4}(;[0-9]{0,4})*)?[~0-9=<>cf-nqrtyA-PRZ]))/g;\n\nconst create = () => {\n  const colors = { enabled: true, visible: true, styles: {}, keys: {} };\n\n  if ('FORCE_COLOR' in process.env) {\n    colors.enabled = process.env.FORCE_COLOR !== '0';\n  }\n\n  const ansi = style => {\n    let open = style.open = `\\u001b[${style.codes[0]}m`;\n    let close = style.close = `\\u001b[${style.codes[1]}m`;\n    let regex = style.regex = new RegExp(`\\\\u001b\\\\[${style.codes[1]}m`, 'g');\n    style.wrap = (input, newline) => {\n      if (input.includes(close)) input = input.replace(regex, close + open);\n      let output = open + input + close;\n      // see https://github.com/chalk/chalk/pull/92, thanks to the\n      // chalk contributors for this fix. However, we've confirmed that\n      // this issue is also present in Windows terminals\n      return newline ? output.replace(/\\r*\\n/g, `${close}$&${open}`) : output;\n    };\n    return style;\n  };\n\n  const wrap = (style, input, newline) => {\n    return typeof style === 'function' ? style(input) : style.wrap(input, newline);\n  };\n\n  const style = (input, stack) => {\n    if (input === '' || input == null) return '';\n    if (colors.enabled === false) return input;\n    if (colors.visible === false) return '';\n    let str = '' + input;\n    let nl = str.includes('\\n');\n    let n = stack.length;\n    if (n > 0 && stack.includes('unstyle')) {\n      stack = [...new Set(['unstyle', ...stack])].reverse();\n    }\n    while (n-- > 0) str = wrap(colors.styles[stack[n]], str, nl);\n    return str;\n  };\n\n  const define = (name, codes, type) => {\n    colors.styles[name] = ansi({ name, codes });\n    let keys = colors.keys[type] || (colors.keys[type] = []);\n    keys.push(name);\n\n    Reflect.defineProperty(colors, name, {\n      configurable: true,\n      enumerable: true,\n      set(value) {\n        colors.alias(name, value);\n      },\n      get() {\n        let color = input => style(input, color.stack);\n        Reflect.setPrototypeOf(color, colors);\n        color.stack = this.stack ? this.stack.concat(name) : [name];\n        return color;\n      }\n    });\n  };\n\n  define('reset', [0, 0], 'modifier');\n  define('bold', [1, 22], 'modifier');\n  define('dim', [2, 22], 'modifier');\n  define('italic', [3, 23], 'modifier');\n  define('underline', [4, 24], 'modifier');\n  define('inverse', [7, 27], 'modifier');\n  define('hidden', [8, 28], 'modifier');\n  define('strikethrough', [9, 29], 'modifier');\n\n  define('black', [30, 39], 'color');\n  define('red', [31, 39], 'color');\n  define('green', [32, 39], 'color');\n  define('yellow', [33, 39], 'color');\n  define('blue', [34, 39], 'color');\n  define('magenta', [35, 39], 'color');\n  define('cyan', [36, 39], 'color');\n  define('white', [37, 39], 'color');\n  define('gray', [90, 39], 'color');\n  define('grey', [90, 39], 'color');\n\n  define('bgBlack', [40, 49], 'bg');\n  define('bgRed', [41, 49], 'bg');\n  define('bgGreen', [42, 49], 'bg');\n  define('bgYellow', [43, 49], 'bg');\n  define('bgBlue', [44, 49], 'bg');\n  define('bgMagenta', [45, 49], 'bg');\n  define('bgCyan', [46, 49], 'bg');\n  define('bgWhite', [47, 49], 'bg');\n\n  define('blackBright', [90, 39], 'bright');\n  define('redBright', [91, 39], 'bright');\n  define('greenBright', [92, 39], 'bright');\n  define('yellowBright', [93, 39], 'bright');\n  define('blueBright', [94, 39], 'bright');\n  define('magentaBright', [95, 39], 'bright');\n  define('cyanBright', [96, 39], 'bright');\n  define('whiteBright', [97, 39], 'bright');\n\n  define('bgBlackBright', [100, 49], 'bgBright');\n  define('bgRedBright', [101, 49], 'bgBright');\n  define('bgGreenBright', [102, 49], 'bgBright');\n  define('bgYellowBright', [103, 49], 'bgBright');\n  define('bgBlueBright', [104, 49], 'bgBright');\n  define('bgMagentaBright', [105, 49], 'bgBright');\n  define('bgCyanBright', [106, 49], 'bgBright');\n  define('bgWhiteBright', [107, 49], 'bgBright');\n\n  colors.ansiRegex = ANSI_REGEX;\n  colors.hasColor = colors.hasAnsi = str => {\n    colors.ansiRegex.lastIndex = 0;\n    return typeof str === 'string' && str !== '' && colors.ansiRegex.test(str);\n  };\n\n  colors.alias = (name, color) => {\n    let fn = typeof color === 'string' ? colors[color] : color;\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Expected alias to be the name of an existing color (string) or a function');\n    }\n\n    if (!fn.stack) {\n      Reflect.defineProperty(fn, 'name', { value: name });\n      colors.styles[name] = fn;\n      fn.stack = [name];\n    }\n\n    Reflect.defineProperty(colors, name, {\n      configurable: true,\n      enumerable: true,\n      set(value) {\n        colors.alias(name, value);\n      },\n      get() {\n        let color = input => style(input, color.stack);\n        Reflect.setPrototypeOf(color, colors);\n        color.stack = this.stack ? this.stack.concat(fn.stack) : fn.stack;\n        return color;\n      }\n    });\n  };\n\n  colors.theme = custom => {\n    if (!isObject(custom)) throw new TypeError('Expected theme to be an object');\n    for (let name of Object.keys(custom)) {\n      colors.alias(name, custom[name]);\n    }\n    return colors;\n  };\n\n  colors.alias('unstyle', str => {\n    if (typeof str === 'string' && str !== '') {\n      colors.ansiRegex.lastIndex = 0;\n      return str.replace(colors.ansiRegex, '');\n    }\n    return '';\n  });\n\n  colors.alias('noop', str => str);\n  colors.none = colors.clear = colors.noop;\n\n  colors.stripColor = colors.unstyle;\n  colors.symbols = __webpack_require__(/*! ./symbols */ \"./node_modules/ansi-colors/symbols.js\");\n  colors.define = define;\n  return colors;\n};\n\nmodule.exports = create();\nmodule.exports.create = create;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/mock/process.js */ \"./node_modules/node-libs-browser/mock/process.js\")))\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ansi-colors/index.js?");

/***/ }),

/***/ "./node_modules/ansi-colors/symbols.js":
/*!*********************************************!*\
  !*** ./node_modules/ansi-colors/symbols.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nconst isHyper = process.env.TERM_PROGRAM === 'Hyper';\nconst isWindows = process.platform === 'win32';\nconst isLinux = process.platform === 'linux';\n\nconst common = {\n  ballotDisabled: '☒',\n  ballotOff: '☐',\n  ballotOn: '☑',\n  bullet: '•',\n  bulletWhite: '◦',\n  fullBlock: '█',\n  heart: '❤',\n  identicalTo: '≡',\n  line: '─',\n  mark: '※',\n  middot: '·',\n  minus: '－',\n  multiplication: '×',\n  obelus: '÷',\n  pencilDownRight: '✎',\n  pencilRight: '✏',\n  pencilUpRight: '✐',\n  percent: '%',\n  pilcrow2: '❡',\n  pilcrow: '¶',\n  plusMinus: '±',\n  section: '§',\n  starsOff: '☆',\n  starsOn: '★',\n  upDownArrow: '↕'\n};\n\nconst windows = Object.assign({}, common, {\n  check: '√',\n  cross: '×',\n  ellipsisLarge: '...',\n  ellipsis: '...',\n  info: 'i',\n  question: '?',\n  questionSmall: '?',\n  pointer: '>',\n  pointerSmall: '»',\n  radioOff: '( )',\n  radioOn: '(*)',\n  warning: '‼'\n});\n\nconst other = Object.assign({}, common, {\n  ballotCross: '✘',\n  check: '✔',\n  cross: '✖',\n  ellipsisLarge: '⋯',\n  ellipsis: '…',\n  info: 'ℹ',\n  question: '?',\n  questionFull: '？',\n  questionSmall: '﹖',\n  pointer: isLinux ? '▸' : '❯',\n  pointerSmall: isLinux ? '‣' : '›',\n  radioOff: '◯',\n  radioOn: '◉',\n  warning: '⚠'\n});\n\nmodule.exports = (isWindows && !isHyper) ? windows : other;\nReflect.defineProperty(module.exports, 'common', { enumerable: false, value: common });\nReflect.defineProperty(module.exports, 'windows', { enumerable: false, value: windows });\nReflect.defineProperty(module.exports, 'other', { enumerable: false, value: other });\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/mock/process.js */ \"./node_modules/node-libs-browser/mock/process.js\")))\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ansi-colors/symbols.js?");

/***/ }),

/***/ "./node_modules/async-retry/lib/index.js":
/*!***********************************************!*\
  !*** ./node_modules/async-retry/lib/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Packages\nvar retrier = __webpack_require__(/*! retry */ \"./node_modules/retry/index.js\");\n\nfunction retry(fn, opts) {\n  function run(resolve, reject) {\n    var options = opts || {};\n    var op;\n\n    // Default `randomize` to true\n    if (!('randomize' in options)) {\n      options.randomize = true;\n    }\n\n    op = retrier.operation(options);\n\n    // We allow the user to abort retrying\n    // this makes sense in the cases where\n    // knowledge is obtained that retrying\n    // would be futile (e.g.: auth errors)\n\n    function bail(err) {\n      reject(err || new Error('Aborted'));\n    }\n\n    function onError(err, num) {\n      if (err.bail) {\n        bail(err);\n        return;\n      }\n\n      if (!op.retry(err)) {\n        reject(op.mainError());\n      } else if (options.onRetry) {\n        options.onRetry(err, num);\n      }\n    }\n\n    function runAttempt(num) {\n      var val;\n\n      try {\n        val = fn(bail, num);\n      } catch (err) {\n        onError(err, num);\n        return;\n      }\n\n      Promise.resolve(val)\n        .then(resolve)\n        .catch(function catchIt(err) {\n          onError(err, num);\n        });\n    }\n\n    op.attempt(runAttempt);\n  }\n\n  return new Promise(run);\n}\n\nmodule.exports = retry;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/async-retry/lib/index.js?");

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"./node_modules/axios/lib/axios.js\");\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/index.js?");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./node_modules/axios/lib/helpers/cookies.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"./node_modules/axios/lib/core/createError.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/adapters/xhr.js?");

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./node_modules/axios/lib/helpers/spread.js\");\n\n// Expose isAxiosError\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./node_modules/axios/lib/helpers/isAxiosError.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/cancel/Cancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/cancel/CancelToken.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/cancel/isCancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/core/Axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/core/InterceptorManager.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/core/buildFullPath.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/core/createError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"./node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/core/dispatchRequest.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/core/enhanceError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/core/mergeConfig.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"./node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/core/settle.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/core/transformData.js?");

/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node-libs-browser/mock/process.js */ \"./node_modules/node-libs-browser/mock/process.js\")))\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/defaults.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/helpers/bind.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/helpers/buildURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/helpers/combineURLs.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/helpers/cookies.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/helpers/isAbsoluteURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/helpers/isAxiosError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/helpers/isURLSameOrigin.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/helpers/normalizeHeaderName.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/helpers/parseHeaders.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/helpers/spread.js?");

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/axios/lib/utils.js?");

/***/ }),

/***/ "./node_modules/callsites/index.js":
/*!*****************************************!*\
  !*** ./node_modules/callsites/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst callsites = () => {\n\tconst _prepareStackTrace = Error.prepareStackTrace;\n\tError.prepareStackTrace = (_, stack) => stack;\n\tconst stack = new Error().stack.slice(1);\n\tError.prepareStackTrace = _prepareStackTrace;\n\treturn stack;\n};\n\nmodule.exports = callsites;\n// TODO: Remove this for the next major release\nmodule.exports.default = callsites;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/callsites/index.js?");

/***/ }),

/***/ "./node_modules/content-type/index.js":
/*!********************************************!*\
  !*** ./node_modules/content-type/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] === '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/content-type/index.js?");

/***/ }),

/***/ "./node_modules/dot-prop/index.js":
/*!****************************************!*\
  !*** ./node_modules/dot-prop/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nconst isObj = __webpack_require__(/*! is-obj */ \"./node_modules/is-obj/index.js\");\n\nconst disallowedKeys = new Set([\n\t'__proto__',\n\t'prototype',\n\t'constructor'\n]);\n\nconst isValidPath = pathSegments => !pathSegments.some(segment => disallowedKeys.has(segment));\n\nfunction getPathSegments(path) {\n\tconst pathArray = path.split('.');\n\tconst parts = [];\n\n\tfor (let i = 0; i < pathArray.length; i++) {\n\t\tlet p = pathArray[i];\n\n\t\twhile (p[p.length - 1] === '\\\\' && pathArray[i + 1] !== undefined) {\n\t\t\tp = p.slice(0, -1) + '.';\n\t\t\tp += pathArray[++i];\n\t\t}\n\n\t\tparts.push(p);\n\t}\n\n\tif (!isValidPath(parts)) {\n\t\treturn [];\n\t}\n\n\treturn parts;\n}\n\nmodule.exports = {\n\tget(object, path, value) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn value === undefined ? object : value;\n\t\t}\n\n\t\tconst pathArray = getPathSegments(path);\n\t\tif (pathArray.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tobject = object[pathArray[i]];\n\n\t\t\tif (object === undefined || object === null) {\n\t\t\t\t// `object` is either `undefined` or `null` so we want to stop the loop, and\n\t\t\t\t// if this is not the last bit of the path, and\n\t\t\t\t// if it did't return `undefined`\n\t\t\t\t// it would return `null` if `object` is `null`\n\t\t\t\t// but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n\t\t\t\tif (i !== pathArray.length - 1) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn object === undefined ? value : object;\n\t},\n\n\tset(object, path, value) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn object;\n\t\t}\n\n\t\tconst root = object;\n\t\tconst pathArray = getPathSegments(path);\n\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tconst p = pathArray[i];\n\n\t\t\tif (!isObj(object[p])) {\n\t\t\t\tobject[p] = {};\n\t\t\t}\n\n\t\t\tif (i === pathArray.length - 1) {\n\t\t\t\tobject[p] = value;\n\t\t\t}\n\n\t\t\tobject = object[p];\n\t\t}\n\n\t\treturn root;\n\t},\n\n\tdelete(object, path) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathArray = getPathSegments(path);\n\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tconst p = pathArray[i];\n\n\t\t\tif (i === pathArray.length - 1) {\n\t\t\t\tdelete object[p];\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tobject = object[p];\n\n\t\t\tif (!isObj(object)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\thas(object, path) {\n\t\tif (!isObj(object) || typeof path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathArray = getPathSegments(path);\n\t\tif (pathArray.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// eslint-disable-next-line unicorn/no-for-loop\n\t\tfor (let i = 0; i < pathArray.length; i++) {\n\t\t\tif (isObj(object)) {\n\t\t\t\tif (!(pathArray[i] in object)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tobject = object[pathArray[i]];\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/dot-prop/index.js?");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/events/events.js?");

/***/ }),

/***/ "./node_modules/is-obj/index.js":
/*!**************************************!*\
  !*** ./node_modules/is-obj/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = value => {\n\tconst type = typeof value;\n\treturn value !== null && (type === 'object' || type === 'function');\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/is-obj/index.js?");

/***/ }),

/***/ "./node_modules/lodash.isequal/index.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash.isequal/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack://ApifyClient/./node_modules/lodash.isequal/index.js?");

/***/ }),

/***/ "./node_modules/node-libs-browser/mock/process.js":
/*!********************************************************!*\
  !*** ./node_modules/node-libs-browser/mock/process.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = __webpack_require__(/*! path */ \"./node_modules/path-browserify/index.js\");\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/node-libs-browser/mock/process.js?");

/***/ }),

/***/ "./node_modules/ow/dist/argument-error.js":
/*!************************************************!*\
  !*** ./node_modules/ow/dist/argument-error.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArgumentError = void 0;\nconst generate_stack_1 = __webpack_require__(/*! ./utils/generate-stack */ \"./node_modules/ow/dist/utils/generate-stack.js\");\nconst wrapStackTrace = (error, stack) => `${error.name}: ${error.message}\\n${stack}`;\n/**\n@hidden\n*/\nclass ArgumentError extends Error {\n    constructor(message, context, errors = new Map()) {\n        super(message);\n        Object.defineProperty(this, \"validationErrors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = 'ArgumentError';\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, context);\n        }\n        else {\n            this.stack = wrapStackTrace(this, generate_stack_1.generateStackTrace());\n        }\n        this.validationErrors = errors;\n    }\n}\nexports.ArgumentError = ArgumentError;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/argument-error.js?");

/***/ }),

/***/ "./node_modules/ow/dist/index.js":
/*!***************************************!*\
  !*** ./node_modules/ow/dist/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArgumentError = exports.AnyPredicate = exports.DataViewPredicate = exports.ArrayBufferPredicate = exports.TypedArrayPredicate = exports.WeakSetPredicate = exports.SetPredicate = exports.WeakMapPredicate = exports.MapPredicate = exports.ErrorPredicate = exports.DatePredicate = exports.ObjectPredicate = exports.ArrayPredicate = exports.BooleanPredicate = exports.NumberPredicate = exports.StringPredicate = exports.Predicate = void 0;\nconst callsites_1 = __webpack_require__(/*! callsites */ \"./node_modules/callsites/index.js\");\nconst infer_label_1 = __webpack_require__(/*! ./utils/infer-label */ \"./node_modules/ow/dist/utils/infer-label.browser.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicates/predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nObject.defineProperty(exports, \"Predicate\", { enumerable: true, get: function () { return predicate_1.Predicate; } });\nconst base_predicate_1 = __webpack_require__(/*! ./predicates/base-predicate */ \"./node_modules/ow/dist/predicates/base-predicate.js\");\nconst modifiers_1 = __webpack_require__(/*! ./modifiers */ \"./node_modules/ow/dist/modifiers.js\");\nconst predicates_1 = __webpack_require__(/*! ./predicates */ \"./node_modules/ow/dist/predicates.js\");\nconst test_1 = __webpack_require__(/*! ./test */ \"./node_modules/ow/dist/test.js\");\nconst ow = (value, labelOrPredicate, predicate) => {\n    if (!base_predicate_1.isPredicate(labelOrPredicate) && typeof labelOrPredicate !== 'string') {\n        throw new TypeError(`Expected second argument to be a predicate or a string, got \\`${typeof labelOrPredicate}\\``);\n    }\n    if (base_predicate_1.isPredicate(labelOrPredicate)) {\n        // If the second argument is a predicate, infer the label\n        const stackFrames = callsites_1.default();\n        test_1.default(value, () => infer_label_1.inferLabel(stackFrames), labelOrPredicate);\n        return;\n    }\n    test_1.default(value, labelOrPredicate, predicate);\n};\nObject.defineProperties(ow, {\n    isValid: {\n        value: (value, predicate) => {\n            try {\n                ow(value, predicate);\n                return true;\n            }\n            catch (_a) {\n                return false;\n            }\n        }\n    },\n    create: {\n        value: (labelOrPredicate, predicate) => (value, label) => {\n            if (base_predicate_1.isPredicate(labelOrPredicate)) {\n                const stackFrames = callsites_1.default();\n                test_1.default(value, label !== null && label !== void 0 ? label : (() => infer_label_1.inferLabel(stackFrames)), labelOrPredicate);\n                return;\n            }\n            test_1.default(value, label !== null && label !== void 0 ? label : (labelOrPredicate), predicate);\n        }\n    }\n});\n// Can't use `export default predicates(modifiers(ow)) as Ow` because the variable needs a type annotation to avoid a compiler error when used:\n// Assertions require every name in the call target to be declared with an explicit type annotation.ts(2775)\n// See https://github.com/microsoft/TypeScript/issues/36931 for more details.\nconst _ow = predicates_1.default(modifiers_1.default(ow));\nexports.default = _ow;\nvar predicates_2 = __webpack_require__(/*! ./predicates */ \"./node_modules/ow/dist/predicates.js\");\nObject.defineProperty(exports, \"StringPredicate\", { enumerable: true, get: function () { return predicates_2.StringPredicate; } });\nObject.defineProperty(exports, \"NumberPredicate\", { enumerable: true, get: function () { return predicates_2.NumberPredicate; } });\nObject.defineProperty(exports, \"BooleanPredicate\", { enumerable: true, get: function () { return predicates_2.BooleanPredicate; } });\nObject.defineProperty(exports, \"ArrayPredicate\", { enumerable: true, get: function () { return predicates_2.ArrayPredicate; } });\nObject.defineProperty(exports, \"ObjectPredicate\", { enumerable: true, get: function () { return predicates_2.ObjectPredicate; } });\nObject.defineProperty(exports, \"DatePredicate\", { enumerable: true, get: function () { return predicates_2.DatePredicate; } });\nObject.defineProperty(exports, \"ErrorPredicate\", { enumerable: true, get: function () { return predicates_2.ErrorPredicate; } });\nObject.defineProperty(exports, \"MapPredicate\", { enumerable: true, get: function () { return predicates_2.MapPredicate; } });\nObject.defineProperty(exports, \"WeakMapPredicate\", { enumerable: true, get: function () { return predicates_2.WeakMapPredicate; } });\nObject.defineProperty(exports, \"SetPredicate\", { enumerable: true, get: function () { return predicates_2.SetPredicate; } });\nObject.defineProperty(exports, \"WeakSetPredicate\", { enumerable: true, get: function () { return predicates_2.WeakSetPredicate; } });\nObject.defineProperty(exports, \"TypedArrayPredicate\", { enumerable: true, get: function () { return predicates_2.TypedArrayPredicate; } });\nObject.defineProperty(exports, \"ArrayBufferPredicate\", { enumerable: true, get: function () { return predicates_2.ArrayBufferPredicate; } });\nObject.defineProperty(exports, \"DataViewPredicate\", { enumerable: true, get: function () { return predicates_2.DataViewPredicate; } });\nObject.defineProperty(exports, \"AnyPredicate\", { enumerable: true, get: function () { return predicates_2.AnyPredicate; } });\nvar argument_error_1 = __webpack_require__(/*! ./argument-error */ \"./node_modules/ow/dist/argument-error.js\");\nObject.defineProperty(exports, \"ArgumentError\", { enumerable: true, get: function () { return argument_error_1.ArgumentError; } });\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/index.js?");

/***/ }),

/***/ "./node_modules/ow/dist/modifiers.js":
/*!*******************************************!*\
  !*** ./node_modules/ow/dist/modifiers.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst predicates_1 = __webpack_require__(/*! ./predicates */ \"./node_modules/ow/dist/predicates.js\");\nexports.default = (object) => {\n    Object.defineProperties(object, {\n        optional: {\n            get: () => predicates_1.default({}, { optional: true })\n        }\n    });\n    return object;\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/modifiers.js?");

/***/ }),

/***/ "./node_modules/ow/dist/operators/not.js":
/*!***********************************************!*\
  !*** ./node_modules/ow/dist/operators/not.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.not = void 0;\nconst random_id_1 = __webpack_require__(/*! ../utils/random-id */ \"./node_modules/ow/dist/utils/random-id.js\");\nconst predicate_1 = __webpack_require__(/*! ../predicates/predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\n/**\nOperator which inverts the following validation.\n\n@hidden\n\n@param predictate - Predicate to wrap inside the operator.\n*/\nconst not = (predicate) => {\n    const originalAddValidator = predicate.addValidator;\n    predicate.addValidator = (validator) => {\n        const { validator: fn, message, negatedMessage } = validator;\n        const placeholder = random_id_1.default();\n        validator.message = (value, label) => (negatedMessage ?\n            negatedMessage(value, label) :\n            message(value, placeholder).replace(/ to /, '$&not ').replace(placeholder, label));\n        validator.validator = (value) => !fn(value);\n        predicate[predicate_1.validatorSymbol].push(validator);\n        predicate.addValidator = originalAddValidator;\n        return predicate;\n    };\n    return predicate;\n};\nexports.not = not;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/operators/not.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates.js":
/*!********************************************!*\
  !*** ./node_modules/ow/dist/predicates.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnyPredicate = exports.DataViewPredicate = exports.ArrayBufferPredicate = exports.TypedArrayPredicate = exports.WeakSetPredicate = exports.SetPredicate = exports.WeakMapPredicate = exports.MapPredicate = exports.ErrorPredicate = exports.DatePredicate = exports.ObjectPredicate = exports.ArrayPredicate = exports.BooleanPredicate = exports.NumberPredicate = exports.StringPredicate = void 0;\nconst string_1 = __webpack_require__(/*! ./predicates/string */ \"./node_modules/ow/dist/predicates/string.js\");\nObject.defineProperty(exports, \"StringPredicate\", { enumerable: true, get: function () { return string_1.StringPredicate; } });\nconst number_1 = __webpack_require__(/*! ./predicates/number */ \"./node_modules/ow/dist/predicates/number.js\");\nObject.defineProperty(exports, \"NumberPredicate\", { enumerable: true, get: function () { return number_1.NumberPredicate; } });\nconst boolean_1 = __webpack_require__(/*! ./predicates/boolean */ \"./node_modules/ow/dist/predicates/boolean.js\");\nObject.defineProperty(exports, \"BooleanPredicate\", { enumerable: true, get: function () { return boolean_1.BooleanPredicate; } });\nconst predicate_1 = __webpack_require__(/*! ./predicates/predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nconst array_1 = __webpack_require__(/*! ./predicates/array */ \"./node_modules/ow/dist/predicates/array.js\");\nObject.defineProperty(exports, \"ArrayPredicate\", { enumerable: true, get: function () { return array_1.ArrayPredicate; } });\nconst object_1 = __webpack_require__(/*! ./predicates/object */ \"./node_modules/ow/dist/predicates/object.js\");\nObject.defineProperty(exports, \"ObjectPredicate\", { enumerable: true, get: function () { return object_1.ObjectPredicate; } });\nconst date_1 = __webpack_require__(/*! ./predicates/date */ \"./node_modules/ow/dist/predicates/date.js\");\nObject.defineProperty(exports, \"DatePredicate\", { enumerable: true, get: function () { return date_1.DatePredicate; } });\nconst error_1 = __webpack_require__(/*! ./predicates/error */ \"./node_modules/ow/dist/predicates/error.js\");\nObject.defineProperty(exports, \"ErrorPredicate\", { enumerable: true, get: function () { return error_1.ErrorPredicate; } });\nconst map_1 = __webpack_require__(/*! ./predicates/map */ \"./node_modules/ow/dist/predicates/map.js\");\nObject.defineProperty(exports, \"MapPredicate\", { enumerable: true, get: function () { return map_1.MapPredicate; } });\nconst weak_map_1 = __webpack_require__(/*! ./predicates/weak-map */ \"./node_modules/ow/dist/predicates/weak-map.js\");\nObject.defineProperty(exports, \"WeakMapPredicate\", { enumerable: true, get: function () { return weak_map_1.WeakMapPredicate; } });\nconst set_1 = __webpack_require__(/*! ./predicates/set */ \"./node_modules/ow/dist/predicates/set.js\");\nObject.defineProperty(exports, \"SetPredicate\", { enumerable: true, get: function () { return set_1.SetPredicate; } });\nconst weak_set_1 = __webpack_require__(/*! ./predicates/weak-set */ \"./node_modules/ow/dist/predicates/weak-set.js\");\nObject.defineProperty(exports, \"WeakSetPredicate\", { enumerable: true, get: function () { return weak_set_1.WeakSetPredicate; } });\nconst typed_array_1 = __webpack_require__(/*! ./predicates/typed-array */ \"./node_modules/ow/dist/predicates/typed-array.js\");\nObject.defineProperty(exports, \"TypedArrayPredicate\", { enumerable: true, get: function () { return typed_array_1.TypedArrayPredicate; } });\nconst array_buffer_1 = __webpack_require__(/*! ./predicates/array-buffer */ \"./node_modules/ow/dist/predicates/array-buffer.js\");\nObject.defineProperty(exports, \"ArrayBufferPredicate\", { enumerable: true, get: function () { return array_buffer_1.ArrayBufferPredicate; } });\nconst data_view_1 = __webpack_require__(/*! ./predicates/data-view */ \"./node_modules/ow/dist/predicates/data-view.js\");\nObject.defineProperty(exports, \"DataViewPredicate\", { enumerable: true, get: function () { return data_view_1.DataViewPredicate; } });\nconst any_1 = __webpack_require__(/*! ./predicates/any */ \"./node_modules/ow/dist/predicates/any.js\");\nObject.defineProperty(exports, \"AnyPredicate\", { enumerable: true, get: function () { return any_1.AnyPredicate; } });\nexports.default = (object, options) => {\n    Object.defineProperties(object, {\n        string: {\n            get: () => new string_1.StringPredicate(options)\n        },\n        number: {\n            get: () => new number_1.NumberPredicate(options)\n        },\n        boolean: {\n            get: () => new boolean_1.BooleanPredicate(options)\n        },\n        undefined: {\n            get: () => new predicate_1.Predicate('undefined', options)\n        },\n        null: {\n            get: () => new predicate_1.Predicate('null', options)\n        },\n        nullOrUndefined: {\n            get: () => new predicate_1.Predicate('nullOrUndefined', options)\n        },\n        nan: {\n            get: () => new predicate_1.Predicate('nan', options)\n        },\n        symbol: {\n            get: () => new predicate_1.Predicate('symbol', options)\n        },\n        array: {\n            get: () => new array_1.ArrayPredicate(options)\n        },\n        object: {\n            get: () => new object_1.ObjectPredicate(options)\n        },\n        date: {\n            get: () => new date_1.DatePredicate(options)\n        },\n        error: {\n            get: () => new error_1.ErrorPredicate(options)\n        },\n        map: {\n            get: () => new map_1.MapPredicate(options)\n        },\n        weakMap: {\n            get: () => new weak_map_1.WeakMapPredicate(options)\n        },\n        set: {\n            get: () => new set_1.SetPredicate(options)\n        },\n        weakSet: {\n            get: () => new weak_set_1.WeakSetPredicate(options)\n        },\n        function: {\n            get: () => new predicate_1.Predicate('Function', options)\n        },\n        buffer: {\n            get: () => new predicate_1.Predicate('Buffer', options)\n        },\n        regExp: {\n            get: () => new predicate_1.Predicate('RegExp', options)\n        },\n        promise: {\n            get: () => new predicate_1.Predicate('Promise', options)\n        },\n        typedArray: {\n            get: () => new typed_array_1.TypedArrayPredicate('TypedArray', options)\n        },\n        int8Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Int8Array', options)\n        },\n        uint8Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Uint8Array', options)\n        },\n        uint8ClampedArray: {\n            get: () => new typed_array_1.TypedArrayPredicate('Uint8ClampedArray', options)\n        },\n        int16Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Int16Array', options)\n        },\n        uint16Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Uint16Array', options)\n        },\n        int32Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Int32Array', options)\n        },\n        uint32Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Uint32Array', options)\n        },\n        float32Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Float32Array', options)\n        },\n        float64Array: {\n            get: () => new typed_array_1.TypedArrayPredicate('Float64Array', options)\n        },\n        arrayBuffer: {\n            get: () => new array_buffer_1.ArrayBufferPredicate('ArrayBuffer', options)\n        },\n        sharedArrayBuffer: {\n            get: () => new array_buffer_1.ArrayBufferPredicate('SharedArrayBuffer', options)\n        },\n        dataView: {\n            get: () => new data_view_1.DataViewPredicate(options)\n        },\n        iterable: {\n            get: () => new predicate_1.Predicate('Iterable', options)\n        },\n        any: {\n            value: (...predicates) => new any_1.AnyPredicate(predicates, options)\n        }\n    });\n    return object;\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/any.js":
/*!************************************************!*\
  !*** ./node_modules/ow/dist/predicates/any.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnyPredicate = void 0;\nconst argument_error_1 = __webpack_require__(/*! ../argument-error */ \"./node_modules/ow/dist/argument-error.js\");\nconst base_predicate_1 = __webpack_require__(/*! ./base-predicate */ \"./node_modules/ow/dist/predicates/base-predicate.js\");\nconst generate_argument_error_message_1 = __webpack_require__(/*! ../utils/generate-argument-error-message */ \"./node_modules/ow/dist/utils/generate-argument-error-message.js\");\n/**\n@hidden\n*/\nclass AnyPredicate {\n    constructor(predicates, options = {}) {\n        Object.defineProperty(this, \"predicates\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: predicates\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n    }\n    [base_predicate_1.testSymbol](value, main, label) {\n        const errors = new Map();\n        for (const predicate of this.predicates) {\n            try {\n                main(value, label, predicate);\n                return;\n            }\n            catch (error) {\n                if (value === undefined && this.options.optional === true) {\n                    return;\n                }\n                // If we received an ArgumentError, then..\n                if (error instanceof argument_error_1.ArgumentError) {\n                    // Iterate through every error reported.\n                    for (const [key, value] of error.validationErrors.entries()) {\n                        // Get the current errors set, if any.\n                        const alreadyPresent = errors.get(key);\n                        // Add all errors under the same key\n                        errors.set(key, new Set([...alreadyPresent !== null && alreadyPresent !== void 0 ? alreadyPresent : [], ...value]));\n                    }\n                }\n            }\n        }\n        if (errors.size > 0) {\n            // Generate the `error.message` property.\n            const message = generate_argument_error_message_1.generateArgumentErrorMessage(errors, true);\n            throw new argument_error_1.ArgumentError(`Any predicate failed with the following errors:\\n${message}`, main, errors);\n        }\n    }\n}\nexports.AnyPredicate = AnyPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/any.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/array-buffer.js":
/*!*********************************************************!*\
  !*** ./node_modules/ow/dist/predicates/array-buffer.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArrayBufferPredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass ArrayBufferPredicate extends predicate_1.Predicate {\n    /**\n    Test an array buffer to have a specific byte length.\n\n    @param byteLength - The byte length of the array buffer.\n    */\n    byteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength === byteLength\n        });\n    }\n    /**\n    Test an array buffer to have a minimum byte length.\n\n    @param byteLength - The minimum byte length of the array buffer.\n    */\n    minByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength >= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength - 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test an array buffer to have a minimum byte length.\n\n    @param length - The minimum byte length of the array buffer.\n    */\n    maxByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength <= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength + 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n}\nexports.ArrayBufferPredicate = ArrayBufferPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/array-buffer.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/array.js":
/*!**************************************************!*\
  !*** ./node_modules/ow/dist/predicates/array.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArrayPredicate = void 0;\nconst isEqual = __webpack_require__(/*! lodash.isequal */ \"./node_modules/lodash.isequal/index.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nconst __1 = __webpack_require__(/*! .. */ \"./node_modules/ow/dist/index.js\");\nconst match_shape_1 = __webpack_require__(/*! ../utils/match-shape */ \"./node_modules/ow/dist/utils/match-shape.js\");\nclass ArrayPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('array', options);\n    }\n    /**\n    Test an array to have a specific length.\n\n    @param length - The length of the array.\n    */\n    length(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have length \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length === length\n        });\n    }\n    /**\n    Test an array to have a minimum length.\n\n    @param length - The minimum length of the array.\n    */\n    minLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum length of \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length >= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum length of \\`${length - 1}\\`, got \\`${value.length}\\``\n        });\n    }\n    /**\n    Test an array to have a maximum length.\n\n    @param length - The maximum length of the array.\n    */\n    maxLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum length of \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length <= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum length of \\`${length + 1}\\`, got \\`${value.length}\\``\n        });\n    }\n    /**\n    Test an array to start with a specific value. The value is tested by identity, not structure.\n\n    @param searchElement - The value that should be the start of the array.\n    */\n    startsWith(searchElement) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to start with \\`${searchElement}\\`, got \\`${value[0]}\\``,\n            validator: value => value[0] === searchElement\n        });\n    }\n    /**\n    Test an array to end with a specific value. The value is tested by identity, not structure.\n\n    @param searchElement - The value that should be the end of the array.\n    */\n    endsWith(searchElement) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to end with \\`${searchElement}\\`, got \\`${value[value.length - 1]}\\``,\n            validator: value => value[value.length - 1] === searchElement\n        });\n    }\n    /**\n    Test an array to include all the provided elements. The values are tested by identity, not structure.\n\n    @param searchElements - The values that should be included in the array.\n    */\n    includes(...searchElements) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to include all elements of \\`${JSON.stringify(searchElements)}\\`, got \\`${JSON.stringify(value)}\\``,\n            validator: value => searchElements.every(element => value.includes(element))\n        });\n    }\n    /**\n    Test an array to include any of the provided elements. The values are tested by identity, not structure.\n\n    @param searchElements - The values that should be included in the array.\n    */\n    includesAny(...searchElements) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to include any element of \\`${JSON.stringify(searchElements)}\\`, got \\`${JSON.stringify(value)}\\``,\n            validator: value => searchElements.some(element => value.includes(element))\n        });\n    }\n    /**\n    Test an array to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be empty, got \\`${JSON.stringify(value)}\\``,\n            validator: value => value.length === 0\n        });\n    }\n    /**\n    Test an array to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: value => value.length > 0\n        });\n    }\n    /**\n    Test an array to be deeply equal to the provided array.\n\n    @param expected - Expected value to match.\n    */\n    deepEqual(expected) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be deeply equal to \\`${JSON.stringify(expected)}\\`, got \\`${JSON.stringify(value)}\\``,\n            validator: value => isEqual(value, expected)\n        });\n    }\n    /**\n    Test all elements in the array to match to provided predicate.\n\n    @param predicate - The predicate that should be applied against every individual item.\n\n    @example\n    ```\n    ow(['a', 1], ow.array.ofType(ow.any(ow.string, ow.number)));\n    ```\n    */\n    ofType(predicate) {\n        let error;\n        // TODO [typescript@>=5] If higher-kinded types are supported natively by typescript, refactor `addValidator` to use them to avoid the usage of `any`. Otherwise, bump or remove this TODO.\n        return this.addValidator({\n            message: (_, label) => `(${label}) ${error}`,\n            validator: value => {\n                try {\n                    for (const item of value) {\n                        __1.default(item, predicate);\n                    }\n                    return true;\n                }\n                catch (error_) {\n                    error = error_.message;\n                    return false;\n                }\n            }\n        });\n    }\n    /**\n    Test if the elements in the array exactly matches the elements placed at the same indices in the predicates array.\n\n    @param predicates - Predicates to test the array against. Describes what the tested array should look like.\n\n    @example\n    ```\n    ow(['1', 2], ow.array.exactShape([ow.string, ow.number]));\n    ```\n    */\n    exactShape(predicates) {\n        const shape = predicates;\n        return this.addValidator({\n            message: (_, label, message) => `${message.replace('Expected', 'Expected element')} in ${label}`,\n            validator: object => match_shape_1.exact(object, shape, undefined, true)\n        });\n    }\n}\nexports.ArrayPredicate = ArrayPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/array.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/base-predicate.js":
/*!***********************************************************!*\
  !*** ./node_modules/ow/dist/predicates/base-predicate.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isPredicate = exports.testSymbol = void 0;\n/**\n@hidden\n*/\nexports.testSymbol = Symbol('test');\n/**\n@hidden\n*/\nconst isPredicate = (value) => Boolean(value[exports.testSymbol]);\nexports.isPredicate = isPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/base-predicate.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/boolean.js":
/*!****************************************************!*\
  !*** ./node_modules/ow/dist/predicates/boolean.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BooleanPredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass BooleanPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('boolean', options);\n    }\n    /**\n    Test a boolean to be true.\n    */\n    get true() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be true, got ${value}`,\n            validator: value => value\n        });\n    }\n    /**\n    Test a boolean to be false.\n    */\n    get false() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be false, got ${value}`,\n            validator: value => !value\n        });\n    }\n}\nexports.BooleanPredicate = BooleanPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/boolean.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/data-view.js":
/*!******************************************************!*\
  !*** ./node_modules/ow/dist/predicates/data-view.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataViewPredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass DataViewPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('DataView', options);\n    }\n    /**\n    Test a DataView to have a specific byte length.\n\n    @param byteLength - The byte length of the DataView.\n    */\n    byteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength === byteLength\n        });\n    }\n    /**\n    Test a DataView to have a minimum byte length.\n\n    @param byteLength - The minimum byte length of the DataView.\n    */\n    minByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength >= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength - 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test a DataView to have a minimum byte length.\n\n    @param length - The minimum byte length of the DataView.\n    */\n    maxByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength <= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength + 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n}\nexports.DataViewPredicate = DataViewPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/data-view.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/date.js":
/*!*************************************************!*\
  !*** ./node_modules/ow/dist/predicates/date.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatePredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass DatePredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('date', options);\n    }\n    /**\n    Test a date to be before another date.\n\n    @param date - Maximum value.\n    */\n    before(date) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} ${value.toISOString()} to be before ${date.toISOString()}`,\n            validator: value => value.getTime() < date.getTime()\n        });\n    }\n    /**\n    Test a date to be before another date.\n\n    @param date - Minimum value.\n    */\n    after(date) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} ${value.toISOString()} to be after ${date.toISOString()}`,\n            validator: value => value.getTime() > date.getTime()\n        });\n    }\n}\nexports.DatePredicate = DatePredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/date.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/error.js":
/*!**************************************************!*\
  !*** ./node_modules/ow/dist/predicates/error.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorPredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass ErrorPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('error', options);\n    }\n    /**\n    Test an error to have a specific name.\n\n    @param expected - Expected name of the Error.\n    */\n    name(expected) {\n        return this.addValidator({\n            message: (error, label) => `Expected ${label} to have name \\`${expected}\\`, got \\`${error.name}\\``,\n            validator: error => error.name === expected\n        });\n    }\n    /**\n    Test an error to have a specific message.\n\n    @param expected - Expected message of the Error.\n    */\n    message(expected) {\n        return this.addValidator({\n            message: (error, label) => `Expected ${label} message to be \\`${expected}\\`, got \\`${error.message}\\``,\n            validator: error => error.message === expected\n        });\n    }\n    /**\n    Test the error message to include a specific message.\n\n    @param message - Message that should be included in the error.\n    */\n    messageIncludes(message) {\n        return this.addValidator({\n            message: (error, label) => `Expected ${label} message to include \\`${message}\\`, got \\`${error.message}\\``,\n            validator: error => error.message.includes(message)\n        });\n    }\n    /**\n    Test the error object to have specific keys.\n\n    @param keys - One or more keys which should be part of the error object.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} message to have keys \\`${keys.join('`, `')}\\``,\n            validator: error => keys.every(key => Object.prototype.hasOwnProperty.call(error, key))\n        });\n    }\n    /**\n    Test an error to be of a specific instance type.\n\n    @param instance - The expected instance type of the error.\n    */\n    instanceOf(instance) {\n        return this.addValidator({\n            message: (error, label) => `Expected ${label} \\`${error.name}\\` to be of type \\`${instance.name}\\``,\n            validator: error => error instanceof instance\n        });\n    }\n    /**\n    Test an Error to be a TypeError.\n    */\n    get typeError() {\n        return this.instanceOf(TypeError);\n    }\n    /**\n    Test an Error to be an EvalError.\n    */\n    get evalError() {\n        return this.instanceOf(EvalError);\n    }\n    /**\n    Test an Error to be a RangeError.\n    */\n    get rangeError() {\n        return this.instanceOf(RangeError);\n    }\n    /**\n    Test an Error to be a ReferenceError.\n    */\n    get referenceError() {\n        return this.instanceOf(ReferenceError);\n    }\n    /**\n    Test an Error to be a SyntaxError.\n    */\n    get syntaxError() {\n        return this.instanceOf(SyntaxError);\n    }\n    /**\n    Test an Error to be a URIError.\n    */\n    get uriError() {\n        return this.instanceOf(URIError);\n    }\n}\nexports.ErrorPredicate = ErrorPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/error.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/map.js":
/*!************************************************!*\
  !*** ./node_modules/ow/dist/predicates/map.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MapPredicate = void 0;\nconst isEqual = __webpack_require__(/*! lodash.isequal */ \"./node_modules/lodash.isequal/index.js\");\nconst has_items_1 = __webpack_require__(/*! ../utils/has-items */ \"./node_modules/ow/dist/utils/has-items.js\");\nconst of_type_1 = __webpack_require__(/*! ../utils/of-type */ \"./node_modules/ow/dist/utils/of-type.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass MapPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('Map', options);\n    }\n    /**\n    Test a Map to have a specific size.\n\n    @param size - The size of the Map.\n    */\n    size(size) {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to have size \\`${size}\\`, got \\`${map.size}\\``,\n            validator: map => map.size === size\n        });\n    }\n    /**\n    Test an Map to have a minimum size.\n\n    @param size - The minimum size of the Map.\n    */\n    minSize(size) {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to have a minimum size of \\`${size}\\`, got \\`${map.size}\\``,\n            validator: map => map.size >= size,\n            negatedMessage: (map, label) => `Expected ${label} to have a maximum size of \\`${size - 1}\\`, got \\`${map.size}\\``\n        });\n    }\n    /**\n    Test an Map to have a maximum size.\n\n    @param size - The maximum size of the Map.\n    */\n    maxSize(size) {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to have a maximum size of \\`${size}\\`, got \\`${map.size}\\``,\n            validator: map => map.size <= size,\n            negatedMessage: (map, label) => `Expected ${label} to have a minimum size of \\`${size + 1}\\`, got \\`${map.size}\\``\n        });\n    }\n    /**\n    Test a Map to include all the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that should be a key in the Map.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label, missingKeys) => `Expected ${label} to have keys \\`${JSON.stringify(missingKeys)}\\``,\n            validator: map => has_items_1.default(map, keys)\n        });\n    }\n    /**\n    Test a Map to include any of the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that could be a key in the Map.\n    */\n    hasAnyKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any key of \\`${JSON.stringify(keys)}\\``,\n            validator: map => keys.some(key => map.has(key))\n        });\n    }\n    /**\n    Test a Map to include all the provided values. The values are tested by identity, not structure.\n\n    @param values - The values that should be a value in the Map.\n    */\n    hasValues(...values) {\n        return this.addValidator({\n            message: (_, label, missingValues) => `Expected ${label} to have values \\`${JSON.stringify(missingValues)}\\``,\n            validator: map => has_items_1.default(new Set(map.values()), values)\n        });\n    }\n    /**\n    Test a Map to include any of the provided values. The values are tested by identity, not structure.\n\n    @param values - The values that could be a value in the Map.\n    */\n    hasAnyValues(...values) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any value of \\`${JSON.stringify(values)}\\``,\n            validator: map => {\n                const valueSet = new Set(map.values());\n                return values.some(key => valueSet.has(key));\n            }\n        });\n    }\n    /**\n    Test all the keys in the Map to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every key in the Map.\n    */\n    keysOfType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: map => of_type_1.default(map.keys(), predicate)\n        });\n    }\n    /**\n    Test all the values in the Map to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every value in the Map.\n    */\n    valuesOfType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: map => of_type_1.default(map.values(), predicate)\n        });\n    }\n    /**\n    Test a Map to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to be empty, got \\`${JSON.stringify([...map])}\\``,\n            validator: map => map.size === 0\n        });\n    }\n    /**\n    Test a Map to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: map => map.size > 0\n        });\n    }\n    /**\n    Test a Map to be deeply equal to the provided Map.\n\n    @param expected - Expected Map to match.\n    */\n    deepEqual(expected) {\n        return this.addValidator({\n            message: (map, label) => `Expected ${label} to be deeply equal to \\`${JSON.stringify([...expected])}\\`, got \\`${JSON.stringify([...map])}\\``,\n            validator: map => isEqual(map, expected)\n        });\n    }\n}\nexports.MapPredicate = MapPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/map.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/number.js":
/*!***************************************************!*\
  !*** ./node_modules/ow/dist/predicates/number.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberPredicate = void 0;\nconst is_1 = __webpack_require__(/*! @sindresorhus/is */ \"./node_modules/@sindresorhus/is/dist/index.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass NumberPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('number', options);\n    }\n    /**\n    Test a number to be in a specified range.\n\n    @param start - Start of the range.\n    @param end - End of the range.\n    */\n    inRange(start, end) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be in range [${start}..${end}], got ${value}`,\n            validator: value => is_1.default.inRange(value, [start, end])\n        });\n    }\n    /**\n    Test a number to be greater than the provided value.\n\n    @param number - Minimum value.\n    */\n    greaterThan(number) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be greater than ${number}, got ${value}`,\n            validator: value => value > number\n        });\n    }\n    /**\n    Test a number to be greater than or equal to the provided value.\n\n    @param number - Minimum value.\n    */\n    greaterThanOrEqual(number) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be greater than or equal to ${number}, got ${value}`,\n            validator: value => value >= number\n        });\n    }\n    /**\n    Test a number to be less than the provided value.\n\n    @param number - Maximum value.\n    */\n    lessThan(number) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be less than ${number}, got ${value}`,\n            validator: value => value < number\n        });\n    }\n    /**\n    Test a number to be less than or equal to the provided value.\n\n    @param number - Minimum value.\n    */\n    lessThanOrEqual(number) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be less than or equal to ${number}, got ${value}`,\n            validator: value => value <= number\n        });\n    }\n    /**\n    Test a number to be equal to a specified number.\n\n    @param expected - Expected value to match.\n    */\n    equal(expected) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be equal to ${expected}, got ${value}`,\n            validator: value => value === expected\n        });\n    }\n    /**\n    Test if a number is an element of the provided list.\n\n    @param list - List of possible values.\n    */\n    oneOf(list) {\n        return this.addValidator({\n            message: (value, label) => {\n                let printedList = JSON.stringify(list);\n                if (list.length > 10) {\n                    const overflow = list.length - 10;\n                    printedList = JSON.stringify(list.slice(0, 10)).replace(/]$/, `,…+${overflow} more]`);\n                }\n                return `Expected ${label} to be one of \\`${printedList}\\`, got ${value}`;\n            },\n            validator: value => list.includes(value)\n        });\n    }\n    /**\n    Test a number to be an integer.\n    */\n    get integer() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be an integer, got ${value}`,\n            validator: value => is_1.default.integer(value)\n        });\n    }\n    /**\n    Test a number to be finite.\n    */\n    get finite() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be finite, got ${value}`,\n            validator: value => !is_1.default.infinite(value)\n        });\n    }\n    /**\n    Test a number to be infinite.\n    */\n    get infinite() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be infinite, got ${value}`,\n            validator: value => is_1.default.infinite(value)\n        });\n    }\n    /**\n    Test a number to be positive.\n    */\n    get positive() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be positive, got ${value}`,\n            validator: value => value > 0\n        });\n    }\n    /**\n    Test a number to be negative.\n    */\n    get negative() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be negative, got ${value}`,\n            validator: value => value < 0\n        });\n    }\n    /**\n    Test a number to be an integer or infinite.\n    */\n    get integerOrInfinite() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be an integer or infinite, got ${value}`,\n            validator: value => is_1.default.integer(value) || is_1.default.infinite(value)\n        });\n    }\n    /**\n    Test a number to be in a valid range for a 8-bit unsigned integer.\n    */\n    get uint8() {\n        return this.integer.inRange(0, 255);\n    }\n    /**\n    Test a number to be in a valid range for a 16-bit unsigned integer.\n    */\n    get uint16() {\n        return this.integer.inRange(0, 65535);\n    }\n    /**\n    Test a number to be in a valid range for a 32-bit unsigned integer.\n    */\n    get uint32() {\n        return this.integer.inRange(0, 4294967295);\n    }\n    /**\n    Test a number to be in a valid range for a 8-bit signed integer.\n    */\n    get int8() {\n        return this.integer.inRange(-128, 127);\n    }\n    /**\n    Test a number to be in a valid range for a 16-bit signed integer.\n    */\n    get int16() {\n        return this.integer.inRange(-32768, 32767);\n    }\n    /**\n    Test a number to be in a valid range for a 32-bit signed integer.\n    */\n    get int32() {\n        return this.integer.inRange(-2147483648, 2147483647);\n    }\n}\nexports.NumberPredicate = NumberPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/number.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/object.js":
/*!***************************************************!*\
  !*** ./node_modules/ow/dist/predicates/object.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectPredicate = void 0;\nconst is_1 = __webpack_require__(/*! @sindresorhus/is */ \"./node_modules/@sindresorhus/is/dist/index.js\");\nconst dotProp = __webpack_require__(/*! dot-prop */ \"./node_modules/dot-prop/index.js\");\nconst isEqual = __webpack_require__(/*! lodash.isequal */ \"./node_modules/lodash.isequal/index.js\");\nconst has_items_1 = __webpack_require__(/*! ../utils/has-items */ \"./node_modules/ow/dist/utils/has-items.js\");\nconst of_type_1 = __webpack_require__(/*! ../utils/of-type */ \"./node_modules/ow/dist/utils/of-type.js\");\nconst of_type_deep_1 = __webpack_require__(/*! ../utils/of-type-deep */ \"./node_modules/ow/dist/utils/of-type-deep.js\");\nconst match_shape_1 = __webpack_require__(/*! ../utils/match-shape */ \"./node_modules/ow/dist/utils/match-shape.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass ObjectPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('object', options);\n    }\n    /**\n    Test if an Object is a plain object.\n    */\n    get plain() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to be a plain object`,\n            validator: object => is_1.default.plainObject(object)\n        });\n    }\n    /**\n    Test an object to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (object, label) => `Expected ${label} to be empty, got \\`${JSON.stringify(object)}\\``,\n            validator: object => Object.keys(object).length === 0\n        });\n    }\n    /**\n    Test an object to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: object => Object.keys(object).length > 0\n        });\n    }\n    /**\n    Test all the values in the object to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every value in the object.\n    */\n    valuesOfType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: object => of_type_1.default(Object.values(object), predicate)\n        });\n    }\n    /**\n    Test all the values in the object deeply to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every value in the object.\n    */\n    deepValuesOfType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: object => of_type_deep_1.default(object, predicate)\n        });\n    }\n    /**\n    Test an object to be deeply equal to the provided object.\n\n    @param expected - Expected object to match.\n    */\n    deepEqual(expected) {\n        return this.addValidator({\n            message: (object, label) => `Expected ${label} to be deeply equal to \\`${JSON.stringify(expected)}\\`, got \\`${JSON.stringify(object)}\\``,\n            validator: object => isEqual(object, expected)\n        });\n    }\n    /**\n    Test an object to be of a specific instance type.\n\n    @param instance - The expected instance type of the object.\n    */\n    instanceOf(instance) {\n        return this.addValidator({\n            message: (object, label) => {\n                var _a;\n                let { name } = (_a = object === null || object === void 0 ? void 0 : object.constructor) !== null && _a !== void 0 ? _a : {};\n                if (!name || name === 'Object') {\n                    name = JSON.stringify(object);\n                }\n                return `Expected ${label} \\`${name}\\` to be of type \\`${instance.name}\\``;\n            },\n            validator: object => object instanceof instance\n        });\n    }\n    /**\n    Test an object to include all the provided keys. You can use [dot-notation](https://github.com/sindresorhus/dot-prop) in a key to access nested properties.\n\n    @param keys - The keys that should be present in the object.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label, missingKeys) => `Expected ${label} to have keys \\`${JSON.stringify(missingKeys)}\\``,\n            validator: object => has_items_1.default({\n                has: item => dotProp.has(object, item)\n            }, keys)\n        });\n    }\n    /**\n    Test an object to include any of the provided keys. You can use [dot-notation](https://github.com/sindresorhus/dot-prop) in a key to access nested properties.\n\n    @param keys - The keys that could be a key in the object.\n    */\n    hasAnyKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any key of \\`${JSON.stringify(keys)}\\``,\n            validator: object => keys.some(key => dotProp.has(object, key))\n        });\n    }\n    /**\n    Test an object to match the `shape` partially. This means that it ignores unexpected properties. The shape comparison is deep.\n\n    The shape is an object which describes how the tested object should look like. The keys are the same as the source object and the values are predicates.\n\n    @param shape - Shape to test the object against.\n\n    @example\n    ```\n    import ow from 'ow';\n\n    const object = {\n        unicorn: '🦄',\n        rainbow: '🌈'\n    };\n\n    ow(object, ow.object.partialShape({\n        unicorn: ow.string\n    }));\n    ```\n    */\n    partialShape(shape) {\n        return this.addValidator({\n            // TODO: Improve this when message handling becomes smarter\n            message: (_, label, message) => `${message.replace('Expected', 'Expected property')} in ${label}`,\n            validator: object => match_shape_1.partial(object, shape)\n        });\n    }\n    /**\n    Test an object to match the `shape` exactly. This means that will fail if it comes across unexpected properties. The shape comparison is deep.\n\n    The shape is an object which describes how the tested object should look like. The keys are the same as the source object and the values are predicates.\n\n    @param shape - Shape to test the object against.\n\n    @example\n    ```\n    import ow from 'ow';\n\n    ow({unicorn: '🦄'}, ow.object.exactShape({\n        unicorn: ow.string\n    }));\n    ```\n    */\n    exactShape(shape) {\n        // TODO [typescript@>=5] If higher-kinded types are supported natively by typescript, refactor `addValidator` to use them to avoid the usage of `any`. Otherwise, bump or remove this TODO.\n        return this.addValidator({\n            // TODO: Improve this when message handling becomes smarter\n            message: (_, label, message) => `${message.replace('Expected', 'Expected property')} in ${label}`,\n            validator: object => match_shape_1.exact(object, shape)\n        });\n    }\n}\nexports.ObjectPredicate = ObjectPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/object.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/predicate.js":
/*!******************************************************!*\
  !*** ./node_modules/ow/dist/predicates/predicate.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Predicate = exports.validatorSymbol = void 0;\nconst is_1 = __webpack_require__(/*! @sindresorhus/is */ \"./node_modules/@sindresorhus/is/dist/index.js\");\nconst argument_error_1 = __webpack_require__(/*! ../argument-error */ \"./node_modules/ow/dist/argument-error.js\");\nconst not_1 = __webpack_require__(/*! ../operators/not */ \"./node_modules/ow/dist/operators/not.js\");\nconst base_predicate_1 = __webpack_require__(/*! ./base-predicate */ \"./node_modules/ow/dist/predicates/base-predicate.js\");\nconst generate_argument_error_message_1 = __webpack_require__(/*! ../utils/generate-argument-error-message */ \"./node_modules/ow/dist/utils/generate-argument-error-message.js\");\n/**\n@hidden\n*/\nexports.validatorSymbol = Symbol('validators');\n/**\n@hidden\n*/\nclass Predicate {\n    constructor(type, options = {}) {\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: type\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"context\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                validators: []\n            }\n        });\n        this.context = {\n            ...this.context,\n            ...this.options\n        };\n        const typeString = this.type.charAt(0).toLowerCase() + this.type.slice(1);\n        this.addValidator({\n            message: (value, label) => {\n                // We do not include type in this label as we do for other messages, because it would be redundant.\n                const label_ = label === null || label === void 0 ? void 0 : label.slice(this.type.length + 1);\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                return `Expected ${label_ || 'argument'} to be of type \\`${this.type}\\` but received type \\`${is_1.default(value)}\\``;\n            },\n            validator: value => is_1.default[typeString](value)\n        });\n    }\n    /**\n    @hidden\n    */\n    [base_predicate_1.testSymbol](value, main, label) {\n        // Create a map of labels -> received errors.\n        const errors = new Map();\n        for (const { validator, message } of this.context.validators) {\n            if (this.options.optional === true && value === undefined) {\n                continue;\n            }\n            let result;\n            try {\n                result = validator(value);\n            }\n            catch (error) {\n                // Any errors caught means validators couldn't process the input.\n                result = error;\n            }\n            if (result === true) {\n                continue;\n            }\n            const label2 = is_1.default.function_(label) ? label() : label;\n            const label_ = label2 ?\n                `${this.type} \\`${label2}\\`` :\n                this.type;\n            const mapKey = label2 || this.type;\n            // Get the current errors encountered for this label.\n            const currentErrors = errors.get(mapKey);\n            // Pre-generate the error message that will be reported to the user.\n            const errorMessage = message(value, label_, result);\n            // If we already have any errors for this label.\n            if (currentErrors) {\n                // If we don't already have this error logged, add it.\n                currentErrors.add(errorMessage);\n            }\n            else {\n                // Set this label and error in the full map.\n                errors.set(mapKey, new Set([errorMessage]));\n            }\n        }\n        // If we have any errors to report, throw.\n        if (errors.size > 0) {\n            // Generate the `error.message` property.\n            const message = generate_argument_error_message_1.generateArgumentErrorMessage(errors);\n            throw new argument_error_1.ArgumentError(message, main, errors);\n        }\n    }\n    /**\n    @hidden\n    */\n    get [exports.validatorSymbol]() {\n        return this.context.validators;\n    }\n    /**\n    Invert the following validators.\n    */\n    get not() {\n        return not_1.not(this);\n    }\n    /**\n    Test if the value matches a custom validation function. The validation function should return an object containing a `validator` and `message`. If the `validator` is `false`, the validation fails and the `message` will be used as error message. If the `message` is a function, the function is invoked with the `label` as argument to let you further customize the error message.\n\n    @param customValidator - Custom validation function.\n    */\n    validate(customValidator) {\n        return this.addValidator({\n            message: (_, label, error) => typeof error === 'string' ?\n                `(${label}) ${error}` :\n                error(label),\n            validator: value => {\n                const { message, validator } = customValidator(value);\n                if (validator) {\n                    return true;\n                }\n                return message;\n            }\n        });\n    }\n    /**\n    Test if the value matches a custom validation function. The validation function should return `true` if the value passes the function. If the function either returns `false` or a string, the function fails and the string will be used as error message.\n\n    @param validator - Validation function.\n    */\n    is(validator) {\n        return this.addValidator({\n            message: (value, label, error) => (error ?\n                `(${label}) ${error}` :\n                `Expected ${label} \\`${value}\\` to pass custom validation function`),\n            validator\n        });\n    }\n    /**\n    Provide a new error message to be thrown when the validation fails.\n\n    @param newMessage - Either a string containing the new message or a function returning the new message.\n\n    @example\n    ```\n    ow('🌈', 'unicorn', ow.string.equals('🦄').message('Expected unicorn, got rainbow'));\n    //=> ArgumentError: Expected unicorn, got rainbow\n    ```\n\n    @example\n    ```\n    ow('🌈', ow.string.minLength(5).message((value, label) => `Expected ${label}, to have a minimum length of 5, got \\`${value}\\``));\n    //=> ArgumentError: Expected string, to be have a minimum length of 5, got `🌈`\n    ```\n    */\n    message(newMessage) {\n        const { validators } = this.context;\n        validators[validators.length - 1].message = (value, label) => {\n            if (typeof newMessage === 'function') {\n                return newMessage(value, label);\n            }\n            return newMessage;\n        };\n        return this;\n    }\n    /**\n    Register a new validator.\n\n    @param validator - Validator to register.\n    */\n    addValidator(validator) {\n        this.context.validators.push(validator);\n        return this;\n    }\n}\nexports.Predicate = Predicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/predicate.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/set.js":
/*!************************************************!*\
  !*** ./node_modules/ow/dist/predicates/set.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetPredicate = void 0;\nconst isEqual = __webpack_require__(/*! lodash.isequal */ \"./node_modules/lodash.isequal/index.js\");\nconst has_items_1 = __webpack_require__(/*! ../utils/has-items */ \"./node_modules/ow/dist/utils/has-items.js\");\nconst of_type_1 = __webpack_require__(/*! ../utils/of-type */ \"./node_modules/ow/dist/utils/of-type.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass SetPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('Set', options);\n    }\n    /**\n    Test a Set to have a specific size.\n\n    @param size - The size of the Set.\n    */\n    size(size) {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to have size \\`${size}\\`, got \\`${set.size}\\``,\n            validator: set => set.size === size\n        });\n    }\n    /**\n    Test a Set to have a minimum size.\n\n    @param size - The minimum size of the Set.\n    */\n    minSize(size) {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to have a minimum size of \\`${size}\\`, got \\`${set.size}\\``,\n            validator: set => set.size >= size,\n            negatedMessage: (set, label) => `Expected ${label} to have a maximum size of \\`${size - 1}\\`, got \\`${set.size}\\``\n        });\n    }\n    /**\n    Test a Set to have a maximum size.\n\n    @param size - The maximum size of the Set.\n    */\n    maxSize(size) {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to have a maximum size of \\`${size}\\`, got \\`${set.size}\\``,\n            validator: set => set.size <= size,\n            negatedMessage: (set, label) => `Expected ${label} to have a minimum size of \\`${size + 1}\\`, got \\`${set.size}\\``\n        });\n    }\n    /**\n    Test a Set to include all the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that should be a item in the Set.\n    */\n    has(...items) {\n        return this.addValidator({\n            message: (_, label, missingItems) => `Expected ${label} to have items \\`${JSON.stringify(missingItems)}\\``,\n            validator: set => has_items_1.default(set, items)\n        });\n    }\n    /**\n    Test a Set to include any of the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that could be a item in the Set.\n    */\n    hasAny(...items) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any item of \\`${JSON.stringify(items)}\\``,\n            validator: set => items.some(item => set.has(item))\n        });\n    }\n    /**\n    Test all the items in the Set to match the provided predicate.\n\n    @param predicate - The predicate that should be applied against every item in the Set.\n    */\n    ofType(predicate) {\n        return this.addValidator({\n            message: (_, label, error) => `(${label}) ${error}`,\n            validator: set => of_type_1.default(set, predicate)\n        });\n    }\n    /**\n    Test a Set to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to be empty, got \\`${JSON.stringify([...set])}\\``,\n            validator: set => set.size === 0\n        });\n    }\n    /**\n    Test a Set to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: set => set.size > 0\n        });\n    }\n    /**\n    Test a Set to be deeply equal to the provided Set.\n\n    @param expected - Expected Set to match.\n    */\n    deepEqual(expected) {\n        return this.addValidator({\n            message: (set, label) => `Expected ${label} to be deeply equal to \\`${JSON.stringify([...expected])}\\`, got \\`${JSON.stringify([...set])}\\``,\n            validator: set => isEqual(set, expected)\n        });\n    }\n}\nexports.SetPredicate = SetPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/set.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/string.js":
/*!***************************************************!*\
  !*** ./node_modules/ow/dist/predicates/string.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringPredicate = void 0;\nconst is_1 = __webpack_require__(/*! @sindresorhus/is */ \"./node_modules/@sindresorhus/is/dist/index.js\");\nconst valiDate = __webpack_require__(/*! vali-date */ \"./node_modules/vali-date/index.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass StringPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('string', options);\n    }\n    /**\n    Test a string to have a specific length.\n\n    @param length - The length of the string.\n    */\n    length(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have length \\`${length}\\`, got \\`${value}\\``,\n            validator: value => value.length === length\n        });\n    }\n    /**\n    Test a string to have a minimum length.\n\n    @param length - The minimum length of the string.\n    */\n    minLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum length of \\`${length}\\`, got \\`${value}\\``,\n            validator: value => value.length >= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum length of \\`${length - 1}\\`, got \\`${value}\\``\n        });\n    }\n    /**\n    Test a string to have a maximum length.\n\n    @param length - The maximum length of the string.\n    */\n    maxLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum length of \\`${length}\\`, got \\`${value}\\``,\n            validator: value => value.length <= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum length of \\`${length + 1}\\`, got \\`${value}\\``\n        });\n    }\n    /**\n    Test a string against a regular expression.\n\n    @param regex - The regular expression to match the value with.\n    */\n    matches(regex) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to match \\`${regex}\\`, got \\`${value}\\``,\n            validator: value => regex.test(value)\n        });\n    }\n    /**\n    Test a string to start with a specific value.\n\n    @param searchString - The value that should be the start of the string.\n    */\n    startsWith(searchString) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to start with \\`${searchString}\\`, got \\`${value}\\``,\n            validator: value => value.startsWith(searchString)\n        });\n    }\n    /**\n    Test a string to end with a specific value.\n\n    @param searchString - The value that should be the end of the string.\n    */\n    endsWith(searchString) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to end with \\`${searchString}\\`, got \\`${value}\\``,\n            validator: value => value.endsWith(searchString)\n        });\n    }\n    /**\n    Test a string to include a specific value.\n\n    @param searchString - The value that should be included in the string.\n    */\n    includes(searchString) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to include \\`${searchString}\\`, got \\`${value}\\``,\n            validator: value => value.includes(searchString)\n        });\n    }\n    /**\n    Test if the string is an element of the provided list.\n\n    @param list - List of possible values.\n    */\n    oneOf(list) {\n        return this.addValidator({\n            message: (value, label) => {\n                let printedList = JSON.stringify(list);\n                if (list.length > 10) {\n                    const overflow = list.length - 10;\n                    printedList = JSON.stringify(list.slice(0, 10)).replace(/]$/, `,…+${overflow} more]`);\n                }\n                return `Expected ${label} to be one of \\`${printedList}\\`, got \\`${value}\\``;\n            },\n            validator: value => list.includes(value)\n        });\n    }\n    /**\n    Test a string to be empty.\n    */\n    get empty() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be empty, got \\`${value}\\``,\n            validator: value => value === ''\n        });\n    }\n    /**\n    Test a string to be not empty.\n    */\n    get nonEmpty() {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to not be empty`,\n            validator: value => value !== ''\n        });\n    }\n    /**\n    Test a string to be equal to a specified string.\n\n    @param expected - Expected value to match.\n    */\n    equals(expected) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be equal to \\`${expected}\\`, got \\`${value}\\``,\n            validator: value => value === expected\n        });\n    }\n    /**\n    Test a string to be alphanumeric.\n    */\n    get alphanumeric() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be alphanumeric, got \\`${value}\\``,\n            validator: value => /^[a-z\\d]+$/i.test(value)\n        });\n    }\n    /**\n    Test a string to be alphabetical.\n    */\n    get alphabetical() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be alphabetical, got \\`${value}\\``,\n            validator: value => /^[a-z]+$/gi.test(value)\n        });\n    }\n    /**\n    Test a string to be numeric.\n    */\n    get numeric() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be numeric, got \\`${value}\\``,\n            validator: value => /^[+-]?\\d+$/i.test(value)\n        });\n    }\n    /**\n    Test a string to be a valid date.\n    */\n    get date() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be a date, got \\`${value}\\``,\n            validator: valiDate\n        });\n    }\n    /**\n    Test a non-empty string to be lowercase. Matching both alphabetical & numbers.\n    */\n    get lowercase() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be lowercase, got \\`${value}\\``,\n            validator: value => value.trim() !== '' && value === value.toLowerCase()\n        });\n    }\n    /**\n    Test a non-empty string to be uppercase. Matching both alphabetical & numbers.\n    */\n    get uppercase() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be uppercase, got \\`${value}\\``,\n            validator: value => value.trim() !== '' && value === value.toUpperCase()\n        });\n    }\n    /**\n    Test a string to be a valid URL.\n    */\n    get url() {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to be a URL, got \\`${value}\\``,\n            validator: is_1.default.urlString\n        });\n    }\n}\nexports.StringPredicate = StringPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/string.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/typed-array.js":
/*!********************************************************!*\
  !*** ./node_modules/ow/dist/predicates/typed-array.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypedArrayPredicate = void 0;\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass TypedArrayPredicate extends predicate_1.Predicate {\n    /**\n    Test a typed array to have a specific byte length.\n\n    @param byteLength - The byte length of the typed array.\n    */\n    byteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength === byteLength\n        });\n    }\n    /**\n    Test a typed array to have a minimum byte length.\n\n    @param byteLength - The minimum byte length of the typed array.\n    */\n    minByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength >= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength - 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test a typed array to have a minimum byte length.\n\n    @param length - The minimum byte length of the typed array.\n    */\n    maxByteLength(byteLength) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum byte length of \\`${byteLength}\\`, got \\`${value.byteLength}\\``,\n            validator: value => value.byteLength <= byteLength,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum byte length of \\`${byteLength + 1}\\`, got \\`${value.byteLength}\\``\n        });\n    }\n    /**\n    Test a typed array to have a specific length.\n\n    @param length - The length of the typed array.\n    */\n    length(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have length \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length === length\n        });\n    }\n    /**\n    Test a typed array to have a minimum length.\n\n    @param length - The minimum length of the typed array.\n    */\n    minLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a minimum length of \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length >= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a maximum length of \\`${length - 1}\\`, got \\`${value.length}\\``\n        });\n    }\n    /**\n    Test a typed array to have a maximum length.\n\n    @param length - The maximum length of the typed array.\n    */\n    maxLength(length) {\n        return this.addValidator({\n            message: (value, label) => `Expected ${label} to have a maximum length of \\`${length}\\`, got \\`${value.length}\\``,\n            validator: value => value.length <= length,\n            negatedMessage: (value, label) => `Expected ${label} to have a minimum length of \\`${length + 1}\\`, got \\`${value.length}\\``\n        });\n    }\n}\nexports.TypedArrayPredicate = TypedArrayPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/typed-array.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/weak-map.js":
/*!*****************************************************!*\
  !*** ./node_modules/ow/dist/predicates/weak-map.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeakMapPredicate = void 0;\nconst has_items_1 = __webpack_require__(/*! ../utils/has-items */ \"./node_modules/ow/dist/utils/has-items.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass WeakMapPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('WeakMap', options);\n    }\n    /**\n    Test a WeakMap to include all the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that should be a key in the WeakMap.\n    */\n    hasKeys(...keys) {\n        return this.addValidator({\n            message: (_, label, missingKeys) => `Expected ${label} to have keys \\`${JSON.stringify(missingKeys)}\\``,\n            validator: map => has_items_1.default(map, keys)\n        });\n    }\n    /**\n    Test a WeakMap to include any of the provided keys. The keys are tested by identity, not structure.\n\n    @param keys - The keys that could be a key in the WeakMap.\n    */\n    hasAnyKeys(...keys) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any key of \\`${JSON.stringify(keys)}\\``,\n            validator: map => keys.some(key => map.has(key))\n        });\n    }\n}\nexports.WeakMapPredicate = WeakMapPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/weak-map.js?");

/***/ }),

/***/ "./node_modules/ow/dist/predicates/weak-set.js":
/*!*****************************************************!*\
  !*** ./node_modules/ow/dist/predicates/weak-set.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WeakSetPredicate = void 0;\nconst has_items_1 = __webpack_require__(/*! ../utils/has-items */ \"./node_modules/ow/dist/utils/has-items.js\");\nconst predicate_1 = __webpack_require__(/*! ./predicate */ \"./node_modules/ow/dist/predicates/predicate.js\");\nclass WeakSetPredicate extends predicate_1.Predicate {\n    /**\n    @hidden\n    */\n    constructor(options) {\n        super('WeakSet', options);\n    }\n    /**\n    Test a WeakSet to include all the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that should be a item in the WeakSet.\n    */\n    has(...items) {\n        return this.addValidator({\n            message: (_, label, missingItems) => `Expected ${label} to have items \\`${JSON.stringify(missingItems)}\\``,\n            validator: set => has_items_1.default(set, items)\n        });\n    }\n    /**\n    Test a WeakSet to include any of the provided items. The items are tested by identity, not structure.\n\n    @param items - The items that could be a item in the WeakSet.\n    */\n    hasAny(...items) {\n        return this.addValidator({\n            message: (_, label) => `Expected ${label} to have any item of \\`${JSON.stringify(items)}\\``,\n            validator: set => items.some(item => set.has(item))\n        });\n    }\n}\nexports.WeakSetPredicate = WeakSetPredicate;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/predicates/weak-set.js?");

/***/ }),

/***/ "./node_modules/ow/dist/test.js":
/*!**************************************!*\
  !*** ./node_modules/ow/dist/test.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_predicate_1 = __webpack_require__(/*! ./predicates/base-predicate */ \"./node_modules/ow/dist/predicates/base-predicate.js\");\n/**\nValidate the value against the provided predicate.\n\n@hidden\n\n@param value - Value to test.\n@param label - Label which should be used in error messages.\n@param predicate - Predicate to test to value against.\n*/\nfunction test(value, label, predicate) {\n    predicate[base_predicate_1.testSymbol](value, test, label);\n}\nexports.default = test;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/test.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/generate-argument-error-message.js":
/*!***********************************************************************!*\
  !*** ./node_modules/ow/dist/utils/generate-argument-error-message.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateArgumentErrorMessage = void 0;\n/**\nGenerates a complete message from all errors generated by predicates.\n\n@param errors - The errors generated by the predicates.\n@param isAny - If this function is called from the any argument.\n@hidden\n*/\nconst generateArgumentErrorMessage = (errors, isAny = false) => {\n    const message = [];\n    const errorArray = [...errors.entries()];\n    const anyErrorWithoutOneItemOnly = errorArray.some(([, array]) => array.size !== 1);\n    // If only one error \"key\" is present, enumerate all of those errors only.\n    if (errorArray.length === 1) {\n        const [, returnedErrors] = errorArray[0];\n        if (!isAny && returnedErrors.size === 1) {\n            const [errorMessage] = returnedErrors;\n            return errorMessage;\n        }\n        for (const entry of returnedErrors) {\n            message.push(`${isAny ? '  - ' : ''}${entry}`);\n        }\n        return message.join('\\n');\n    }\n    // If every predicate returns just one error, enumerate them as is.\n    if (!anyErrorWithoutOneItemOnly) {\n        return errorArray.map(([, [item]]) => `  - ${item}`).join('\\n');\n    }\n    // Else, iterate through all the errors and enumerate them.\n    for (const [key, value] of errorArray) {\n        message.push(`Errors from the \"${key}\" predicate:`);\n        for (const entry of value) {\n            message.push(`  - ${entry}`);\n        }\n    }\n    return message.join('\\n');\n};\nexports.generateArgumentErrorMessage = generateArgumentErrorMessage;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/utils/generate-argument-error-message.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/generate-stack.js":
/*!******************************************************!*\
  !*** ./node_modules/ow/dist/utils/generate-stack.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateStackTrace = void 0;\n/**\nGenerates a useful stacktrace that points to the user's code where the error happened on platforms without the `Error.captureStackTrace()` method.\n\n@hidden\n*/\nconst generateStackTrace = () => {\n    const stack = new RangeError('INTERNAL_OW_ERROR').stack;\n    return stack;\n};\nexports.generateStackTrace = generateStackTrace;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/utils/generate-stack.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/has-items.js":
/*!*************************************************!*\
  !*** ./node_modules/ow/dist/utils/has-items.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\nRetrieve the missing values in a collection based on an array of items.\n\n@hidden\n\n@param source - Source collection to search through.\n@param items - Items to search for.\n@param maxValues - Maximum number of values after the search process is stopped. Default: 5.\n*/\nexports.default = (source, items, maxValues = 5) => {\n    const missingValues = [];\n    for (const value of items) {\n        if (source.has(value)) {\n            continue;\n        }\n        missingValues.push(value);\n        if (missingValues.length === maxValues) {\n            return missingValues;\n        }\n    }\n    return missingValues.length === 0 ? true : missingValues;\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/utils/has-items.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/infer-label.browser.js":
/*!***********************************************************!*\
  !*** ./node_modules/ow/dist/utils/infer-label.browser.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.inferLabel = void 0;\nconst inferLabel = () => { };\nexports.inferLabel = inferLabel;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/utils/infer-label.browser.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/match-shape.js":
/*!***************************************************!*\
  !*** ./node_modules/ow/dist/utils/match-shape.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exact = exports.partial = void 0;\nconst is_1 = __webpack_require__(/*! @sindresorhus/is */ \"./node_modules/@sindresorhus/is/dist/index.js\");\nconst test_1 = __webpack_require__(/*! ../test */ \"./node_modules/ow/dist/test.js\");\nconst base_predicate_1 = __webpack_require__(/*! ../predicates/base-predicate */ \"./node_modules/ow/dist/predicates/base-predicate.js\");\n/**\nTest if the `object` matches the `shape` partially.\n\n@hidden\n\n@param object - Object to test against the provided shape.\n@param shape - Shape to test the object against.\n@param parent - Name of the parent property.\n*/\nfunction partial(object, shape, parent) {\n    try {\n        for (const key of Object.keys(shape)) {\n            const label = parent ? `${parent}.${key}` : key;\n            if (base_predicate_1.isPredicate(shape[key])) {\n                test_1.default(object[key], label, shape[key]);\n            }\n            else if (is_1.default.plainObject(shape[key])) {\n                const result = partial(object[key], shape[key], label);\n                if (result !== true) {\n                    return result;\n                }\n            }\n        }\n        return true;\n    }\n    catch (error) {\n        return error.message;\n    }\n}\nexports.partial = partial;\n/**\nTest if the `object` matches the `shape` exactly.\n\n@hidden\n\n@param object - Object to test against the provided shape.\n@param shape - Shape to test the object against.\n@param parent - Name of the parent property.\n*/\nfunction exact(object, shape, parent, isArray) {\n    try {\n        const objectKeys = new Set(Object.keys(object));\n        for (const key of Object.keys(shape)) {\n            objectKeys.delete(key);\n            const label = parent ? `${parent}.${key}` : key;\n            if (base_predicate_1.isPredicate(shape[key])) {\n                test_1.default(object[key], label, shape[key]);\n            }\n            else if (is_1.default.plainObject(shape[key])) {\n                if (!Object.prototype.hasOwnProperty.call(object, key)) {\n                    return `Expected \\`${label}\\` to exist`;\n                }\n                const result = exact(object[key], shape[key], label);\n                if (result !== true) {\n                    return result;\n                }\n            }\n        }\n        if (objectKeys.size > 0) {\n            const firstKey = [...objectKeys.keys()][0];\n            const label = parent ? `${parent}.${firstKey}` : firstKey;\n            return `Did not expect ${isArray ? 'element' : 'property'} \\`${label}\\` to exist, got \\`${object[firstKey]}\\``;\n        }\n        return true;\n    }\n    catch (error) {\n        return error.message;\n    }\n}\nexports.exact = exact;\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/utils/match-shape.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/of-type-deep.js":
/*!****************************************************!*\
  !*** ./node_modules/ow/dist/utils/of-type-deep.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst is_1 = __webpack_require__(/*! @sindresorhus/is */ \"./node_modules/@sindresorhus/is/dist/index.js\");\nconst __1 = __webpack_require__(/*! .. */ \"./node_modules/ow/dist/index.js\");\nconst ofTypeDeep = (object, predicate) => {\n    if (!is_1.default.plainObject(object)) {\n        __1.default(object, predicate);\n        return true;\n    }\n    return Object.values(object).every(value => ofTypeDeep(value, predicate));\n};\n/**\nTest all the values in the object against a provided predicate.\n\n@hidden\n\n@param predicate - Predicate to test every value in the given object against.\n*/\nexports.default = (object, predicate) => {\n    try {\n        return ofTypeDeep(object, predicate);\n    }\n    catch (error) {\n        return error.message;\n    }\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/utils/of-type-deep.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/of-type.js":
/*!***********************************************!*\
  !*** ./node_modules/ow/dist/utils/of-type.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst __1 = __webpack_require__(/*! .. */ \"./node_modules/ow/dist/index.js\");\n/**\nTest all the values in the collection against a provided predicate.\n\n@hidden\n@param source Source collection to test.\n@param predicate Predicate to test every item in the source collection against.\n*/\nexports.default = (source, predicate) => {\n    try {\n        for (const item of source) {\n            __1.default(item, predicate);\n        }\n        return true;\n    }\n    catch (error) {\n        return error.message;\n    }\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/utils/of-type.js?");

/***/ }),

/***/ "./node_modules/ow/dist/utils/random-id.js":
/*!*************************************************!*\
  !*** ./node_modules/ow/dist/utils/random-id.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = () => Math.random().toString(16).slice(2);\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/ow/dist/utils/random-id.js?");

/***/ }),

/***/ "./node_modules/path-browserify/index.js":
/*!***********************************************!*\
  !*** ./node_modules/path-browserify/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/mock/process.js */ \"./node_modules/node-libs-browser/mock/process.js\")))\n\n//# sourceURL=webpack://ApifyClient/./node_modules/path-browserify/index.js?");

/***/ }),

/***/ "./node_modules/retry/index.js":
/*!*************************************!*\
  !*** ./node_modules/retry/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/retry */ \"./node_modules/retry/lib/retry.js\");\n\n//# sourceURL=webpack://ApifyClient/./node_modules/retry/index.js?");

/***/ }),

/***/ "./node_modules/retry/lib/retry.js":
/*!*****************************************!*\
  !*** ./node_modules/retry/lib/retry.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var RetryOperation = __webpack_require__(/*! ./retry_operation */ \"./node_modules/retry/lib/retry_operation.js\");\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/retry/lib/retry.js?");

/***/ }),

/***/ "./node_modules/retry/lib/retry_operation.js":
/*!***************************************************!*\
  !*** ./node_modules/retry/lib/retry_operation.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/retry/lib/retry_operation.js?");

/***/ }),

/***/ "./node_modules/vali-date/index.js":
/*!*****************************************!*\
  !*** ./node_modules/vali-date/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nmodule.exports = function (str) {\n\treturn !isNaN(Date.parse(str));\n};\n\n\n//# sourceURL=webpack://ApifyClient/./node_modules/vali-date/index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack://ApifyClient/(webpack)/buildin/module.js?");

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! exports provided: name, version, description, main, keywords, author, contributors, license, repository, bugs, homepage, files, browser, scripts, dependencies, devDependencies, default */
/***/ (function(module) {

eval("module.exports = JSON.parse(\"{\\\"name\\\":\\\"apify-client\\\",\\\"version\\\":\\\"1.4.2\\\",\\\"description\\\":\\\"Apify API client for JavaScript\\\",\\\"main\\\":\\\"src/index.js\\\",\\\"keywords\\\":[\\\"apify\\\",\\\"api\\\",\\\"apifier\\\",\\\"crawler\\\",\\\"scraper\\\"],\\\"author\\\":{\\\"name\\\":\\\"Apify\\\",\\\"email\\\":\\\"support@apify.com\\\",\\\"url\\\":\\\"https://apify.com\\\"},\\\"contributors\\\":[\\\"Jan Curn <jan@apify.com>\\\",\\\"Marek Trunkát <marek@apify.com>\\\",\\\"Ondra Urban <ondra@apify.com>\\\",\\\"Jakub Drobník <jakub.drobnik@apify.com>\\\"],\\\"license\\\":\\\"Apache-2.0\\\",\\\"repository\\\":{\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"git+https://github.com/apifytech/apify-client-js\\\"},\\\"bugs\\\":{\\\"url\\\":\\\"https://github.com/apifytech/apify-client-js/issues\\\"},\\\"homepage\\\":\\\"https://apify.com/docs/sdk/apify-client-js/latest\\\",\\\"files\\\":[\\\"src\\\",\\\"dist\\\"],\\\"browser\\\":{\\\"agentkeepalive\\\":false,\\\"fs\\\":false,\\\"os\\\":false,\\\"stream\\\":false,\\\"util\\\":false,\\\"zlib\\\":false},\\\"scripts\\\":{\\\"build\\\":\\\"npm run clean && npm run build-browser\\\",\\\"build-docs\\\":\\\"npm run build-toc && node docs/build_docs.js\\\",\\\"build-toc\\\":\\\"markdown-toc docs/README.hbs -i\\\",\\\"test\\\":\\\"npm run build && jest\\\",\\\"prepare\\\":\\\"npm run build\\\",\\\"prepublishOnly\\\":\\\"(test $CI || (echo \\\\\\\"Publishing is reserved to CI!\\\\\\\"; exit 1))\\\",\\\"clean\\\":\\\"rm -rf dist\\\",\\\"lint\\\":\\\"eslint src test\\\",\\\"lint:fix\\\":\\\"eslint --fix src test\\\",\\\"build-browser\\\":\\\"webpack\\\"},\\\"dependencies\\\":{\\\"@apify/consts\\\":\\\"^1.0.0\\\",\\\"@apify/log\\\":\\\"^1.0.0\\\",\\\"agentkeepalive\\\":\\\"^4.1.3\\\",\\\"async-retry\\\":\\\"^1.3.1\\\",\\\"axios\\\":\\\"^0.21.1\\\",\\\"content-type\\\":\\\"^1.0.4\\\",\\\"ow\\\":\\\"^0.23.0\\\"},\\\"devDependencies\\\":{\\\"@apify/eslint-config\\\":\\\"^0.1.2\\\",\\\"@babel/cli\\\":\\\"^7.11.6\\\",\\\"@babel/core\\\":\\\"^7.11.6\\\",\\\"@babel/preset-env\\\":\\\"^7.11.5\\\",\\\"@babel/register\\\":\\\"^7.11.5\\\",\\\"@types/express\\\":\\\"^4.17.8\\\",\\\"@types/fs-extra\\\":\\\"^9.0.4\\\",\\\"@types/jest\\\":\\\"^26.0.14\\\",\\\"@types/node\\\":\\\"^14.11.5\\\",\\\"apify\\\":\\\"^1.0.0\\\",\\\"babel-loader\\\":\\\"^8.1.0\\\",\\\"body-parser\\\":\\\"^1.19.0\\\",\\\"brotli-webpack-plugin\\\":\\\"^1.1.0\\\",\\\"compression\\\":\\\"^1.7.4\\\",\\\"eslint\\\":\\\"^7.10.0\\\",\\\"express\\\":\\\"^4.17.1\\\",\\\"fs-extra\\\":\\\"^9.0.1\\\",\\\"jest\\\":\\\"^26.5.0\\\",\\\"jsdoc-to-markdown\\\":\\\"^6.0.1\\\",\\\"markdown-toc\\\":\\\"^1.2.0\\\",\\\"morgan\\\":\\\"^1.10.0\\\",\\\"puppeteer\\\":\\\"^5.5.0\\\",\\\"webpack\\\":\\\"^4.44.2\\\",\\\"webpack-cli\\\":\\\"^3.3.12\\\"}}\");\n\n//# sourceURL=webpack://ApifyClient/./package.json?");

/***/ }),

/***/ "./src/apify_api_error.js":
/*!********************************!*\
  !*** ./src/apify_api_error.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Examples of capturing groups for \"...at ActorCollectionClient._list (/Users/...\"\n * 0: \"at ActorCollectionClient._list (\"\n * 1: undefined\n * 2: \"ActorCollectionClient\"\n * 3: undefined\n * 4: \"list\"\n * @type {RegExp}\n * @private\n */\nconst CLIENT_METHOD_REGEX = /at( async)? ([A-Za-z]+(Collection)?Client)\\._?([A-Za-z]+) \\(/;\n/**\n * An `ApifyApiError` is thrown for successful HTTP requests that reach the API,\n * but the API responds with an error response. Typically, those are rate limit\n * errors and internal errors, which are automatically retried, or validation\n * errors, which are thrown immediately, because a correction by the user is\n * needed.\n *\n * @property {string} message\n *  Error message returned by the API.\n * @property {string} clientMethod\n *  The invoked resource client and the method. Known issue: Sometimes it displays\n *  as undefined because it can't be parsed from a stack trace.\n * @property {number} statusCode\n *  HTTP status code of the error.\n * @property {string} type\n *  The type of the error, as returned by the API.\n * @property {number} attempt\n *  Number of the API call attempt.\n * @property {string} httpMethod\n *  HTTP method of the API call.\n * @property {string} path\n *  Full path of the API endpoint (URL excluding origin).\n * @property {string} originalStack\n *  Original stack trace of the exception. It is replaced\n *  by a more informative stack with API call information.\n * @hideconstructor\n */\n\nclass ApifyApiError extends Error {\n  /**\n   * @param {AxiosResponse} response\n   * @param {number} attempt\n   */\n  constructor(response, attempt) {\n    let message;\n    let type;\n\n    if (response.data && response.data.error) {\n      const {\n        error\n      } = response.data;\n      message = error.message;\n      type = error.type;\n    } else if (response.data) {\n      let dataString;\n\n      try {\n        dataString = JSON.stringify(response.data, null, 2);\n      } catch (err) {\n        dataString = `${response.data}`;\n      }\n\n      message = `Unexpected error: ${dataString}`;\n    }\n\n    super(message);\n    this.name = this.constructor.name;\n    this.clientMethod = this._extractClientAndMethodFromStack();\n    this.statusCode = response.status;\n    this.type = type;\n    this.attempt = attempt;\n    this.httpMethod = response.config && response.config.method;\n    this.path = this._safelyParsePathFromResponse(response);\n    this.originalStack = this.stack.slice(this.stack.indexOf('\\n'));\n    this.stack = this._createApiStack();\n  }\n  /**\n   * @param {AxiosResponse} response\n   * @return {string}\n   * @private\n   */\n\n\n  _safelyParsePathFromResponse(response) {\n    const urlString = response.config && response.config.url;\n    let url;\n\n    try {\n      url = new URL(urlString);\n    } catch (err) {\n      return urlString;\n    }\n\n    return url.pathname + url.search;\n  }\n  /**\n   * @return {string}\n   * @private\n   */\n\n\n  _extractClientAndMethodFromStack() {\n    const match = this.stack.match(CLIENT_METHOD_REGEX);\n    if (match) return `${match[2]}.${match[4]}`;\n  }\n  /**\n   * Creates a better looking and more informative stack that will be printed\n   * out when API errors are thrown.\n   *\n   * Example:\n   *\n   * ApifyApiError: Actor task was not found\n   *   clientMethod: TaskClient.start\n   *   statusCode: 404\n   *   type: record-not-found\n   *   attempt: 1\n   *   httpMethod: post\n   *   path: /v2/actor-tasks/user~my-task/runs\n   *\n   * @return {string}\n   * @private\n   */\n\n\n  _createApiStack() {\n    const {\n      name,\n      ...props\n    } = this;\n    const stack = Object.entries(props).map(([k, v]) => {\n      // Rename originalStack to stack in the stack itself.\n      // This is for better readability of errors in log.\n      if (k === 'originalStack') k = 'stack';\n      return `  ${k}: ${v}`;\n    }).join('\\n');\n    return `${name}: ${this.message}\\n${stack}`;\n  }\n\n}\n\nmodule.exports = ApifyApiError;\n\n//# sourceURL=webpack://ApifyClient/./src/apify_api_error.js?");

/***/ }),

/***/ "./src/base/api_client.js":
/*!********************************!*\
  !*** ./src/base/api_client.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * @typedef ApiClientOptions\n * @property {object} options\n * @property {string} options.baseUrl\n * @property {string} options.resourcePath\n * @property {ApifyClient} options.apifyClient\n * @property {HttpClient} options.httpClient\n * @property {string} [options.id]\n * @property {object} [options.params]\n * @private\n */\n\n/**\n * @private\n */\nclass ApiClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    const {\n      baseUrl,\n      apifyClient,\n      httpClient,\n      resourcePath,\n      id,\n      params = {}\n    } = options;\n    this.id = id;\n    this.safeId = id && this._toSafeId(id);\n    this.baseUrl = baseUrl;\n    this.resourcePath = resourcePath;\n    this.url = id ? `${baseUrl}/${resourcePath}/${this.safeId}` : `${baseUrl}/${resourcePath}`;\n    this.apifyClient = apifyClient;\n    this.httpClient = httpClient;\n    this.params = params;\n  }\n  /**\n   * @param {object} [moreOptions]\n   * @return object\n   * @private\n   */\n\n\n  _subResourceOptions(moreOptions) {\n    const baseOptions = {\n      baseUrl: this._url(),\n      apifyClient: this.apifyClient,\n      httpClient: this.httpClient,\n      params: this._params()\n    };\n    return { ...baseOptions,\n      ...moreOptions\n    };\n  }\n  /**\n   * @param {string} [path]\n   * @returns {string}\n   * @private\n   */\n\n\n  _url(path) {\n    return path ? `${this.url}/${path}` : this.url;\n  }\n  /**\n   * @param {object} [endpointParams]\n   * @returns {object}\n   * @private\n   */\n\n\n  _params(endpointParams) {\n    return { ...this.params,\n      ...endpointParams\n    };\n  }\n  /**\n   * @param {string} id\n   * @return {string}\n   * @private\n   */\n\n\n  _toSafeId(id) {\n    return id.replace('/', '~');\n  }\n\n}\n\nmodule.exports = ApiClient;\n\n//# sourceURL=webpack://ApifyClient/./src/base/api_client.js?");

/***/ }),

/***/ "./src/base/resource_client.js":
/*!*************************************!*\
  !*** ./src/base/resource_client.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const {\n  ACT_JOB_TERMINAL_STATUSES\n} = __webpack_require__(/*! @apify/consts */ \"./node_modules/@apify/consts/index.js\");\n\nconst ApiClient = __webpack_require__(/*! ./api_client */ \"./src/base/api_client.js\");\n\nconst {\n  pluckData,\n  parseDateFields,\n  catchNotFoundOrThrow\n} = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/**\n * We need to supply some number for the API,\n * because it would not accept \"Infinity\".\n * 999999 seconds is more than 10 days.\n * @type {number}\n */\n\n\nconst MAX_WAIT_FOR_FINISH = 999999;\n/**\n * Resource client.\n *\n * @param {ApiClientOptions} options\n * @private\n */\n\nclass ResourceClient extends ApiClient {\n  /**\n   * @param {object} [options]\n   * @return {Promise<?object>}\n   * @private\n   */\n  async _get(options = {}) {\n    const requestOpts = {\n      url: this._url(),\n      method: 'GET',\n      params: this._params(options)\n    };\n\n    try {\n      const response = await this.httpClient.call(requestOpts);\n      return parseDateFields(pluckData(response.data));\n    } catch (err) {\n      return catchNotFoundOrThrow(err);\n    }\n  }\n  /**\n   * @return {Promise<object>}\n   * @private\n   */\n\n\n  async _update(newFields) {\n    const response = await this.httpClient.call({\n      url: this._url(),\n      method: 'PUT',\n      params: this._params(),\n      data: newFields\n    });\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * @return {Promise<void>}\n   * @private\n   */\n\n\n  async _delete() {\n    try {\n      await this.httpClient.call({\n        url: this._url(),\n        method: 'DELETE',\n        params: this._params()\n      });\n    } catch (err) {\n      return catchNotFoundOrThrow(err);\n    }\n  }\n  /**\n   * This function is used in Build and Run endpoints so it's kept\n   * here to stay DRY.\n   *\n   * @param {object} [options]\n   * @param {number} [options.waitSecs]\n   * @returns {Promise<object>}\n   * @private\n   */\n\n\n  async _waitForFinish(options = {}) {\n    const {\n      waitSecs = MAX_WAIT_FOR_FINISH\n    } = options;\n    const waitMillis = waitSecs * 1000;\n    let job;\n    const startedAt = Date.now();\n\n    const shouldRepeat = () => {\n      const millisSinceStart = Date.now() - startedAt;\n      if (millisSinceStart >= waitMillis) return false;\n      const hasJobEnded = job && ACT_JOB_TERMINAL_STATUSES.includes(job.status);\n      return !hasJobEnded;\n    };\n\n    do {\n      const millisSinceStart = Date.now() - startedAt;\n      const remainingWaitSeconds = Math.round((waitMillis - millisSinceStart) / 1000);\n      const waitForFinish = Math.max(0, remainingWaitSeconds);\n      const requestOpts = {\n        url: this._url(),\n        method: 'GET',\n        params: this._params({\n          waitForFinish\n        })\n      };\n\n      try {\n        const response = await this.httpClient.call(requestOpts);\n        job = parseDateFields(pluckData(response.data));\n      } catch (err) {\n        job = catchNotFoundOrThrow(err);\n      } // It might take some time for database replicas to get up-to-date,\n      // so getRun() might return null. Wait a little bit and try it again.\n\n\n      if (!job) await new Promise(resolve => setTimeout(resolve, 250));\n    } while (shouldRepeat());\n\n    if (!job) {\n      const jobName = this.constructor.name.match(/(\\w+)Client/)[1].toLowerCase();\n      throw new Error(`Waiting for ${jobName} to finish failed. Cannot fetch actor ${jobName} details from the server.`);\n    }\n\n    return job;\n  }\n\n}\n\nmodule.exports = ResourceClient;\n\n//# sourceURL=webpack://ApifyClient/./src/base/resource_client.js?");

/***/ }),

/***/ "./src/base/resource_collection_client.js":
/*!************************************************!*\
  !*** ./src/base/resource_collection_client.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ApiClient = __webpack_require__(/*! ./api_client */ \"./src/base/api_client.js\");\n\nconst {\n  pluckData,\n  parseDateFields\n} = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/**\n * Resource collection client.\n * @param {ApiClientOptions} options\n * @private\n */\n\n\nclass ResourceCollectionClient extends ApiClient {\n  /**\n   * @param {object} [options]\n   * @return {Promise<object>}\n   * @private\n   */\n  async _list(options = {}) {\n    const response = await this.httpClient.call({\n      url: this._url(),\n      method: 'GET',\n      params: this._params(options)\n    });\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * @param {object} resource\n   * @return {Promise<object>}\n   * @private\n   */\n\n\n  async _create(resource) {\n    const response = await this.httpClient.call({\n      url: this._url(),\n      method: 'POST',\n      params: this._params(),\n      data: resource\n    });\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * @param {string} [name]\n   * @return {Promise<object>}\n   * @private\n   */\n\n\n  async _getOrCreate(name = '') {\n    // The default value of '' allows creating unnamed\n    // resources by passing the name= parameter with\n    // no value. It's useful and later will be supported\n    // in API properly by omitting the name= param entirely.\n    const response = await this.httpClient.call({\n      url: this._url(),\n      method: 'POST',\n      params: this._params({\n        name\n      })\n    });\n    return parseDateFields(pluckData(response.data));\n  }\n\n}\n\nmodule.exports = ResourceCollectionClient;\n\n//# sourceURL=webpack://ApifyClient/./src/base/resource_collection_client.js?");

/***/ }),

/***/ "./src/body_parser.js":
/*!****************************!*\
  !*** ./src/body_parser.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const contentTypeParser = __webpack_require__(/*! content-type */ \"./node_modules/content-type/index.js\");\n\nconst {\n  isNode\n} = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\nconst CONTENT_TYPE_JSON = 'application/json';\nconst STRINGIFIABLE_CONTENT_TYPE_RXS = [new RegExp(`^${CONTENT_TYPE_JSON}`, 'i'), /^application\\/.*xml$/i, /^text\\//i];\n/**\n * Parses a Buffer or ArrayBuffer using the provided content type header.\n *\n * - application/json is returned as a parsed object.\n * - application/*xml and text/* are returned as strings.\n * - everything else is returned as original body.\n *\n * If the header includes a charset, the body will be stringified only\n * if the charset represents a known encoding to Node.js or Browser.\n *\n * @param {Buffer|ArrayBuffer} body\n * @param {string} contentTypeHeader\n * @return {string|Object|Buffer|ArrayBuffer}\n */\n\nexports.maybeParseBody = (body, contentTypeHeader) => {\n  let contentType;\n  let charset;\n\n  try {\n    const result = contentTypeParser.parse(contentTypeHeader);\n    contentType = result.type;\n    charset = result.parameters.charset;\n  } catch (err) {\n    // can't parse, keep original body\n    return body;\n  } // If we can't successfully parse it, we return\n  // the original buffer rather than a mangled string.\n\n\n  if (!areDataStringifiable(contentType, charset)) return body;\n  const dataString = isomorphicBufferToString(body, charset);\n  return contentType === CONTENT_TYPE_JSON ? JSON.parse(dataString) : dataString;\n};\n/**\n * @param {Buffer|ArrayBuffer} buffer\n * @param {string} encoding\n * @return {string}\n */\n\n\nfunction isomorphicBufferToString(buffer, encoding) {\n  if (buffer.constructor.name !== ArrayBuffer.name) {\n    return buffer.toString(encoding);\n  } // Browser decoding only works with UTF-8.\n\n\n  const utf8decoder = new TextDecoder();\n  return utf8decoder.decode(new Uint8Array(buffer));\n}\n/**\n * @param {string} charset\n * @return {boolean}\n */\n\n\nfunction isCharsetStringifiable(charset) {\n  if (!charset) return true; // hope that it's utf-8\n\n  if (isNode()) return Buffer.isEncoding(charset);\n  const normalizedCharset = charset.toLowerCase().replace('-', ''); // Browsers only support decoding utf-8 buffers.\n\n  return normalizedCharset === 'utf8';\n}\n/**\n * @param {string} contentType\n * @return {boolean}\n */\n\n\nfunction isContentTypeStringifiable(contentType) {\n  if (!contentType) return false; // keep buffer\n\n  return STRINGIFIABLE_CONTENT_TYPE_RXS.some(rx => rx.test(contentType));\n}\n/**\n * @param {string} contentType\n * @param {string} charset\n * @return {boolean}\n */\n\n\nfunction areDataStringifiable(contentType, charset) {\n  return isContentTypeStringifiable(contentType) && isCharsetStringifiable(charset);\n}\n\n//# sourceURL=webpack://ApifyClient/./src/body_parser.js?");

/***/ }),

/***/ "./src/http_client.js":
/*!****************************!*\
  !*** ./src/http_client.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {const retry = __webpack_require__(/*! async-retry */ \"./node_modules/async-retry/lib/index.js\");\n\nconst axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\").default;\n\nconst KeepAliveAgent = __webpack_require__(/*! agentkeepalive */ 0);\n\nconst os = __webpack_require__(/*! os */ 1);\n\nconst ApifyApiError = __webpack_require__(/*! ./apify_api_error */ \"./src/apify_api_error.js\");\n\nconst {\n  InvalidResponseBodyError,\n  requestInterceptors,\n  responseInterceptors\n} = __webpack_require__(/*! ./interceptors */ \"./src/interceptors.js\");\n\nconst {\n  isNode\n} = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\nconst {\n  version\n} = __webpack_require__(/*! ../package.json */ \"./package.json\");\n\nconst RATE_LIMIT_EXCEEDED_STATUS_CODE = 429;\n\nclass HttpClient {\n  /**\n   * @param {object} options\n   * @param {object} options.apifyClientStats\n   * @param {number} options.maxRetries\n   * @param {number} options.minDelayBetweenRetriesMillis\n   * @param {function[]} options.requestInterceptors\n   * @param {number} options.timeoutSecs\n   * @param {object} options.logger\n   * @param {string} [options.token]\n   */\n  constructor(options) {\n    const {\n      token\n    } = options;\n    this.stats = options.apifyClientStats;\n    this.maxRetries = options.maxRetries;\n    this.minDelayBetwenRetriesMillis = options.minDelayBetweenRetriesMillis;\n    this.userProvidedRequestInterceptors = options.requestInterceptors;\n    this.timeoutMillis = options.timeoutSecs * 1000;\n    this.logger = options.logger;\n    this._onRequestRetry = this._onRequestRetry.bind(this);\n\n    if (isNode()) {\n      // We want to keep sockets alive for better performance.\n      // It's important to set the user's timeout also here and not only\n      // on the axios instance, because even though this timeout\n      // is for inactive sockets, sometimes the platform would take\n      // long to process requests and the socket would time-out\n      // while waiting for the response.\n      const agentOpts = {\n        timeout: this.timeoutMillis\n      };\n      this.httpAgent = new KeepAliveAgent(agentOpts);\n      this.httpsAgent = new KeepAliveAgent.HttpsAgent(agentOpts);\n    }\n\n    this.axios = axios.create({\n      headers: {\n        Accept: 'application/json, */*'\n      },\n      httpAgent: this.httpAgent,\n      httpsAgent: this.httpsAgent,\n      paramsSerializer: params => {\n        const formattedParams = Object.entries(params).filter(([, value]) => value !== undefined).map(([key, value]) => {\n          const updatedValue = typeof value === 'boolean' ? Number(value) : value;\n          return [key, updatedValue];\n        });\n        return new URLSearchParams(formattedParams);\n      },\n      validateStatus: null,\n      // Using interceptors for this functionality.\n      transformRequest: null,\n      transformResponse: null,\n      responseType: 'arraybuffer',\n      timeout: this.timeoutMillis,\n      // maxBodyLength needs to be Infinity, because -1 falls back to a 10 MB default\n      // from an axios subdependency - 'follow-redirects'\n      maxBodyLength: Infinity,\n      // maxContentLength must be -1, because Infinity will cause axios to run super slow\n      // thanks to a bug that's now fixed, but not released yet https://github.com/axios/axios/pull/3738\n      maxContentLength: -1\n    }); // Clean all default headers because they only make a mess\n    // and their merging is difficult to understand and buggy.\n\n    this.axios.defaults.headers = {};\n\n    if (isNode()) {\n      // Works only in Node. Cannot be set in browser\n      const userAgent = `ApifyClient/${version} (${os.type()}; Node/${process.version}); isAtHome/${!!process.env.IS_AT_HOME}`;\n      this.axios.defaults.headers['User-Agent'] = userAgent;\n    } // Attach Authorization header for all requests if token was provided\n\n\n    if (token) {\n      this.axios.defaults.headers.Authorization = `Bearer ${token}`;\n    }\n\n    requestInterceptors.forEach(i => this.axios.interceptors.request.use(i));\n    this.userProvidedRequestInterceptors.forEach(i => this.axios.interceptors.request.use(i));\n    responseInterceptors.forEach(i => this.axios.interceptors.response.use(i));\n  }\n  /**\n   * @param {object} config\n   * @return {Promise<*>}\n   */\n\n\n  async call(config) {\n    this.stats.calls++;\n\n    const makeRequest = this._createRequestHandler(config);\n\n    return retry(makeRequest, {\n      retries: this.maxRetries,\n      minTimeout: this.minDelayBetwenRetriesMillis,\n      onRetry: this._onRequestRetry\n    });\n  }\n  /**\n   * Successful responses are returned, errors and unsuccessful\n   * status codes are retried. See the following functions for the\n   * retrying logic.\n   * @param {object} config\n   * @return {function}\n   * @private\n   */\n\n\n  _createRequestHandler(config) {\n    /**\n     * @param {function} stopTrying\n     * @param {number} attempt\n     * @return {?Promise<AxiosResponse<any>>}\n     * @private\n     */\n    const makeRequest = async (stopTrying, attempt) => {\n      this.stats.requests++;\n      let response;\n\n      try {\n        response = await this.axios.request(config);\n        if (this._isStatusOk(response.status)) return response;\n      } catch (err) {\n        return this._handleRequestError(err, config, stopTrying);\n      }\n\n      if (response.status === RATE_LIMIT_EXCEEDED_STATUS_CODE) {\n        this.stats.addRateLimitError(attempt);\n      }\n\n      const apiError = new ApifyApiError(response, attempt);\n\n      if (this._isStatusCodeRetryable(response.status)) {\n        throw apiError;\n      } else {\n        return stopTrying(apiError);\n      }\n    };\n\n    return makeRequest;\n  }\n  /**\n   * @param {number} statusCode\n   * @return {boolean}\n   * @private\n   */\n\n\n  _isStatusOk(statusCode) {\n    return statusCode < 300;\n  }\n  /**\n   * Handles all unexpected errors that can happen, but are not\n   * Apify API typed errors. E.g. network errors, timeouts and so on.\n   * @param {Error} err\n   * @param {object} config\n   * @param {function} stopTrying\n   * @private\n   */\n\n\n  _handleRequestError(err, config, stopTrying) {\n    if (this._isTimeoutError(err) && config.doNotRetryTimeouts) {\n      return stopTrying(err);\n    }\n\n    if (this._isRetryableError(err)) {\n      throw err;\n    } else {\n      return stopTrying(err);\n    }\n  }\n  /**\n   * Axios calls req.abort() on timeouts so timeout errors will\n   * have a code ECONNABORTED.\n   * @param {Error} err\n   * @private\n   */\n\n\n  _isTimeoutError(err) {\n    return err.code === 'ECONNABORTED';\n  }\n  /**\n   * We don't want to retry every exception thrown from Axios.\n   * The common denominator for retryable errors are network issues.\n   * @param {Error} err\n   * @private\n   */\n\n\n  _isRetryableError(err) {\n    return this._isNetworkError(err) || this._isResponseBodyInvalid(err);\n  }\n  /**\n   * When a network connection to our API is interrupted in the middle of streaming\n   * a response, the request often does not fail, but simply contains\n   * an incomplete response. This can often be fixed by retrying.\n   * @param {Error} err\n   * @return {boolean}\n   * @private\n   */\n\n\n  _isResponseBodyInvalid(err) {\n    return err instanceof InvalidResponseBodyError;\n  }\n  /**\n   * When a network request is attempted by axios and fails,\n   * it throws an AxiosError, which will have the request\n   * and config (and other) properties.\n   * @param {Error} err\n   * @return {boolean}\n   * @private\n   */\n\n\n  _isNetworkError(err) {\n    const hasRequest = err.request && typeof err.request === 'object';\n    const hasConfig = err.config && typeof err.config === 'object';\n    return hasRequest && hasConfig;\n  }\n  /**\n   * We retry 429 (rate limit) and 500+.\n   * For status codes 300-499 (except 429) we do not retry the request,\n   * because it's probably caused by invalid url (redirect 3xx) or invalid user input (4xx).\n   * @param {number} statusCode\n   * @return {boolean}\n   * @private\n   */\n\n\n  _isStatusCodeRetryable(statusCode) {\n    const isRateLimitError = statusCode === RATE_LIMIT_EXCEEDED_STATUS_CODE;\n    const isInternalError = statusCode >= 500;\n    return isRateLimitError || isInternalError;\n  }\n  /**\n   * @param {ApifyApiError} error\n   * @param {number} attempt\n   * @private\n   */\n\n\n  _onRequestRetry(error, attempt) {\n    if (attempt === Math.round(this.maxRetries / 2)) {\n      this.logger.warning(`API request failed ${attempt} times. Max attempts: ${this.maxRetries + 1}.\\nCause:${error.stack}`);\n    }\n  }\n\n}\n\nmodule.exports = HttpClient;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/node-libs-browser/mock/process.js */ \"./node_modules/node-libs-browser/mock/process.js\")))\n\n//# sourceURL=webpack://ApifyClient/./src/http_client.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst {\n  ME_USER_NAME_PLACEHOLDER\n} = __webpack_require__(/*! @apify/consts */ \"./node_modules/@apify/consts/index.js\");\n\nconst {\n  default: logger\n} = __webpack_require__(/*! @apify/log */ \"./node_modules/@apify/log/index.js\");\n\nconst HttpClient = __webpack_require__(/*! ./http_client */ \"./src/http_client.js\");\n\nconst Statistics = __webpack_require__(/*! ./statistics */ \"./src/statistics.js\");\n\nconst ActorClient = __webpack_require__(/*! ./resource_clients/actor */ \"./src/resource_clients/actor.js\");\n\nconst ActorCollectionClient = __webpack_require__(/*! ./resource_clients/actor_collection */ \"./src/resource_clients/actor_collection.js\");\n\nconst BuildClient = __webpack_require__(/*! ./resource_clients/build */ \"./src/resource_clients/build.js\"); // const BuildCollectionClient = require('./resource_clients/build_collection');\n\n\nconst DatasetClient = __webpack_require__(/*! ./resource_clients/dataset */ \"./src/resource_clients/dataset.js\");\n\nconst DatasetCollectionClient = __webpack_require__(/*! ./resource_clients/dataset_collection */ \"./src/resource_clients/dataset_collection.js\");\n\nconst KeyValueStoreClient = __webpack_require__(/*! ./resource_clients/key_value_store */ \"./src/resource_clients/key_value_store.js\");\n\nconst KeyValueStoreCollectionClient = __webpack_require__(/*! ./resource_clients/key_value_store_collection */ \"./src/resource_clients/key_value_store_collection.js\");\n\nconst LogClient = __webpack_require__(/*! ./resource_clients/log */ \"./src/resource_clients/log.js\");\n\nconst RequestQueueClient = __webpack_require__(/*! ./resource_clients/request_queue */ \"./src/resource_clients/request_queue.js\");\n\nconst RequestQueueCollectionClient = __webpack_require__(/*! ./resource_clients/request_queue_collection */ \"./src/resource_clients/request_queue_collection.js\");\n\nconst RunClient = __webpack_require__(/*! ./resource_clients/run */ \"./src/resource_clients/run.js\"); // const RunCollectionClient = require('./resource_clients/run_collection');\n\n\nconst ScheduleClient = __webpack_require__(/*! ./resource_clients/schedule */ \"./src/resource_clients/schedule.js\");\n\nconst ScheduleCollectionClient = __webpack_require__(/*! ./resource_clients/schedule_collection */ \"./src/resource_clients/schedule_collection.js\");\n\nconst TaskClient = __webpack_require__(/*! ./resource_clients/task */ \"./src/resource_clients/task.js\");\n\nconst TaskCollectionClient = __webpack_require__(/*! ./resource_clients/task_collection */ \"./src/resource_clients/task_collection.js\");\n\nconst UserClient = __webpack_require__(/*! ./resource_clients/user */ \"./src/resource_clients/user.js\");\n\nconst WebhookClient = __webpack_require__(/*! ./resource_clients/webhook */ \"./src/resource_clients/webhook.js\");\n\nconst WebhookCollectionClient = __webpack_require__(/*! ./resource_clients/webhook_collection */ \"./src/resource_clients/webhook_collection.js\");\n\nconst WebhookDispatchClient = __webpack_require__(/*! ./resource_clients/webhook_dispatch */ \"./src/resource_clients/webhook_dispatch.js\");\n\nconst WebhookDispatchCollectionClient = __webpack_require__(/*! ./resource_clients/webhook_dispatch_collection */ \"./src/resource_clients/webhook_dispatch_collection.js\");\n/**\n * ApifyClient is the official library to access [Apify API](https://docs.apify.com/api/v2) from your\n * JavaScript applications. It runs both in Node.js and browser.\n *\n * @param {object} [options]\n * @param {string} [options.baseUrl=https://api.apify.com]\n * @param {number} [options.maxRetries=8]\n * @param {number} [options.minDelayBetweenRetriesMillis=500]\n * @param {function[]} [options.requestInterceptors]\n * @param {number} [options.timeoutSecs]\n * @param {string} [options.token]\n */\n\n\nclass ApifyClient {\n  constructor(options = {}) {\n    ow(options, ow.object.exactShape({\n      baseUrl: ow.optional.string,\n      maxRetries: ow.optional.number,\n      minDelayBetweenRetriesMillis: ow.optional.number,\n      requestInterceptors: ow.optional.array,\n      timeoutSecs: ow.optional.number,\n      token: ow.optional.string\n    }));\n    const {\n      baseUrl = 'https://api.apify.com',\n      maxRetries = 8,\n      minDelayBetweenRetriesMillis = 500,\n      requestInterceptors = [],\n      timeoutSecs = 360,\n      token\n    } = options;\n    const tempBaseUrl = baseUrl.endsWith('/') ? baseUrl.slice(0, baseUrl.length - 1) : baseUrl;\n    this.baseUrl = `${tempBaseUrl}/v2`;\n    this.token = token;\n    this.stats = new Statistics();\n    this.logger = logger.child({\n      prefix: 'ApifyClient'\n    });\n    this.httpClient = new HttpClient({\n      apifyClientStats: this.stats,\n      maxRetries,\n      minDelayBetweenRetriesMillis,\n      requestInterceptors,\n      timeoutSecs,\n      logger: this.logger,\n      token: this.token\n    });\n  }\n  /**\n   * @return {{httpClient: HttpClient, apifyClient: ApifyClient, baseUrl: string}}\n   * @private\n   */\n\n\n  _options() {\n    return {\n      baseUrl: this.baseUrl,\n      apifyClient: this,\n      httpClient: this.httpClient\n    };\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/actor-collection\n   * @return {ActorCollectionClient}\n   */\n\n\n  actors() {\n    return new ActorCollectionClient(this._options());\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/actor-object\n   * @param {string} id\n   * @return {ActorClient}\n   */\n\n\n  actor(id) {\n    ow(id, ow.string.nonEmpty);\n    return new ActorClient({\n      id,\n      ...this._options()\n    });\n  } // TODO we don't have this endpoint yet\n  // /**\n  //  * @return {BuildCollectionClient}\n  //  */\n  // builds() {\n  //     return new BuildCollectionClient(this._options());\n  // }\n\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-builds/build-object\n   * @param {string} id\n   * @return {BuildClient}\n   */\n\n\n  build(id) {\n    ow(id, ow.string.nonEmpty);\n    return new BuildClient({\n      id,\n      ...this._options()\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/datasets/dataset-collection\n   * @return {DatasetCollectionClient}\n   */\n\n\n  datasets() {\n    return new DatasetCollectionClient(this._options());\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/datasets/dataset\n   * @param {string} id\n   * @return {DatasetClient}\n   */\n\n\n  dataset(id) {\n    ow(id, ow.string.nonEmpty);\n    return new DatasetClient({\n      id,\n      ...this._options()\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/key-value-stores/store-collection\n   * @return {KeyValueStoreCollectionClient}\n   */\n\n\n  keyValueStores() {\n    return new KeyValueStoreCollectionClient(this._options());\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/key-value-stores/store-object\n   * @param {string} id\n   * @return {KeyValueStoreClient}\n   */\n\n\n  keyValueStore(id) {\n    ow(id, ow.string.nonEmpty);\n    return new KeyValueStoreClient({\n      id,\n      ...this._options()\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/logs\n   * @param {string} buildOrRunId\n   * @return {LogClient}\n   */\n\n\n  log(buildOrRunId) {\n    ow(buildOrRunId, ow.string.nonEmpty);\n    return new LogClient({\n      id: buildOrRunId,\n      ...this._options()\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/request-queues/queue-collection\n   * @return {RequestQueueCollection}\n   */\n\n\n  requestQueues() {\n    return new RequestQueueCollectionClient(this._options());\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/request-queues/queue\n   * @param {string} id\n   * @param {object} [options]\n   * @param {object} [options.clientKey]\n   * @return {RequestQueueClient}\n   */\n\n\n  requestQueue(id, options = {}) {\n    ow(id, ow.string.nonEmpty);\n    ow(options, ow.object.exactShape({\n      clientKey: ow.optional.string.nonEmpty\n    }));\n    const apiClientOptions = {\n      id,\n      ...this._options()\n    };\n    return new RequestQueueClient(apiClientOptions, options);\n  } // TODO we don't have this endpoint yet\n  // /**\n  //  * @return {RunCollectionClient}\n  //  */\n  // runs() {\n  //     return new RunCollectionClient(this._options());\n  // }\n\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-runs/run-object-and-its-storages\n   * @param {string} id\n   * @return {RunClient}\n   */\n\n\n  run(id) {\n    ow(id, ow.string.nonEmpty);\n    return new RunClient({\n      id,\n      ...this._options()\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/task-collection\n   * @return {TaskCollectionClient}\n   */\n\n\n  tasks() {\n    return new TaskCollectionClient(this._options());\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/task-object\n   * @param {string} id\n   * @return {TaskClient}\n   */\n\n\n  task(id) {\n    ow(id, ow.string.nonEmpty);\n    return new TaskClient({\n      id,\n      ...this._options()\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/schedules/schedules-collection\n   * @return {ScheduleCollectionClient}\n   */\n\n\n  schedules() {\n    return new ScheduleCollectionClient(this._options());\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/schedules/schedule-object\n   * @param {string} id\n   * @return {ScheduleClient}\n   */\n\n\n  schedule(id) {\n    ow(id, ow.string.nonEmpty);\n    return new ScheduleClient({\n      id,\n      ...this._options()\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/users\n   * @param {string} id\n   * @return {UserClient}\n   */\n\n\n  user(id = ME_USER_NAME_PLACEHOLDER) {\n    ow(id, ow.string.nonEmpty);\n    return new UserClient({\n      id,\n      ...this._options()\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhooks/webhook-collection\n   * @return {WebhookCollectionClient}\n   */\n\n\n  webhooks() {\n    return new WebhookCollectionClient(this._options());\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhooks/webhook-object\n   * @param {string} id\n   * @return {WebhookClient}\n   */\n\n\n  webhook(id) {\n    ow(id, ow.string.nonEmpty);\n    return new WebhookClient({\n      id,\n      ...this._options()\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhook-dispatches\n   * @return {WebhookDispatchCollectionClient}\n   */\n\n\n  webhookDispatches() {\n    return new WebhookDispatchCollectionClient(this._options());\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhook-dispatches/webhook-dispatch-object\n   * @param {string} id\n   * @return {WebhookDispatchClient}\n   */\n\n\n  webhookDispatch(id) {\n    ow(id, ow.string.nonEmpty);\n    return new WebhookDispatchClient({\n      id,\n      ...this._options()\n    });\n  }\n\n}\n\nmodule.exports = ApifyClient;\n\n//# sourceURL=webpack://ApifyClient/./src/index.js?");

/***/ }),

/***/ "./src/interceptors.js":
/*!*****************************!*\
  !*** ./src/interceptors.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nconst contentTypeParser = __webpack_require__(/*! content-type */ \"./node_modules/content-type/index.js\");\n\nconst {\n  maybeParseBody\n} = __webpack_require__(/*! ./body_parser */ \"./src/body_parser.js\");\n\nconst {\n  isNode,\n  maybeGzipValue\n} = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/**\n * This error exists for the quite common situation, where only a partial JSON response is received and\n * an attempt to parse the JSON throws an error. In most cases this can be resolved by retrying the\n * request. We do that by identifying this error in HttpClient.\n *\n * The properties mimic AxiosError for easier integration in HttpClient error handling.\n */\n\n\nclass InvalidResponseBodyError extends Error {\n  constructor(response, cause) {\n    super(`Response body could not be parsed.\\nCause:${cause.message}`);\n    this.name = this.constructor.name;\n    this.code = 'invalid-response-body';\n    this.response = response;\n    this.cause = cause;\n  }\n\n}\n/**\n * @param {object} config\n * @return {object}\n */\n\n\nfunction serializeRequest(config) {\n  const [defaultTransform] = axios.defaults.transformRequest; // The function not only serializes data, but it also adds correct headers.\n\n  const data = defaultTransform(config.data, config.headers); // Actor inputs can include functions and we don't want to omit those,\n  // because it's convenient for users. JSON.stringify removes them.\n  // It's a bit inefficient that we serialize the JSON twice, but I feel\n  // it's a small price to pay. The axios default transform does a lot\n  // of body type checks and we would have to copy all of them to the resource clients.\n\n  if (config.stringifyFunctions) {\n    const contentTypeHeader = config.headers['Content-Type'] || config.headers['content-type'];\n\n    try {\n      const {\n        type\n      } = contentTypeParser.parse(contentTypeHeader);\n\n      if (type === 'application/json' && typeof config.data === 'object') {\n        config.data = stringifyWithFunctions(config.data);\n      } else {\n        config.data = data;\n      }\n    } catch (err) {\n      config.data = data;\n    }\n  } else {\n    config.data = data;\n  }\n\n  return config;\n}\n/**\n * JSON.stringify() that serializes functions to string instead\n * of replacing them with null or removing them.\n * @param {object} obj\n * @return {string}\n */\n\n\nfunction stringifyWithFunctions(obj) {\n  return JSON.stringify(obj, (key, value) => {\n    return typeof value === 'function' ? value.toString() : value;\n  });\n}\n/**\n * @param {object} config\n * @return {Promise<object>}\n */\n\n\nasync function maybeGzipRequest(config) {\n  if (config.headers['content-encoding']) return config;\n  const maybeZippedData = await maybeGzipValue(config.data);\n\n  if (maybeZippedData) {\n    config.headers['content-encoding'] = 'gzip';\n    config.data = maybeZippedData;\n  }\n\n  return config;\n}\n/**\n * @param {AxiosResponse} response\n * @return {AxiosResponse}\n */\n\n\nfunction parseResponseData(response) {\n  if (!response.data // Nothing to do here.\n  || response.config.responseType !== 'arraybuffer' // We don't want to parse custom response types.\n  || response.config.forceBuffer // Apify custom property to prevent parsing of buffer.\n  ) {\n    return response;\n  }\n\n  const isBufferEmpty = isNode() ? !response.data.length : !response.data.byteLength;\n\n  if (isBufferEmpty) {\n    // undefined is better than an empty buffer\n    response.data = undefined;\n    return response;\n  }\n\n  const contentTypeHeader = response.headers['content-type'];\n\n  try {\n    response.data = maybeParseBody(response.data, contentTypeHeader);\n  } catch (err) {\n    throw new InvalidResponseBodyError(response, err);\n  }\n\n  return response;\n}\n\nconst requestInterceptors = [maybeGzipRequest, serializeRequest];\nconst responseInterceptors = [parseResponseData];\nmodule.exports = {\n  InvalidResponseBodyError,\n  requestInterceptors,\n  responseInterceptors\n};\n\n//# sourceURL=webpack://ApifyClient/./src/interceptors.js?");

/***/ }),

/***/ "./src/resource_clients/actor.js":
/*!***************************************!*\
  !*** ./src/resource_clients/actor.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const {\n  ACT_JOB_STATUSES\n} = __webpack_require__(/*! @apify/consts */ \"./node_modules/@apify/consts/index.js\");\n\nconst ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ActorVersionClient = __webpack_require__(/*! ./actor_version */ \"./src/resource_clients/actor_version.js\");\n\nconst ActorVersionCollectionClient = __webpack_require__(/*! ./actor_version_collection */ \"./src/resource_clients/actor_version_collection.js\");\n\nconst BuildCollectionClient = __webpack_require__(/*! ./build_collection */ \"./src/resource_clients/build_collection.js\");\n\nconst RunClient = __webpack_require__(/*! ./run */ \"./src/resource_clients/run.js\");\n\nconst RunCollectionClient = __webpack_require__(/*! ./run_collection */ \"./src/resource_clients/run_collection.js\");\n\nconst WebhookCollectionClient = __webpack_require__(/*! ./webhook_collection */ \"./src/resource_clients/webhook_collection.js\");\n\nconst ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n\nconst {\n  pluckData,\n  parseDateFields,\n  stringifyWebhooksToBase64\n} = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/**\n * @hideconstructor\n */\n\n\nclass ActorClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'acts',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/actor-object/get-actor\n   * @return {Promise<?Actor>}\n   */\n\n\n  async get() {\n    return this._get();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/actor-object/update-actor\n   * @param {object} newFields\n   * @return {Promise<Actor>}\n   */\n\n\n  async update(newFields) {\n    ow(newFields, ow.object);\n    return this._update(newFields);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/actor-object/delete-actor\n   * @return {Promise<void>}\n   */\n\n\n  async delete() {\n    return this._delete();\n  }\n  /**\n   * Starts an actor and immediately returns the Run object.\n   * https://docs.apify.com/api/v2#/reference/actors/run-collection/run-actor\n   * @param {*} [input]\n   * @param {object} [options]\n   * @param {string} [options.build]\n   * @param {string} [options.contentType]\n   * @param {number} [options.memory]\n   * @param {number} [options.timeout]\n   * @param {number} [options.waitForFinish]\n   * @param {object[]} [options.webhooks]\n   * @return {Promise<Run>}\n   */\n\n\n  async start(input, options = {}) {\n    // input can be anything, pointless to validate\n    ow(options, ow.object.exactShape({\n      build: ow.optional.string,\n      contentType: ow.optional.string,\n      memory: ow.optional.number,\n      timeout: ow.optional.number,\n      waitForFinish: ow.optional.number,\n      webhooks: ow.optional.array.ofType(ow.object)\n    }));\n    const {\n      waitForFinish,\n      timeout,\n      memory,\n      build\n    } = options;\n    const params = {\n      waitForFinish,\n      timeout,\n      memory,\n      build,\n      webhooks: stringifyWebhooksToBase64(options.webhooks)\n    };\n    const request = {\n      url: this._url('runs'),\n      method: 'POST',\n      data: input,\n      params: this._params(params),\n      // Apify internal property. Tells the request serialization interceptor\n      // to stringify functions to JSON, instead of omitting them.\n      stringifyFunctions: true\n    };\n\n    if (options.contentType) {\n      request.headers = {\n        'content-type': options.contentType\n      };\n    }\n\n    const response = await this.httpClient.call(request);\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * Starts an actor and waits for it to finish before returning the Run object.\n   * It waits indefinitely, unless the `waitSecs` option is provided.\n   * https://docs.apify.com/api/v2#/reference/actors/run-collection/run-actor\n   * @param {*} [input]\n   * @param {object} [options]\n   * @param {string} [options.build]\n   * @param {string} [options.contentType]\n   * @param {number} [options.memory]\n   * @param {number} [options.timeout]\n   * @param {number} [options.waitSecs]\n   * @param {object[]} [options.webhooks]\n   * @return {Promise<Run>}\n   */\n\n\n  async call(input, options = {}) {\n    // input can be anything, pointless to validate\n    ow(options, ow.object.exactShape({\n      build: ow.optional.string,\n      contentType: ow.optional.string,\n      memory: ow.optional.number,\n      timeout: ow.optional.number.not.negative,\n      waitSecs: ow.optional.number.not.negative,\n      webhooks: ow.optional.array.ofType(ow.object)\n    }));\n    const {\n      waitSecs,\n      ...startOptions\n    } = options;\n    const {\n      id\n    } = await this.start(input, startOptions); // Calling root client because we need access to top level API.\n    // Creating a new instance of RunClient here would only allow\n    // setting it up as a nested route under actor API.\n\n    return this.apifyClient.run(id).waitForFinish({\n      waitSecs\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/build-collection/build-actor\n   * @param {string} versionNumber\n   * @param {object} [options]\n   * @param {boolean} [options.betaPackages]\n   * @param {string} [options.tag]\n   * @param {boolean} [options.useCache]\n   * @param {number} [options.waitForFinish]\n   * @return {Promise<Build>}\n   */\n\n\n  async build(versionNumber, options = {}) {\n    ow(versionNumber, ow.string);\n    ow(options, ow.object.exactShape({\n      betaPackages: ow.optional.boolean,\n      tag: ow.optional.string,\n      useCache: ow.optional.boolean,\n      waitForFinish: ow.optional.number\n    }));\n    const response = await this.httpClient.call({\n      url: this._url('builds'),\n      method: 'POST',\n      params: this._params({\n        version: versionNumber,\n        ...options\n      })\n    });\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/last-run-object-and-its-storages\n   * @param {object} [options]\n   * @param {string} [options.status]\n   * @return {RunClient}\n   */\n\n\n  lastRun(options = {}) {\n    ow(options, ow.object.exactShape({\n      status: ow.optional.string.oneOf(Object.values(ACT_JOB_STATUSES))\n    }));\n    return new RunClient(this._subResourceOptions({\n      id: 'last',\n      params: this._params(options),\n      resourcePath: 'runs'\n    }));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/build-collection\n   * @return {BuildCollectionClient}\n   */\n\n\n  builds() {\n    return new BuildCollectionClient(this._subResourceOptions({\n      resourcePath: 'builds'\n    }));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/run-collection\n   * @return {RunCollectionClient}\n   */\n\n\n  runs() {\n    return new RunCollectionClient(this._subResourceOptions({\n      resourcePath: 'runs'\n    }));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/version-object\n   * @param {string} versionNumber\n   * @return {ActorVersionClient}\n   */\n\n\n  version(versionNumber) {\n    ow(versionNumber, ow.string);\n    return new ActorVersionClient(this._subResourceOptions({\n      id: versionNumber\n    }));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/version-collection\n   * @return {ActorVersionCollectionClient}\n   */\n\n\n  versions() {\n    return new ActorVersionCollectionClient(this._subResourceOptions());\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/webhook-collection\n   * @return {WebhookCollectionClient}\n   */\n\n\n  webhooks() {\n    return new WebhookCollectionClient(this._subResourceOptions());\n  }\n\n}\n\nmodule.exports = ActorClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/actor.js?");

/***/ }),

/***/ "./src/resource_clients/actor_collection.js":
/*!**************************************************!*\
  !*** ./src/resource_clients/actor_collection.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceCollectionClient = __webpack_require__(/*! ../base/resource_collection_client */ \"./src/base/resource_collection_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass ActorCollectionClient extends ResourceCollectionClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'acts',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/actor-collection/get-list-of-actors\n   * @param {object} [options]\n   * @param {boolean} [options.my]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.desc]\n   * @return {Promise<PaginationList>}\n   */\n\n\n  async list(options = {}) {\n    ow(options, ow.object.exactShape({\n      my: ow.optional.boolean,\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      desc: ow.optional.boolean\n    }));\n    return this._list(options);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/actor-collection/create-actor\n   * @param {object} [actor]\n   * @return {Promise<Actor>}\n   */\n\n\n  async create(actor) {\n    ow(actor, ow.optional.object);\n    return this._create(actor);\n  }\n\n}\n\nmodule.exports = ActorCollectionClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/actor_collection.js?");

/***/ }),

/***/ "./src/resource_clients/actor_version.js":
/*!***********************************************!*\
  !*** ./src/resource_clients/actor_version.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass ActorVersionClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'versions',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/version-object/get-version\n   * @return {Promise<ActorVersion>}\n   */\n\n\n  async get() {\n    return this._get();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/version-object/update-version\n   * @param {object} newFields\n   * @return {Promise<ActorVersion>}\n   */\n\n\n  async update(newFields) {\n    ow(newFields, ow.object);\n    return this._update(newFields);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/version-object/delete-version\n   * @return {Promise<void>}\n   */\n\n\n  async delete() {\n    return this._delete();\n  }\n\n}\n\nmodule.exports = ActorVersionClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/actor_version.js?");

/***/ }),

/***/ "./src/resource_clients/actor_version_collection.js":
/*!**********************************************************!*\
  !*** ./src/resource_clients/actor_version_collection.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceCollectionClient = __webpack_require__(/*! ../base/resource_collection_client */ \"./src/base/resource_collection_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass ActorVersionCollectionClient extends ResourceCollectionClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'versions',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/version-collection/get-list-of-versions\n   * @param {object} [options]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.desc]\n   * @return {Promise<PaginationList>}\n   */\n\n\n  async list(options = {}) {\n    ow(options, ow.object.exactShape({\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      desc: ow.optional.boolean\n    }));\n    return this._list(options);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/version-collection/create-version\n   * @param {object} [actorVersion]\n   * @return {Promise<object>}\n   */\n\n\n  async create(actorVersion) {\n    ow(actorVersion, ow.optional.object);\n    return this._create(actorVersion);\n  }\n\n}\n\nmodule.exports = ActorVersionCollectionClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/actor_version_collection.js?");

/***/ }),

/***/ "./src/resource_clients/build.js":
/*!***************************************!*\
  !*** ./src/resource_clients/build.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n\nconst {\n  pluckData,\n  parseDateFields\n} = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/**\n * @hideconstructor\n */\n\n\nclass BuildClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'actor-builds',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-builds/build-object/get-build\n   * @param {object} [options]\n   * @param {number} [options.waitForFinish]\n   * @return {Promise<Build>}\n   */\n\n\n  async get(options = {}) {\n    ow(options, ow.object.exactShape({\n      waitForFinish: ow.optional.number\n    }));\n    return this._get(options);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-builds/abort-build/abort-build\n   * @return {Promise<Build>}\n   */\n\n\n  async abort() {\n    const response = await this.httpClient.call({\n      url: this._url('abort'),\n      method: 'POST',\n      params: this._params()\n    });\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * Returns a promise that resolves with the finished Build object when the provided actor build finishes\n   * or with the unfinished Build object when the `waitSecs` timeout lapses. The promise is NOT rejected\n   * based on run status. You can inspect the `status` property of the Build object to find out its status.\n   *\n   * The difference between this function and the `waitForFinish` parameter of the `get` method\n   * is the fact that this function can wait indefinitely. Its use is preferable to the\n   * `waitForFinish` parameter alone, which it uses internally.\n   *\n   * This is useful when you need to immediately start a run after a build finishes.\n   *\n   * @param {object} [options]\n   * @param {number} [options.waitSecs]\n   *  Maximum time to wait for the build to finish, in seconds.\n   *  If the limit is reached, the returned promise is resolved to a build object that will have\n   *  status `READY` or `RUNNING`. If `waitSecs` omitted, the function waits indefinitely.\n   * @returns {Promise<Build>}\n   */\n\n\n  async waitForFinish(options = {}) {\n    ow(options, ow.object.exactShape({\n      waitSecs: ow.optional.number\n    }));\n    return this._waitForFinish(options);\n  }\n\n}\n\nmodule.exports = BuildClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/build.js?");

/***/ }),

/***/ "./src/resource_clients/build_collection.js":
/*!**************************************************!*\
  !*** ./src/resource_clients/build_collection.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceCollectionClient = __webpack_require__(/*! ../base/resource_collection_client */ \"./src/base/resource_collection_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass BuildCollectionClient extends ResourceCollectionClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: options.resourcePath || 'actor-builds',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/build-collection/get-list-of-builds\n   * @param {object} [options]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.desc]\n   * @return {Promise<PaginationList>}\n   */\n\n\n  async list(options = {}) {\n    ow(options, ow.object.exactShape({\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      desc: ow.optional.boolean\n    }));\n    return this._list(options);\n  }\n\n}\n\nmodule.exports = BuildCollectionClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/build_collection.js?");

/***/ }),

/***/ "./src/resource_clients/dataset.js":
/*!*****************************************!*\
  !*** ./src/resource_clients/dataset.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass DatasetClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'datasets',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/datasets/dataset/get-dataset\n   * @return {Promise<Dataset>}\n   */\n\n\n  async get() {\n    return this._get();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/datasets/dataset/update-dataset\n   * @param {object} newFields\n   * @return {Promise<Dataset>}\n   */\n\n\n  async update(newFields) {\n    ow(newFields, ow.object);\n    return this._update(newFields);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/datasets/dataset/delete-dataset\n   * @return {Promise<void>}\n   */\n\n\n  async delete() {\n    return this._delete();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/datasets/item-collection/get-items\n   * @param {object} [options]\n   * @param {boolean} [options.clean]\n   * @param {boolean} [options.desc]\n   * @param {string[]} [options.fields]\n   * @param {string[]} [options.omit]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.skipEmpty]\n   * @param {boolean} [options.skipHidden]\n   * @param {string} [options.unwind]\n   * @return {Promise<PaginationList>}\n   */\n\n\n  async listItems(options = {}) {\n    ow(options, ow.object.exactShape({\n      clean: ow.optional.boolean,\n      desc: ow.optional.boolean,\n      fields: ow.optional.array.ofType(ow.string),\n      omit: ow.optional.array.ofType(ow.string),\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      skipEmpty: ow.optional.boolean,\n      skipHidden: ow.optional.boolean,\n      unwind: ow.optional.string\n    }));\n    const response = await this.httpClient.call({\n      url: this._url('items'),\n      method: 'GET',\n      params: this._params(options)\n    });\n    return this._createPaginationList(response);\n  }\n  /**\n   * Unlike `listItems` which returns a {@link PaginationList} with an array of individual\n   * dataset items, `downloadItems` returns the items serialized to the provided format.\n   * https://docs.apify.com/api/v2#/reference/datasets/item-collection/get-items\n   * @param {string} format\n   *  One of json, jsonl, xml, html, csv, xlsx, rss\n   * @param {object} [options]\n   * @param {boolean} [options.attachment]\n   * @param {boolean} [options.bom]\n   * @param {boolean} [options.clean]\n   * @param {string} [options.delimiter]\n   * @param {boolean} [options.desc]\n   * @param {string[]} [options.fields]\n   * @param {string[]} [options.omit]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.skipEmpty]\n   * @param {boolean} [options.skipHeaderRow]\n   * @param {boolean} [options.skipHidden]\n   * @param {string} [options.unwind]\n   * @param {string} [options.xmlRoot]\n   * @param {string} [options.xmlRow]\n   * @return {Promise<Buffer>}\n   */\n\n\n  async downloadItems(format, options = {}) {\n    ow(format, ow.string.oneOf(['json', 'jsonl', 'xml', 'html', 'csv', 'xlsx', 'rss']));\n    ow(options, ow.object.exactShape({\n      attachment: ow.optional.boolean,\n      bom: ow.optional.boolean,\n      clean: ow.optional.boolean,\n      delimiter: ow.optional.string,\n      desc: ow.optional.boolean,\n      fields: ow.optional.array.ofType(ow.string),\n      omit: ow.optional.array.ofType(ow.string),\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      skipEmpty: ow.optional.boolean,\n      skipHeaderRow: ow.optional.boolean,\n      skipHidden: ow.optional.boolean,\n      unwind: ow.optional.string,\n      xmlRoot: ow.optional.string,\n      xmlRow: ow.optional.string\n    }));\n    const {\n      data\n    } = await this.httpClient.call({\n      url: this._url('items'),\n      method: 'GET',\n      params: this._params({\n        format,\n        ...options\n      }),\n      forceBuffer: true\n    });\n    return data;\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/datasets/item-collection/put-items\n   * @param {object|string|Array<object|string>} items\n   * @return {Promise<void>}\n   */\n\n\n  async pushItems(items) {\n    ow(items, ow.any(ow.object, ow.string, ow.array.ofType(ow.any(ow.object, ow.string))));\n    await this.httpClient.call({\n      url: this._url('items'),\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json; charset=utf-8'\n      },\n      data: items,\n      params: this._params(),\n      doNotRetryTimeouts: true // see timeout handling in http-client\n\n    });\n  }\n  /**\n   * @param response\n   * @return {PaginationList}\n   * @private\n   */\n\n\n  _createPaginationList(response) {\n    return {\n      items: response.data,\n      total: Number(response.headers['x-apify-pagination-total']),\n      offset: Number(response.headers['x-apify-pagination-offset']),\n      count: response.data.length,\n      // because x-apify-pagination-count returns invalid values when hidden/empty items are skipped\n      limit: Number(response.headers['x-apify-pagination-limit']) // API returns 999999999999 when no limit is used\n\n    };\n  }\n\n}\n\nmodule.exports = DatasetClient;\n/**\n * @typedef {object} PaginationList\n * @property {object[]} items - List of returned objects\n * @property {number} total - Total number of objects\n * @property {number} offset - Number of objects that were skipped\n * @property {number} count - Number of returned objects\n * @property {number} limit - Requested limit\n */\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/dataset.js?");

/***/ }),

/***/ "./src/resource_clients/dataset_collection.js":
/*!****************************************************!*\
  !*** ./src/resource_clients/dataset_collection.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceCollectionClient = __webpack_require__(/*! ../base/resource_collection_client */ \"./src/base/resource_collection_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass DatasetCollectionClient extends ResourceCollectionClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'datasets',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/datasets/dataset-collection/get-list-of-datasets\n   * @param {object} [options]\n   * @param {boolean} [options.unnamed]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.desc]\n   * @return {Promise<PaginationList>}\n   */\n\n\n  async list(options = {}) {\n    ow(options, ow.object.exactShape({\n      unnamed: ow.optional.boolean,\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      desc: ow.optional.boolean\n    }));\n    return this._list(options);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/datasets/dataset-collection/create-dataset\n   * @param {string} [name]\n   * @return {Promise<object>}\n   */\n\n\n  async getOrCreate(name) {\n    ow(name, ow.optional.string);\n    return this._getOrCreate(name);\n  }\n\n}\n\nmodule.exports = DatasetCollectionClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/dataset_collection.js?");

/***/ }),

/***/ "./src/resource_clients/key_value_store.js":
/*!*************************************************!*\
  !*** ./src/resource_clients/key_value_store.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst {\n  default: log\n} = __webpack_require__(/*! @apify/log */ \"./node_modules/@apify/log/index.js\");\n\nconst ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n\nconst {\n  isBuffer,\n  isStream\n} = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n\nconst {\n  pluckData,\n  parseDateFields,\n  catchNotFoundOrThrow,\n  isNode\n} = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/**\n * @hideconstructor\n */\n\n\nclass KeyValueStoreClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'key-value-stores',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/key-value-stores/store-object/get-store\n   * @return {Promise<KeyValueStore>}\n   */\n\n\n  async get() {\n    return this._get();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/key-value-stores/store-object/update-store\n   * @param {object} newFields\n   * @return {Promise<KeyValueStore>}\n   */\n\n\n  async update(newFields) {\n    ow(newFields, ow.object);\n    return this._update(newFields);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/key-value-stores/store-object/delete-store\n   * @return {Promise<void>}\n   */\n\n\n  async delete() {\n    return this._delete();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/key-value-stores/key-collection/get-list-of-keys\n   * @param {object} [options]\n   * @param {object} [options.limit]\n   * @param {string} [options.exclusiveStartKey]\n   * @return {Promise<object>}\n   */\n\n\n  async listKeys(options = {}) {\n    ow(options, ow.object.exactShape({\n      limit: ow.optional.number,\n      exclusiveStartKey: ow.optional.string\n    }));\n    const response = await this.httpClient.call({\n      url: this._url('keys'),\n      method: 'GET',\n      params: this._params(options)\n    });\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * You can use the `buffer` option to get the value in a Buffer (Node.js)\n   * or ArrayBuffer (browser) format. In Node.js (not in browser) you can also\n   * use the `stream` option to get a Readable stream.\n   *\n   * When the record does not exist, the function resolves to `undefined`. It does\n   * NOT resolve to a `KeyValueStore` record with an `undefined` value.\n   * https://docs.apify.com/api/v2#/reference/key-value-stores/record/get-record\n   * @param {string} key\n   * @param {object} [options]\n   * @param {boolean} [options.buffer]\n   * @param {boolean} [options.stream]\n   * @return {Promise<KeyValueStoreRecord | undefined>}\n   */\n\n\n  async getRecord(key, options = {}) {\n    ow(key, ow.string);\n    ow(options, ow.object.exactShape({\n      buffer: ow.optional.boolean,\n      stream: ow.optional.boolean,\n      disableRedirect: ow.optional.boolean\n    }));\n\n    if (options.stream && !isNode()) {\n      throw new Error('The stream option can only be used in Node.js environment.');\n    }\n\n    if ('disableRedirect' in options) {\n      log.deprecated('The disableRedirect option for getRecord() is deprecated. ' + 'It has no effect and will be removed in the following major release.');\n    }\n\n    const requestOpts = {\n      url: this._url(`records/${key}`),\n      method: 'GET',\n      params: this._params()\n    };\n    if (options.buffer) requestOpts.forceBuffer = true;\n    if (options.stream) requestOpts.responseType = 'stream';\n\n    try {\n      const response = await this.httpClient.call(requestOpts);\n      return {\n        key,\n        value: response.data,\n        contentType: response.headers['content-type']\n      };\n    } catch (err) {\n      return catchNotFoundOrThrow(err);\n    }\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/key-value-stores/record/put-record\n   * @param {KeyValueStoreRecord} record\n   * @return {Promise<void>}\n   */\n\n\n  async setRecord(record) {\n    ow(record, ow.object.exactShape({\n      key: ow.string,\n      value: ow.any(ow.null, ow.string, ow.number, ow.object),\n      contentType: ow.optional.string.nonEmpty\n    }));\n    const {\n      key\n    } = record;\n    let {\n      value,\n      contentType\n    } = record;\n    const isValueStreamOrBuffer = isStream(value) || isBuffer(value); // To allow saving Objects to JSON without providing content type\n\n    if (!contentType) {\n      if (isValueStreamOrBuffer) contentType = 'application/octet-stream';else if (typeof value === 'string') contentType = 'text/plain; charset=utf-8';else contentType = 'application/json; charset=utf-8';\n    }\n\n    const isContentTypeJson = /^application\\/json/.test(contentType);\n\n    if (isContentTypeJson && !isValueStreamOrBuffer && typeof value !== 'string') {\n      try {\n        value = JSON.stringify(value, null, 2);\n      } catch (err) {\n        const msg = `The record value cannot be stringified to JSON. Please provide other content type.\\nCause: ${err.message}`;\n        throw new Error(msg);\n      }\n    }\n\n    const uploadOpts = {\n      url: this._url(`records/${key}`),\n      method: 'PUT',\n      params: this._params(),\n      data: value,\n      headers: contentType && {\n        'content-type': contentType\n      }\n    };\n    await this.httpClient.call(uploadOpts);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/key-value-stores/record/delete-record\n   * @param {string} key\n   * @return {Promise<void>}\n   */\n\n\n  async deleteRecord(key) {\n    ow(key, ow.string);\n    await this.httpClient.call({\n      url: this._url(`records/${key}`),\n      method: 'DELETE',\n      params: this._params()\n    });\n  }\n\n}\n\nmodule.exports = KeyValueStoreClient;\n/**\n * @typedef {object} KeyValueStoreRecord\n * @property {string} key\n * @property {null|string|number|object} value\n * @property {string} [contentType]\n */\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/key_value_store.js?");

/***/ }),

/***/ "./src/resource_clients/key_value_store_collection.js":
/*!************************************************************!*\
  !*** ./src/resource_clients/key_value_store_collection.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceCollectionClient = __webpack_require__(/*! ../base/resource_collection_client */ \"./src/base/resource_collection_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass KeyValueStoreCollectionClient extends ResourceCollectionClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'key-value-stores',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/key-value-stores/store-collection/get-list-of-key-value-stores\n   * @param {object} [options]\n   * @param {boolean} [options.unnamed]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.desc]\n   * @return {Promise<PaginationList>}\n   */\n\n\n  async list(options = {}) {\n    ow(options, ow.object.exactShape({\n      unnamed: ow.optional.boolean,\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      desc: ow.optional.boolean\n    }));\n    return this._list(options);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/key-value-stores/store-collection/create-key-value-store\n   * @param {string} [name]\n   * @return {Promise<object>}\n   */\n\n\n  async getOrCreate(name) {\n    ow(name, ow.optional.string);\n    return this._getOrCreate(name);\n  }\n\n}\n\nmodule.exports = KeyValueStoreCollectionClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/key_value_store_collection.js?");

/***/ }),

/***/ "./src/resource_clients/log.js":
/*!*************************************!*\
  !*** ./src/resource_clients/log.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n\nconst {\n  catchNotFoundOrThrow\n} = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/**\n * @hideconstructor\n */\n\n\nclass LogClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'logs',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/logs/log/get-log\n   * @return {Promise<?string>}\n   */\n\n\n  async get() {\n    const requestOpts = {\n      url: this._url(),\n      method: 'GET',\n      params: this._params()\n    };\n\n    try {\n      const response = await this.httpClient.call(requestOpts);\n      return response.data;\n    } catch (err) {\n      return catchNotFoundOrThrow(err);\n    }\n  }\n  /**\n   * Gets the log in a Readable stream format. Only works in Node.js.\n   * https://docs.apify.com/api/v2#/reference/logs/log/get-log\n   * @return {Promise<?Readable>}\n   */\n\n\n  async stream() {\n    const params = {\n      stream: true\n    };\n    const requestOpts = {\n      url: this._url(),\n      method: 'GET',\n      params: this._params(params),\n      responseType: 'stream'\n    };\n\n    try {\n      const response = await this.httpClient.call(requestOpts);\n      return response.data;\n    } catch (err) {\n      return catchNotFoundOrThrow(err);\n    }\n  }\n\n}\n\nmodule.exports = LogClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/log.js?");

/***/ }),

/***/ "./src/resource_clients/request_queue.js":
/*!***********************************************!*\
  !*** ./src/resource_clients/request_queue.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n\nconst {\n  pluckData,\n  parseDateFields,\n  catchNotFoundOrThrow\n} = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/**\n * @hideconstructor\n */\n\n\nclass RequestQueueClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   * @param {object} [userOptions]\n   * @param {string} [userOptions.clientKey]\n   */\n  constructor(options, userOptions = {}) {\n    super({\n      resourcePath: 'request-queues',\n      ...options\n    });\n    this.clientKey = userOptions.clientKey;\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/request-queues/queue/get-request-queue\n   * @return {Promise<RequestQueue>}\n   */\n\n\n  async get() {\n    return this._get();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/request-queues/queue/update-request-queue\n   * @param {object} newFields\n   * @return {Promise<RequestQueue>}\n   */\n\n\n  async update(newFields) {\n    ow(newFields, ow.object);\n    return this._update(newFields);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/request-queues/queue/delete-request-queue\n   * @return {Promise<void>}\n   */\n\n\n  async delete() {\n    return this._delete();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/request-queues/queue-head/get-head\n   * @param {object} [options]\n   * @param {number} [options.limit]\n   * @return {Promise<object>}\n   */\n\n\n  async listHead(options = {}) {\n    ow(options, ow.object.exactShape({\n      limit: ow.optional.number\n    }));\n    const response = await this.httpClient.call({\n      url: this._url('head'),\n      method: 'GET',\n      params: this._params({\n        limit: options.limit,\n        clientKey: this.clientKey\n      })\n    });\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/request-queues/request-collection/add-request\n   * @param {object} request\n   * @param {object} [options]\n   * @param {boolean} [options.forefront]\n   * @return {Promise<object>}\n   */\n\n\n  async addRequest(request, options = {}) {\n    ow(request, ow.object.partialShape({\n      id: ow.undefined\n    }));\n    ow(options, ow.object.exactShape({\n      forefront: ow.optional.boolean\n    }));\n    const response = await this.httpClient.call({\n      url: this._url('requests'),\n      method: 'POST',\n      data: request,\n      params: this._params({\n        forefront: options.forefront,\n        clientKey: this.clientKey\n      })\n    });\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/request-queues/request/get-request\n   * @param {string} id\n   * @return {Promise<?object>}\n   */\n\n\n  async getRequest(id) {\n    ow(id, ow.string);\n    const requestOpts = {\n      url: this._url(`requests/${id}`),\n      method: 'GET',\n      params: this._params()\n    };\n\n    try {\n      const response = await this.httpClient.call(requestOpts);\n      return parseDateFields(pluckData(response.data));\n    } catch (err) {\n      return catchNotFoundOrThrow(err);\n    }\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/request-queues/request/update-request\n   * @param {object} request\n   * @param {object} [options]\n   * @param {boolean} [options.forefront]\n   * @return {Promise<*>}\n   */\n\n\n  async updateRequest(request, options = {}) {\n    ow(request, ow.object.partialShape({\n      id: ow.string\n    }));\n    ow(options, ow.object.exactShape({\n      forefront: ow.optional.boolean\n    }));\n    const response = await this.httpClient.call({\n      url: this._url(`requests/${request.id}`),\n      method: 'PUT',\n      data: request,\n      params: this._params({\n        forefront: options.forefront,\n        clientKey: this.clientKey\n      })\n    });\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * @param {string} id\n   * @return {Promise<void>}\n   */\n\n\n  async deleteRequest(id) {\n    ow(id, ow.string);\n    await this.httpClient.call({\n      url: this._url(`requests/${id}`),\n      method: 'DELETE',\n      params: this._params({\n        clientKey: this.clientKey\n      })\n    });\n  }\n\n}\n\nmodule.exports = RequestQueueClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/request_queue.js?");

/***/ }),

/***/ "./src/resource_clients/request_queue_collection.js":
/*!**********************************************************!*\
  !*** ./src/resource_clients/request_queue_collection.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceCollectionClient = __webpack_require__(/*! ../base/resource_collection_client */ \"./src/base/resource_collection_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass RequestQueueCollection extends ResourceCollectionClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'request-queues',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/request-queues/queue-collection/get-list-of-request-queues\n   * @param {object} [options]\n   * @param {boolean} [options.unnamed]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.desc]\n   * @return {Promise<PaginationList>}\n   */\n\n\n  async list(options = {}) {\n    ow(options, ow.object.exactShape({\n      unnamed: ow.optional.boolean,\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      desc: ow.optional.boolean\n    }));\n    return this._list(options);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/request-queues/queue-collection/create-request-queue\n   * @param {string} [name]\n   * @return {Promise<RequestQueue>}\n   */\n\n\n  async getOrCreate(name) {\n    ow(name, ow.optional.string);\n    return this._getOrCreate(name);\n  }\n\n}\n\nmodule.exports = RequestQueueCollection;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/request_queue_collection.js?");

/***/ }),

/***/ "./src/resource_clients/run.js":
/*!*************************************!*\
  !*** ./src/resource_clients/run.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n\nconst DatasetClient = __webpack_require__(/*! ./dataset */ \"./src/resource_clients/dataset.js\");\n\nconst KeyValueStoreClient = __webpack_require__(/*! ./key_value_store */ \"./src/resource_clients/key_value_store.js\");\n\nconst LogClient = __webpack_require__(/*! ./log */ \"./src/resource_clients/log.js\");\n\nconst RequestQueueClient = __webpack_require__(/*! ./request_queue */ \"./src/resource_clients/request_queue.js\");\n\nconst {\n  pluckData,\n  parseDateFields\n} = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/**\n * @hideconstructor\n */\n\n\nclass RunClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: options.resourcePath || 'actor-runs',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-runs/run-object/get-run\n   * @param {object} [options]\n   * @param {number} [options.waitForFinish]\n   * @return {Promise<Run>}\n   */\n\n\n  async get(options = {}) {\n    ow(options, ow.object.exactShape({\n      waitForFinish: ow.optional.number\n    }));\n    return this._get(options);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-runs/abort-run/abort-run\n   * @param {object} [options]\n   * @param {object} [options.gracefully]\n   * @return {Promise<Run>}\n   */\n\n\n  async abort(options = {}) {\n    ow(options, ow.object.exactShape({\n      gracefully: ow.optional.boolean\n    }));\n    const response = await this.httpClient.call({\n      url: this._url('abort'),\n      method: 'POST',\n      params: this._params(options)\n    });\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-runs/metamorph-run/metamorph-run\n   * @param {string} targetActorId\n   * @param {*} [input]\n   * @param {object} [options]\n   * @param {object} [options.contentType]\n   * @param {object} [options.build]\n   * @return {Promise<Run>}\n   */\n\n\n  async metamorph(targetActorId, input, options = {}) {\n    ow(targetActorId, ow.string); // input can be anything, pointless to validate\n\n    ow(options, ow.object.exactShape({\n      contentType: ow.optional.string,\n      build: ow.optional.string\n    }));\n\n    const safeTargetActorId = this._toSafeId(targetActorId);\n\n    const params = {\n      targetActorId: safeTargetActorId,\n      build: options.build\n    };\n    const request = {\n      url: this._url('metamorph'),\n      method: 'POST',\n      data: input,\n      params: this._params(params),\n      // Apify internal property. Tells the request serialization interceptor\n      // to stringify functions to JSON, instead of omitting them.\n      stringifyFunctions: true\n    };\n\n    if (options.contentType) {\n      request.headers = {\n        'content-type': options.contentType\n      };\n    }\n\n    const response = await this.httpClient.call(request);\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-runs/resurrect-run/resurrect-run\n   * @param {object} [options]\n   * @param {string} [options.build]\n   * @param {number} [options.memory]\n   * @param {number} [options.timeout]\n   * @return {Promise<Run>}\n   */\n\n\n  async resurrect(options = {}) {\n    ow(options, ow.object.exactShape({\n      build: ow.optional.string,\n      memory: ow.optional.number,\n      timeout: ow.optional.number\n    }));\n    const response = await this.httpClient.call({\n      url: this._url('resurrect'),\n      method: 'POST',\n      params: this._params(options)\n    });\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * Returns a promise that resolves with the finished Run object when the provided actor run finishes\n   * or with the unfinished Run object when the `waitSecs` timeout lapses. The promise is NOT rejected\n   * based on run status. You can inspect the `status` property of the Run object to find out its status.\n   *\n   * The difference between this function and the `waitForFinish` parameter of the `get` method\n   * is the fact that this function can wait indefinitely. Its use is preferable to the\n   * `waitForFinish` parameter alone, which it uses internally.\n   *\n   * This is useful when you need to chain actor executions. Similar effect can be achieved\n   * by using webhooks, so be sure to review which technique fits your use-case better.\n   *\n   * @param {object} [options]\n   * @param {number} [options.waitSecs]\n   *  Maximum time to wait for the run to finish, in seconds.\n   *  If the limit is reached, the returned promise is resolved to a run object that will have\n   *  status `READY` or `RUNNING`. If `waitSecs` omitted, the function waits indefinitely.\n   * @returns {Promise<Run>}\n   */\n\n\n  async waitForFinish(options = {}) {\n    ow(options, ow.object.exactShape({\n      waitSecs: ow.optional.number\n    }));\n    return this._waitForFinish(options);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-runs/run-object-and-its-storages\n   *\n   * This also works through `actorClient.lastRun().dataset()`.\n   * https://docs.apify.com/api/v2#/reference/actors/last-run-object-and-its-storages\n   * @return {DatasetClient}\n   */\n\n\n  dataset() {\n    return new DatasetClient(this._subResourceOptions({\n      resourcePath: 'dataset'\n    }));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-runs/run-object-and-its-storages\n   *\n   * This also works through `actorClient.lastRun().keyValueStore()`.\n   * https://docs.apify.com/api/v2#/reference/actors/last-run-object-and-its-storages\n   * @return {KeyValueStoreClient}\n   */\n\n\n  keyValueStore() {\n    return new KeyValueStoreClient(this._subResourceOptions({\n      resourcePath: 'key-value-store'\n    }));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-runs/run-object-and-its-storages\n   *\n   * This also works through `actorClient.lastRun().requestQueue()`.\n   * https://docs.apify.com/api/v2#/reference/actors/last-run-object-and-its-storages\n   * @return {RequestQueueClient}\n   */\n\n\n  requestQueue() {\n    return new RequestQueueClient(this._subResourceOptions({\n      resourcePath: 'request-queue'\n    }));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-runs/run-object-and-its-storages\n   *\n   * This also works through `actorClient.lastRun().log()`.\n   * https://docs.apify.com/api/v2#/reference/actors/last-run-object-and-its-storages\n   * @return {LogClient}\n   */\n\n\n  log() {\n    return new LogClient(this._subResourceOptions({\n      resourcePath: 'log'\n    }));\n  }\n\n}\n\nmodule.exports = RunClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/run.js?");

/***/ }),

/***/ "./src/resource_clients/run_collection.js":
/*!************************************************!*\
  !*** ./src/resource_clients/run_collection.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const {\n  ACT_JOB_STATUSES\n} = __webpack_require__(/*! @apify/consts */ \"./node_modules/@apify/consts/index.js\");\n\nconst ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceCollectionClient = __webpack_require__(/*! ../base/resource_collection_client */ \"./src/base/resource_collection_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass RunCollectionClient extends ResourceCollectionClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'runs',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actors/run-collection/get-list-of-runs\n   * @param {object} [options]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.desc]\n   * @param {boolean} [options.status]\n   * @return {Promise<PaginationList>}\n   */\n\n\n  async list(options = {}) {\n    ow(options, ow.object.exactShape({\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      desc: ow.optional.boolean,\n      status: ow.optional.string.oneOf(Object.values(ACT_JOB_STATUSES))\n    }));\n    return this._list(options);\n  }\n\n}\n\nmodule.exports = RunCollectionClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/run_collection.js?");

/***/ }),

/***/ "./src/resource_clients/schedule.js":
/*!******************************************!*\
  !*** ./src/resource_clients/schedule.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n\nconst {\n  pluckData,\n  parseDateFields,\n  catchNotFoundOrThrow\n} = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/**\n * @hideconstructor\n */\n\n\nclass ScheduleClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'schedules',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/schedules/schedule-object/get-schedule\n   * @return {Promise<?Schedule>}\n   */\n\n\n  async get() {\n    return this._get();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/schedules/schedule-object/update-schedule\n   * @param {object} newFields\n   * @return {Promise<Schedule>}\n   */\n\n\n  async update(newFields) {\n    ow(newFields, ow.object);\n    return this._update(newFields);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/schedules/schedule-object/delete-schedule\n   * @return {Promise<void>}\n   */\n\n\n  async delete() {\n    return this._delete();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/schedules/schedule-log/get-schedule-log\n   * @return {Promise<?string>}\n   */\n\n\n  async getLog() {\n    const requestOpts = {\n      url: this._url('log'),\n      method: 'GET',\n      params: this._params()\n    };\n\n    try {\n      const response = await this.httpClient.call(requestOpts);\n      return parseDateFields(pluckData(response.data));\n    } catch (err) {\n      return catchNotFoundOrThrow(err);\n    }\n  }\n\n}\n\nmodule.exports = ScheduleClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/schedule.js?");

/***/ }),

/***/ "./src/resource_clients/schedule_collection.js":
/*!*****************************************************!*\
  !*** ./src/resource_clients/schedule_collection.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceCollectionClient = __webpack_require__(/*! ../base/resource_collection_client */ \"./src/base/resource_collection_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass ScheduleCollectionClient extends ResourceCollectionClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'schedules',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/schedules/schedules-collection/get-list-of-schedules\n   * @param {object} [options]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.desc]\n   * @return {Promise<PaginationList>}\n   */\n\n\n  async list(options = {}) {\n    ow(options, ow.object.exactShape({\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      desc: ow.optional.boolean\n    }));\n    return this._list(options);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/schedules/schedules-collection/create-schedule\n   * @param {object} [schedule]\n   * @return {Promise<Schedule>}\n   */\n\n\n  async create(schedule) {\n    ow(schedule, ow.optional.object);\n    return this._create(schedule);\n  }\n\n}\n\nmodule.exports = ScheduleCollectionClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/schedule_collection.js?");

/***/ }),

/***/ "./src/resource_clients/task.js":
/*!**************************************!*\
  !*** ./src/resource_clients/task.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst {\n  ACT_JOB_STATUSES\n} = __webpack_require__(/*! @apify/consts */ \"./node_modules/@apify/consts/index.js\");\n\nconst ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n\nconst RunCollectionClient = __webpack_require__(/*! ./run_collection */ \"./src/resource_clients/run_collection.js\");\n\nconst WebhookCollectionClient = __webpack_require__(/*! ./webhook_collection */ \"./src/resource_clients/webhook_collection.js\");\n\nconst RunClient = __webpack_require__(/*! ./run */ \"./src/resource_clients/run.js\");\n\nconst {\n  pluckData,\n  parseDateFields,\n  catchNotFoundOrThrow,\n  stringifyWebhooksToBase64\n} = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/**\n * @hideconstructor\n */\n\n\nclass TaskClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'actor-tasks',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/task-object/get-task\n   * @return {Promise<?Task>}\n   */\n\n\n  async get() {\n    return this._get();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/task-object/update-task\n   * @param {object} newFields\n   * @return {Promise<Task>}\n   */\n\n\n  async update(newFields) {\n    ow(newFields, ow.object);\n    return this._update(newFields);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/task-object/delete-task\n   * @return {Promise<void>}\n   */\n\n\n  async delete() {\n    return this._delete();\n  }\n  /**\n   * Starts a task and immediately returns the Run object.\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/run-collection/run-task\n   * @param {object} [input]\n   * @param {object} [options]\n   * @param {string} [options.build]\n   * @param {number} [options.memory]\n   * @param {number} [options.timeout]\n   * @param {number} [options.waitForFinish]\n   * @param {object[]} [options.webhooks]\n   * @return {Promise<Run>}\n   */\n\n\n  async start(input, options = {}) {\n    ow(input, ow.optional.object);\n    ow(options, ow.object.exactShape({\n      build: ow.optional.string,\n      memory: ow.optional.number,\n      timeout: ow.optional.number,\n      waitForFinish: ow.optional.number,\n      webhooks: ow.optional.array.ofType(ow.object)\n    }));\n    const {\n      waitForFinish,\n      timeout,\n      memory,\n      build\n    } = options;\n    const params = {\n      waitForFinish,\n      timeout,\n      memory,\n      build,\n      webhooks: stringifyWebhooksToBase64(options.webhooks)\n    };\n    const request = {\n      url: this._url('runs'),\n      method: 'POST',\n      data: input,\n      params: this._params(params),\n      // Apify internal property. Tells the request serialization interceptor\n      // to stringify functions to JSON, instead of omitting them.\n      stringifyFunctions: true\n    };\n    const response = await this.httpClient.call(request);\n    return parseDateFields(pluckData(response.data));\n  }\n  /**\n   * Starts a task and waits for it to finish before returning the Run object.\n   * It waits indefinitely, unless the `waitSecs` option is provided.\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/run-collection/run-task\n   * @param {object} [input]\n   * @param {object} [options]\n   * @param {string} [options.build]\n   * @param {number} [options.memory]\n   * @param {number} [options.timeout]\n   * @param {number} [options.waitSecs]\n   * @param {object[]} [options.webhooks]\n   * @return {Promise<Run>}\n   */\n\n\n  async call(input, options = {}) {\n    ow(input, ow.optional.object);\n    ow(options, ow.object.exactShape({\n      build: ow.optional.string,\n      memory: ow.optional.number,\n      timeout: ow.optional.number.not.negative,\n      waitSecs: ow.optional.number.not.negative,\n      webhooks: ow.optional.array.ofType(ow.object)\n    }));\n    const {\n      waitSecs,\n      ...startOptions\n    } = options;\n    const {\n      id\n    } = await this.start(input, startOptions); // Calling root client because we need access to top level API.\n    // Creating a new instance of RunClient here would only allow\n    // setting it up as a nested route under task API.\n\n    return this.apifyClient.run(id).waitForFinish({\n      waitSecs\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/task-input-object/get-task-input\n   * @return {Promise<?object>}\n   */\n\n\n  async getInput() {\n    const requestOpts = {\n      url: this._url('input'),\n      method: 'GET',\n      params: this._params()\n    };\n\n    try {\n      const response = await this.httpClient.call(requestOpts);\n      return response.data;\n    } catch (err) {\n      return catchNotFoundOrThrow(err);\n    }\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/task-input-object/update-task-input\n   * @return {Promise<object>}\n   */\n\n\n  async updateInput(newFields) {\n    const response = await this.httpClient.call({\n      url: this._url('input'),\n      method: 'PUT',\n      params: this._params(),\n      data: newFields\n    });\n    return response.data;\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/last-run-object-and-its-storages\n   * @param {object} options\n   * @param {string} options.status\n   * @return {RunClient}\n   */\n\n\n  lastRun(options = {}) {\n    ow(options, ow.object.exactShape({\n      status: ow.optional.string.oneOf(Object.values(ACT_JOB_STATUSES))\n    }));\n    return new RunClient(this._subResourceOptions({\n      id: 'last',\n      params: this._params(options),\n      resourcePath: 'runs'\n    }));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/run-collection\n   * @return {RunCollectionClient}\n   */\n\n\n  runs() {\n    return new RunCollectionClient(this._subResourceOptions({\n      resourcePath: 'runs'\n    }));\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/webhook-collection\n   * @return {WebhookCollectionClient}\n   */\n\n\n  webhooks() {\n    return new WebhookCollectionClient(this._subResourceOptions());\n  }\n\n}\n\nmodule.exports = TaskClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/task.js?");

/***/ }),

/***/ "./src/resource_clients/task_collection.js":
/*!*************************************************!*\
  !*** ./src/resource_clients/task_collection.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceCollectionClient = __webpack_require__(/*! ../base/resource_collection_client */ \"./src/base/resource_collection_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass TaskCollectionClient extends ResourceCollectionClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'actor-tasks',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/task-collection/get-list-of-tasks\n   * @param {object} [options]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.desc]\n   * @return {Promise<PaginationList>}\n   */\n\n\n  async list(options = {}) {\n    ow(options, ow.object.exactShape({\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      desc: ow.optional.boolean\n    }));\n    return this._list(options);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/actor-tasks/task-collection/create-task\n   * @param {object} [task]\n   * @return {Promise<Task>}\n   */\n\n\n  async create(task) {\n    ow(task, ow.optional.object);\n    return this._create(task);\n  }\n\n}\n\nmodule.exports = TaskCollectionClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/task_collection.js?");

/***/ }),

/***/ "./src/resource_clients/user.js":
/*!**************************************!*\
  !*** ./src/resource_clients/user.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass UserClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'users',\n      ...options\n    });\n  }\n  /**\n   * Depending on whether ApifyClient was created with a token,\n   * the method will either return public or private user data.\n   * https://docs.apify.com/api/v2#/reference/users\n   * @return {Promise<?User>}\n   */\n\n\n  async get() {\n    return this._get();\n  }\n\n}\n\nmodule.exports = UserClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/user.js?");

/***/ }),

/***/ "./src/resource_clients/webhook.js":
/*!*****************************************!*\
  !*** ./src/resource_clients/webhook.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n\nconst WebhookDispatchCollectionClient = __webpack_require__(/*! ./webhook_dispatch_collection */ \"./src/resource_clients/webhook_dispatch_collection.js\");\n\nconst {\n  pluckData,\n  parseDateFields,\n  catchNotFoundOrThrow\n} = __webpack_require__(/*! ../utils */ \"./src/utils.js\");\n/**\n * @hideconstructor\n */\n\n\nclass WebhookClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'webhooks',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhooks/webhook-object/get-webhook\n   * @return {Promise<?Webhook>}\n   */\n\n\n  async get() {\n    return this._get();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhooks/webhook-object/update-webhook\n   * @param {object} newFields\n   * @return {Promise<Webhook>}\n   */\n\n\n  async update(newFields) {\n    ow(newFields, ow.object);\n    return this._update(newFields);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhooks/webhook-object/delete-webhook\n   * @return {Promise<void>}\n   */\n\n\n  async delete() {\n    return this._delete();\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhooks/webhook-test/test-webhook\n   * @return {Promise<WebhookDispatch>}\n   */\n\n\n  async test() {\n    const request = {\n      url: this._url('test'),\n      method: 'POST',\n      params: this._params()\n    };\n\n    try {\n      const response = await this.httpClient.call(request);\n      return parseDateFields(pluckData(response.data));\n    } catch (err) {\n      return catchNotFoundOrThrow(err);\n    }\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhooks/dispatches-collection\n   * @return {WebhookDispatchCollectionClient}\n   */\n\n\n  dispatches() {\n    return new WebhookDispatchCollectionClient(this._subResourceOptions({\n      resourcePath: 'dispatches'\n    }));\n  }\n\n}\n\nmodule.exports = WebhookClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/webhook.js?");

/***/ }),

/***/ "./src/resource_clients/webhook_collection.js":
/*!****************************************************!*\
  !*** ./src/resource_clients/webhook_collection.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceCollectionClient = __webpack_require__(/*! ../base/resource_collection_client */ \"./src/base/resource_collection_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass WebhookCollectionClient extends ResourceCollectionClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'webhooks',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhooks/webhook-collection/get-list-of-webhooks\n   * @param {object} [options]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.desc]\n   * @return {Promise<PaginationList>}\n   */\n\n\n  async list(options = {}) {\n    ow(options, ow.object.exactShape({\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      desc: ow.optional.boolean\n    }));\n    return this._list(options);\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhooks/webhook-collection/create-webhook\n   * @param {object} [webhook]\n   * @return {Promise<Webhook>}\n   */\n\n\n  async create(webhook) {\n    ow(webhook, ow.optional.object);\n    return this._create(webhook);\n  }\n\n}\n\nmodule.exports = WebhookCollectionClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/webhook_collection.js?");

/***/ }),

/***/ "./src/resource_clients/webhook_dispatch.js":
/*!**************************************************!*\
  !*** ./src/resource_clients/webhook_dispatch.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ResourceClient = __webpack_require__(/*! ../base/resource_client */ \"./src/base/resource_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass WebhookDispatchClient extends ResourceClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'webhook-dispatches',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhook-dispatches/webhook-dispatch-object/get-webhook-dispatch\n   * @return {Promise<?WebhookDispatch>}\n   */\n\n\n  async get() {\n    return this._get();\n  }\n\n}\n\nmodule.exports = WebhookDispatchClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/webhook_dispatch.js?");

/***/ }),

/***/ "./src/resource_clients/webhook_dispatch_collection.js":
/*!*************************************************************!*\
  !*** ./src/resource_clients/webhook_dispatch_collection.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst ResourceCollectionClient = __webpack_require__(/*! ../base/resource_collection_client */ \"./src/base/resource_collection_client.js\");\n/**\n * @hideconstructor\n */\n\n\nclass WebhookDispatchCollectionClient extends ResourceCollectionClient {\n  /**\n   * @param {ApiClientOptions} options\n   */\n  constructor(options) {\n    super({\n      resourcePath: 'webhook-dispatches',\n      ...options\n    });\n  }\n  /**\n   * https://docs.apify.com/api/v2#/reference/webhook-dispatches/webhook-dispatches-collection/get-list-of-webhook-dispatches\n   * @param {object} [options]\n   * @param {number} [options.limit]\n   * @param {number} [options.offset]\n   * @param {boolean} [options.desc]\n   * @return {Promise<PaginationList>}\n   */\n\n\n  async list(options = {}) {\n    ow(options, ow.object.exactShape({\n      limit: ow.optional.number,\n      offset: ow.optional.number,\n      desc: ow.optional.boolean\n    }));\n    return this._list(options);\n  }\n\n}\n\nmodule.exports = WebhookDispatchCollectionClient;\n\n//# sourceURL=webpack://ApifyClient/./src/resource_clients/webhook_dispatch_collection.js?");

/***/ }),

/***/ "./src/statistics.js":
/*!***************************!*\
  !*** ./src/statistics.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nclass Statistics {\n  constructor() {\n    /**\n     * Number of Apify client function calls\n     * @type {number}\n     */\n    this.calls = 0;\n    /**\n     * Number of Apify API requests\n     * @type {number}\n     */\n\n    this.requests = 0;\n    /**\n     * Number of times the API returned 429 error. Errors on first attempt are\n     * counted at index 0. First retry error counts are on index 1 and so on.\n     * @type {number[]}\n     */\n\n    this.rateLimitErrors = [];\n  }\n\n  addRateLimitError(attempt) {\n    ow(attempt, ow.number.greaterThan(0)); // attempt is never 0,\n    // but we don't want index 0 empty\n\n    const index = attempt - 1;\n\n    this._fillBlanksWithZeroes(index);\n\n    this.rateLimitErrors[index]++;\n  }\n  /**\n   * Removes the necessity to pre-initialize array with correct\n   * number of zeroes by dynamically filling the empty indexes\n   * when necessary.\n   *\n   * @param inclusiveIndex\n   * @private\n   */\n\n\n  _fillBlanksWithZeroes(inclusiveIndex) {\n    if (this.rateLimitErrors.length <= inclusiveIndex) {\n      for (let k = 0; k <= inclusiveIndex; k++) {\n        if (typeof this.rateLimitErrors[k] !== 'number') {\n          this.rateLimitErrors[k] = 0;\n        }\n      }\n    }\n  }\n\n}\n\nmodule.exports = Statistics;\n\n//# sourceURL=webpack://ApifyClient/./src/statistics.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {const ow = __webpack_require__(/*! ow */ \"./node_modules/ow/dist/index.js\").default;\n\nconst util = __webpack_require__(/*! util */ 2);\n\nconst zlib = __webpack_require__(/*! zlib */ 3);\n\nconst PARSE_DATE_FIELDS_MAX_DEPTH = 3; // obj.data.someArrayField.[x].field\n\nconst PARSE_DATE_FIELDS_KEY_SUFFIX = 'At';\nconst NOT_FOUND_STATUS_CODE = 404;\nconst NOT_FOUND_TYPE = 'record-not-found';\nconst NOT_FOUND_ON_S3 = '<Code>NoSuchKey</Code>';\nconst MIN_GZIP_BYTES = 1024;\n/**\n * Returns object's 'data' property or throws if parameter is not an object,\n * or an object without a 'data' property.\n */\n\nfunction pluckData(obj) {\n  const isObject = !!obj && typeof obj === 'object';\n\n  if (isObject && typeof obj.data !== 'undefined') {\n    return obj.data;\n  }\n\n  throw new Error(`Expected response object with a \"data\" property, but received: ${obj}`);\n}\n/**\n * If given HTTP error has NOT_FOUND_STATUS_CODE status code then returns undefined.\n * Otherwise rethrows error.\n */\n\n\nfunction catchNotFoundOrThrow(err) {\n  const isNotFoundStatus = err.statusCode === NOT_FOUND_STATUS_CODE;\n  const isNotFoundMessage = err.type === NOT_FOUND_TYPE || err.message.includes(NOT_FOUND_ON_S3);\n  const isNotFoundError = isNotFoundStatus && isNotFoundMessage;\n  if (!isNotFoundError) throw err;\n}\n/**\n * Helper function that traverses JSON structure and parses fields such as modifiedAt or createdAt to dates.\n */\n\n\nfunction parseDateFields(input, depth = 0) {\n  if (depth > PARSE_DATE_FIELDS_MAX_DEPTH) return input;\n  if (Array.isArray(input)) return input.map(child => parseDateFields(child, depth + 1));\n  if (!input || typeof input !== 'object') return input;\n  return Object.entries(input).reduce((output, [k, v]) => {\n    const isValObject = !!v && typeof v === 'object';\n\n    if (k.endsWith(PARSE_DATE_FIELDS_KEY_SUFFIX)) {\n      output[k] = v ? new Date(v) : v;\n    } else if (isValObject || Array.isArray(v)) {\n      output[k] = parseDateFields(v, depth + 1);\n    } else {\n      output[k] = v;\n    }\n\n    return output;\n  }, {});\n}\n/**\n * Helper function that converts array of webhooks to base64 string\n */\n\n\nfunction stringifyWebhooksToBase64(webhooks) {\n  if (!webhooks) return;\n  const webhooksJson = JSON.stringify(webhooks);\n\n  if (isNode()) {\n    return Buffer.from(webhooksJson, 'utf8').toString('base64');\n  }\n\n  const encoder = new TextEncoder();\n  const uint8Array = encoder.encode(webhooksJson);\n  return btoa(String.fromCharCode(...uint8Array));\n}\n\nlet gzipPromise;\nif (isNode()) gzipPromise = util.promisify(zlib.gzip);\n/**\n * Gzip provided value, otherwise returns undefined.\n * @param value\n * @return {Promise<undefined|Buffer>}\n */\n\nasync function maybeGzipValue(value) {\n  if (!isNode()) return;\n  if (value == null) return; // Request compression is not that important so let's\n  // skip it instead of throwing for unsupported types.\n\n  const areDataStringOrBuffer = typeof value === 'string' || Buffer.isBuffer(value);\n  const areDataLargeEnough = Buffer.byteLength(value) >= MIN_GZIP_BYTES;\n\n  if (areDataStringOrBuffer && areDataLargeEnough) {\n    return gzipPromise(value);\n  }\n}\n/**\n * @return {boolean}\n */\n\n\nfunction isNode() {\n  return !!(typeof process !== 'undefined' && process.versions && process.versions.node);\n}\n/**\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuffer(value) {\n  return ow.isValid(value, ow.any(ow.buffer, ow.arrayBuffer, ow.typedArray));\n}\n/**\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isStream(value) {\n  return ow.isValid(value, ow.object.hasKeys('on', 'pipe'));\n}\n\nmodule.exports = {\n  isNode,\n  isBuffer,\n  isStream,\n  maybeGzipValue,\n  stringifyWebhooksToBase64,\n  parseDateFields,\n  catchNotFoundOrThrow,\n  pluckData\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/node-libs-browser/mock/process.js */ \"./node_modules/node-libs-browser/mock/process.js\")))\n\n//# sourceURL=webpack://ApifyClient/./src/utils.js?");

/***/ }),

/***/ 0:
/*!********************************!*\
  !*** agentkeepalive (ignored) ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack://ApifyClient/agentkeepalive_(ignored)?");

/***/ }),

/***/ 1:
/*!********************!*\
  !*** os (ignored) ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack://ApifyClient/os_(ignored)?");

/***/ }),

/***/ 2:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack://ApifyClient/util_(ignored)?");

/***/ }),

/***/ 3:
/*!**********************!*\
  !*** zlib (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack://ApifyClient/zlib_(ignored)?");

/***/ })

/******/ });
});